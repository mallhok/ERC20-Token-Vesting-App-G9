{
	"id": "45a4d6e0ea9beab92332cc23370a8aeb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"vesting_tokens_sushmita.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract VestingContract {\r\n    using SafeMath for uint256;\r\n\r\n    address public owner;\r\n    ERC20 public token;\r\n\r\n    struct VestingSchedule {\r\n        uint256 startTime;\r\n        uint256 cliffDuration;\r\n        uint256 vestingDuration;\r\n        uint256 slicePeriod;\r\n        uint256 totalAmount;\r\n        bool revocable;\r\n        uint256 vestedTokens;\r\n        bool revoked;\r\n    }\r\n\r\n    mapping(address => VestingSchedule) public vestingSchedules;\r\n\r\n    event VestingScheduleCreated(\r\n        address indexed beneficiary,\r\n        uint256 startTime,\r\n        uint256 cliffDuration,\r\n        uint256 vestingDuration,\r\n        uint256 slicePeriod,\r\n        uint256 totalAmount,\r\n        bool revocable\r\n    );\r\n\r\n    event TokensReleased(address indexed beneficiary, uint256 amount);\r\n\r\n    event VestingRevoked(address indexed beneficiary);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Not the owner\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyBeneficiary(address beneficiary) {\r\n        require(\r\n            msg.sender == beneficiary || msg.sender == owner,\r\n            \"Not the beneficiary\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    constructor(ERC20 _token) {\r\n        owner = msg.sender;\r\n        token = _token;\r\n    }\r\n\r\n    function createVestingSchedule(\r\n        address beneficiary,\r\n        uint256 startTime,\r\n        uint256 cliffDuration,\r\n        uint256 vestingDuration,\r\n        uint256 slicePeriod,\r\n        uint256 totalAmount,\r\n        bool revocable\r\n    ) external onlyOwner {\r\n        require(\r\n            vestingSchedules[beneficiary].startTime == 0,\r\n            \"Vesting schedule already exists [in createVestingSchedule()]\"\r\n        );\r\n        require(\r\n            totalAmount > 0 && vestingDuration > 0,\r\n            \"Invalid vesting parameters [in createVestingSchedule()]\"\r\n        );\r\n\r\n        VestingSchedule storage schedule = vestingSchedules[beneficiary];\r\n        schedule.startTime = startTime;\r\n        schedule.cliffDuration = cliffDuration;\r\n        schedule.vestingDuration = vestingDuration;\r\n        schedule.slicePeriod = slicePeriod;\r\n        schedule.totalAmount = totalAmount;\r\n        schedule.revocable = revocable;\r\n\r\n        emit VestingScheduleCreated(\r\n            beneficiary,\r\n            startTime,\r\n            cliffDuration,\r\n            vestingDuration,\r\n            slicePeriod,\r\n            totalAmount,\r\n            revocable\r\n        );\r\n    }\r\n\r\n    function calculateReleasableTokens(address beneficiary)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        VestingSchedule memory schedule = vestingSchedules[beneficiary];\r\n\r\n        if (block.timestamp < schedule.startTime.add(schedule.cliffDuration)) {\r\n            return 0; // Tokens are not vested yet\r\n        }\r\n\r\n        uint256 elapsedSinceCliff = block.timestamp.sub(schedule.startTime).sub(\r\n            schedule.cliffDuration\r\n        );\r\n\r\n        uint256 totalVestingPeriods = schedule.vestingDuration.div(\r\n            schedule.slicePeriod\r\n        );\r\n        uint256 vestedPeriods = elapsedSinceCliff.div(schedule.slicePeriod);\r\n\r\n        if (vestedPeriods >= totalVestingPeriods) {\r\n            return schedule.totalAmount;\r\n        }\r\n\r\n        uint256 vestingSlice = schedule.totalAmount.div(totalVestingPeriods);\r\n        return vestingSlice.mul(vestedPeriods);\r\n    }\r\n\r\n    function releaseTokens() external {\r\n        VestingSchedule storage schedule = vestingSchedules[msg.sender];\r\n        require(schedule.startTime > 0, \"No vesting schedule found [in releaseTokens()]\");\r\n        require(!schedule.revoked, \"Vesting schedule revoked [in releaseTokens()]\");\r\n\r\n        uint256 releasableAmount = calculateReleasableTokens(msg.sender);\r\n        require(releasableAmount > 0, \"No tokens are currently vested [in releaseTokens()]\");\r\n\r\n        schedule.vestedTokens = schedule.vestedTokens.add(releasableAmount);\r\n\r\n        token.transfer(msg.sender, releasableAmount);\r\n\r\n        emit TokensReleased(msg.sender, releasableAmount);\r\n    }\r\n\r\n    function revokeVestingSchedule(address beneficiary) external onlyOwner {\r\n        VestingSchedule storage schedule = vestingSchedules[beneficiary];\r\n        require(schedule.revocable, \"Vesting schedule not revocable [in revokeVestingSchedule()]\");\r\n        require(!schedule.revoked, \"Vesting schedule already revoked [in revokeVestingSchedule()]\");\r\n\r\n        schedule.revoked = true;\r\n\r\n        uint256 remainingTokens = schedule.totalAmount.sub(\r\n            schedule.vestedTokens\r\n        );\r\n        if (remainingTokens > 0) {\r\n            token.transfer(owner, remainingTokens);\r\n        }\r\n\r\n        emit VestingRevoked(beneficiary);\r\n    }\r\n\r\n    function getTime() view external returns(uint256){\r\n        return block.timestamp;\r\n    }\r\n\r\n    function getBalance(address beneficiary) view external returns(uint256){\r\n        return token.balanceOf(beneficiary);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220abc7871e4afd975fd78b6d6fd17f0ad1b1822dfd2050c2b628fbe297232a328064736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220abc7871e4afd975fd78b6d6fd17f0ad1b1822dfd2050c2b628fbe297232a328064736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xC7 DUP8 0x1E 0x4A REVERT SWAP8 PUSH0 0xD7 DUP12 PUSH14 0x6FD17F0AD1B1822DFD2050C2B628 0xFB 0xE2 SWAP8 0x23 0x2A ORIGIN DUP1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "482:6210:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220abc7871e4afd975fd78b6d6fd17f0ad1b1822dfd2050c2b628fbe297232a328064736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xC7 DUP8 0x1E 0x4A REVERT SWAP8 PUSH0 0xD7 DUP12 PUSH14 0x6FD17F0AD1B1822DFD2050C2B628 0xFB 0xE2 SWAP8 0x23 0x2A ORIGIN DUP1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "482:6210:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220abc7871e4afd975fd78b6d6fd17f0ad1b1822dfd2050c2b628fbe297232a328064736f6c63430008160033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"vesting_tokens_sushmita.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"vesting_tokens_sushmita.sol": {
				"VestingContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ERC20",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensReleased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "VestingRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "cliffDuration",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "vestingDuration",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "slicePeriod",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "revocable",
									"type": "bool"
								}
							],
							"name": "VestingScheduleCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "calculateReleasableTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cliffDuration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "vestingDuration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "slicePeriod",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalAmount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "revocable",
									"type": "bool"
								}
							],
							"name": "createVestingSchedule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "releaseTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "revokeVestingSchedule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "vestingSchedules",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cliffDuration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "vestingDuration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "slicePeriod",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalAmount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "revocable",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "vestedTokens",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "revoked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"vesting_tokens_sushmita.sol\":179:5097  contract VestingContract {... */\n  mstore(0x40, 0x80)\n    /* \"vesting_tokens_sushmita.sol\":1340:1428  constructor(ERC20 _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"vesting_tokens_sushmita.sol\":1385:1395  msg.sender */\n  caller\n    /* \"vesting_tokens_sushmita.sol\":1377:1382  owner */\n  0x00\n  dup1\n    /* \"vesting_tokens_sushmita.sol\":1377:1395  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"vesting_tokens_sushmita.sol\":1414:1420  _token */\n  dup1\n    /* \"vesting_tokens_sushmita.sol\":1406:1411  token */\n  0x01\n  0x00\n    /* \"vesting_tokens_sushmita.sol\":1406:1420  token = _token */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"vesting_tokens_sushmita.sol\":1340:1428  constructor(ERC20 _token) {... */\n  pop\n    /* \"vesting_tokens_sushmita.sol\":179:5097  contract VestingContract {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_21\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:677   */\ntag_12:\n    /* \"#utility.yul\":618:625   */\n  0x00\n    /* \"#utility.yul\":647:671   */\n  tag_23\n    /* \"#utility.yul\":665:670   */\n  dup3\n    /* \"#utility.yul\":647:671   */\n  tag_11\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":636:671   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:677   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":683:831   */\ntag_13:\n    /* \"#utility.yul\":769:806   */\n  tag_25\n    /* \"#utility.yul\":800:805   */\n  dup2\n    /* \"#utility.yul\":769:806   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":762:767   */\n  dup2\n    /* \"#utility.yul\":759:807   */\n  eq\n    /* \"#utility.yul\":749:825   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":821:822   */\n  0x00\n    /* \"#utility.yul\":818:819   */\n  dup1\n    /* \"#utility.yul\":811:823   */\n  revert\n    /* \"#utility.yul\":749:825   */\ntag_26:\n    /* \"#utility.yul\":683:831   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":837:1006   */\ntag_14:\n    /* \"#utility.yul\":907:912   */\n  0x00\n    /* \"#utility.yul\":938:944   */\n  dup2\n    /* \"#utility.yul\":932:945   */\n  mload\n    /* \"#utility.yul\":923:945   */\n  swap1\n  pop\n    /* \"#utility.yul\":954:1000   */\n  tag_28\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":954:1000   */\n  tag_13\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":837:1006   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1012:1389   */\ntag_3:\n    /* \"#utility.yul\":1095:1101   */\n  0x00\n    /* \"#utility.yul\":1144:1146   */\n  0x20\n    /* \"#utility.yul\":1132:1141   */\n  dup3\n    /* \"#utility.yul\":1123:1130   */\n  dup5\n    /* \"#utility.yul\":1119:1142   */\n  sub\n    /* \"#utility.yul\":1115:1147   */\n  slt\n    /* \"#utility.yul\":1112:1231   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1150:1229   */\n  tag_31\n  tag_8\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1112:1231   */\ntag_30:\n    /* \"#utility.yul\":1270:1271   */\n  0x00\n    /* \"#utility.yul\":1295:1372   */\n  tag_32\n    /* \"#utility.yul\":1364:1371   */\n  dup5\n    /* \"#utility.yul\":1355:1361   */\n  dup3\n    /* \"#utility.yul\":1344:1353   */\n  dup6\n    /* \"#utility.yul\":1340:1362   */\n  add\n    /* \"#utility.yul\":1295:1372   */\n  tag_14\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1285:1372   */\n  swap2\n  pop\n    /* \"#utility.yul\":1241:1382   */\n  pop\n    /* \"#utility.yul\":1012:1389   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"vesting_tokens_sushmita.sol\":179:5097  contract VestingContract {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"vesting_tokens_sushmita.sol\":179:5097  contract VestingContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa96f8668\n      gt\n      tag_12\n      jumpi\n      dup1\n      0xa96f8668\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf035a272\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf8b2cb4f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xfdb20ccb\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x4495e827\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x557ed1ba\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7dc8a8aa\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"vesting_tokens_sushmita.sol\":1436:2615  function createVestingSchedule(... */\n    tag_3:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      stop\n        /* \"vesting_tokens_sushmita.sol\":4871:4961  function getTime() view external returns(uint256){... */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"vesting_tokens_sushmita.sol\":2623:3534  function calculateReleasableTokens(address beneficiary)... */\n    tag_5:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"vesting_tokens_sushmita.sol\":246:266  address public owner */\n    tag_6:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"vesting_tokens_sushmita.sol\":3542:4207  function releaseTokens() external {... */\n    tag_7:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      stop\n        /* \"vesting_tokens_sushmita.sol\":4215:4863  function revokeVestingSchedule(address beneficiary) external onlyOwner {... */\n    tag_8:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      stop\n        /* \"vesting_tokens_sushmita.sol\":4969:5094  function getBalance(address beneficiary) view external returns(uint256){... */\n    tag_9:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"vesting_tokens_sushmita.sol\":273:291  ERC20 public token */\n    tag_10:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"vesting_tokens_sushmita.sol\":572:631  mapping(address => VestingSchedule) public vestingSchedules */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_46\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"vesting_tokens_sushmita.sol\":1436:2615  function createVestingSchedule(... */\n    tag_16:\n        /* \"vesting_tokens_sushmita.sol\":1087:1092  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"vesting_tokens_sushmita.sol\":1073:1092  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"vesting_tokens_sushmita.sol\":1073:1083  msg.sender */\n      caller\n        /* \"vesting_tokens_sushmita.sol\":1073:1092  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"vesting_tokens_sushmita.sol\":1065:1110  require(msg.sender == owner, \"Not the owner\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_49:\n        /* \"vesting_tokens_sushmita.sol\":1778:1779  0 */\n      0x00\n        /* \"vesting_tokens_sushmita.sol\":1735:1751  vestingSchedules */\n      0x02\n        /* \"vesting_tokens_sushmita.sol\":1735:1764  vestingSchedules[beneficiary] */\n      0x00\n        /* \"vesting_tokens_sushmita.sol\":1752:1763  beneficiary */\n      dup10\n        /* \"vesting_tokens_sushmita.sol\":1735:1764  vestingSchedules[beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"vesting_tokens_sushmita.sol\":1735:1774  vestingSchedules[beneficiary].startTime */\n      0x00\n      add\n      sload\n        /* \"vesting_tokens_sushmita.sol\":1735:1779  vestingSchedules[beneficiary].startTime == 0 */\n      eq\n        /* \"vesting_tokens_sushmita.sol\":1713:1867  require(... */\n      tag_53\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_53:\n        /* \"vesting_tokens_sushmita.sol\":1914:1915  0 */\n      0x00\n        /* \"vesting_tokens_sushmita.sol\":1900:1911  totalAmount */\n      dup3\n        /* \"vesting_tokens_sushmita.sol\":1900:1915  totalAmount > 0 */\n      gt\n        /* \"vesting_tokens_sushmita.sol\":1900:1938  totalAmount > 0 && vestingDuration > 0 */\n      dup1\n      iszero\n      tag_56\n      jumpi\n      pop\n        /* \"vesting_tokens_sushmita.sol\":1937:1938  0 */\n      0x00\n        /* \"vesting_tokens_sushmita.sol\":1919:1934  vestingDuration */\n      dup5\n        /* \"vesting_tokens_sushmita.sol\":1919:1938  vestingDuration > 0 */\n      gt\n        /* \"vesting_tokens_sushmita.sol\":1900:1938  totalAmount > 0 && vestingDuration > 0 */\n    tag_56:\n        /* \"vesting_tokens_sushmita.sol\":1878:2021  require(... */\n      tag_57\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_57:\n        /* \"vesting_tokens_sushmita.sol\":2034:2066  VestingSchedule storage schedule */\n      0x00\n        /* \"vesting_tokens_sushmita.sol\":2069:2085  vestingSchedules */\n      0x02\n        /* \"vesting_tokens_sushmita.sol\":2069:2098  vestingSchedules[beneficiary] */\n      0x00\n        /* \"vesting_tokens_sushmita.sol\":2086:2097  beneficiary */\n      dup10\n        /* \"vesting_tokens_sushmita.sol\":2069:2098  vestingSchedules[beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"vesting_tokens_sushmita.sol\":2034:2098  VestingSchedule storage schedule = vestingSchedules[beneficiary] */\n      swap1\n      pop\n        /* \"vesting_tokens_sushmita.sol\":2130:2139  startTime */\n      dup7\n        /* \"vesting_tokens_sushmita.sol\":2109:2117  schedule */\n      dup2\n        /* \"vesting_tokens_sushmita.sol\":2109:2127  schedule.startTime */\n      0x00\n      add\n        /* \"vesting_tokens_sushmita.sol\":2109:2139  schedule.startTime = startTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"vesting_tokens_sushmita.sol\":2175:2188  cliffDuration */\n      dup6\n        /* \"vesting_tokens_sushmita.sol\":2150:2158  schedule */\n      dup2\n        /* \"vesting_tokens_sushmita.sol\":2150:2172  schedule.cliffDuration */\n      0x01\n      add\n        /* \"vesting_tokens_sushmita.sol\":2150:2188  schedule.cliffDuration = cliffDuration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"vesting_tokens_sushmita.sol\":2226:2241  vestingDuration */\n      dup5\n        /* \"vesting_tokens_sushmita.sol\":2199:2207  schedule */\n      dup2\n        /* \"vesting_tokens_sushmita.sol\":2199:2223  schedule.vestingDuration */\n      0x02\n      add\n        /* \"vesting_tokens_sushmita.sol\":2199:2241  schedule.vestingDuration = vestingDuration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"vesting_tokens_sushmita.sol\":2275:2286  slicePeriod */\n      dup4\n        /* \"vesting_tokens_sushmita.sol\":2252:2260  schedule */\n      dup2\n        /* \"vesting_tokens_sushmita.sol\":2252:2272  schedule.slicePeriod */\n      0x03\n      add\n        /* \"vesting_tokens_sushmita.sol\":2252:2286  schedule.slicePeriod = slicePeriod */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"vesting_tokens_sushmita.sol\":2320:2331  totalAmount */\n      dup3\n        /* \"vesting_tokens_sushmita.sol\":2297:2305  schedule */\n      dup2\n        /* \"vesting_tokens_sushmita.sol\":2297:2317  schedule.totalAmount */\n      0x04\n      add\n        /* \"vesting_tokens_sushmita.sol\":2297:2331  schedule.totalAmount = totalAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"vesting_tokens_sushmita.sol\":2363:2372  revocable */\n      dup2\n        /* \"vesting_tokens_sushmita.sol\":2342:2350  schedule */\n      dup2\n        /* \"vesting_tokens_sushmita.sol\":2342:2360  schedule.revocable */\n      0x05\n      add\n      0x00\n        /* \"vesting_tokens_sushmita.sol\":2342:2372  schedule.revocable = revocable */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"vesting_tokens_sushmita.sol\":2427:2438  beneficiary */\n      dup8\n        /* \"vesting_tokens_sushmita.sol\":2390:2607  VestingScheduleCreated(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbea02a5045606a667ff06eb235c005b4f95b55a10c174b5aae63ba6be2ae9808\n        /* \"vesting_tokens_sushmita.sol\":2453:2462  startTime */\n      dup9\n        /* \"vesting_tokens_sushmita.sol\":2477:2490  cliffDuration */\n      dup9\n        /* \"vesting_tokens_sushmita.sol\":2505:2520  vestingDuration */\n      dup9\n        /* \"vesting_tokens_sushmita.sol\":2535:2546  slicePeriod */\n      dup9\n        /* \"vesting_tokens_sushmita.sol\":2561:2572  totalAmount */\n      dup9\n        /* \"vesting_tokens_sushmita.sol\":2587:2596  revocable */\n      dup9\n        /* \"vesting_tokens_sushmita.sol\":2390:2607  VestingScheduleCreated(... */\n      mload(0x40)\n      tag_60\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"vesting_tokens_sushmita.sol\":1702:2615  {... */\n      pop\n        /* \"vesting_tokens_sushmita.sol\":1436:2615  function createVestingSchedule(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"vesting_tokens_sushmita.sol\":4871:4961  function getTime() view external returns(uint256){... */\n    tag_18:\n        /* \"vesting_tokens_sushmita.sol\":4912:4919  uint256 */\n      0x00\n        /* \"vesting_tokens_sushmita.sol\":4938:4953  block.timestamp */\n      timestamp\n        /* \"vesting_tokens_sushmita.sol\":4931:4953  return block.timestamp */\n      swap1\n      pop\n        /* \"vesting_tokens_sushmita.sol\":4871:4961  function getTime() view external returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"vesting_tokens_sushmita.sol\":2623:3534  function calculateReleasableTokens(address beneficiary)... */\n    tag_24:\n        /* \"vesting_tokens_sushmita.sol\":2727:2734  uint256 */\n      0x00\n        /* \"vesting_tokens_sushmita.sol\":2752:2783  VestingSchedule memory schedule */\n      dup1\n        /* \"vesting_tokens_sushmita.sol\":2786:2802  vestingSchedules */\n      0x02\n        /* \"vesting_tokens_sushmita.sol\":2786:2815  vestingSchedules[beneficiary] */\n      0x00\n        /* \"vesting_tokens_sushmita.sol\":2803:2814  beneficiary */\n      dup5\n        /* \"vesting_tokens_sushmita.sol\":2786:2815  vestingSchedules[beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"vesting_tokens_sushmita.sol\":2752:2815  VestingSchedule memory schedule = vestingSchedules[beneficiary] */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x07\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"vesting_tokens_sushmita.sol\":2850:2896  schedule.startTime.add(schedule.cliffDuration) */\n      tag_64\n        /* \"vesting_tokens_sushmita.sol\":2873:2881  schedule */\n      dup2\n        /* \"vesting_tokens_sushmita.sol\":2873:2895  schedule.cliffDuration */\n      0x20\n      add\n      mload\n        /* \"vesting_tokens_sushmita.sol\":2850:2858  schedule */\n      dup3\n        /* \"vesting_tokens_sushmita.sol\":2850:2868  schedule.startTime */\n      0x00\n      add\n      mload\n        /* \"vesting_tokens_sushmita.sol\":2850:2872  schedule.startTime.add */\n      tag_65\n      swap1\n        /* \"vesting_tokens_sushmita.sol\":2850:2896  schedule.startTime.add(schedule.cliffDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_64:\n        /* \"vesting_tokens_sushmita.sol\":2832:2847  block.timestamp */\n      timestamp\n        /* \"vesting_tokens_sushmita.sol\":2832:2896  block.timestamp < schedule.startTime.add(schedule.cliffDuration) */\n      lt\n        /* \"vesting_tokens_sushmita.sol\":2828:2962  if (block.timestamp < schedule.startTime.add(schedule.cliffDuration)) {... */\n      iszero\n      tag_66\n      jumpi\n        /* \"vesting_tokens_sushmita.sol\":2920:2921  0 */\n      0x00\n        /* \"vesting_tokens_sushmita.sol\":2913:2921  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_63)\n        /* \"vesting_tokens_sushmita.sol\":2828:2962  if (block.timestamp < schedule.startTime.add(schedule.cliffDuration)) {... */\n    tag_66:\n        /* \"vesting_tokens_sushmita.sol\":2974:2999  uint256 elapsedSinceCliff */\n      0x00\n        /* \"vesting_tokens_sushmita.sol\":3002:3093  block.timestamp.sub(schedule.startTime).sub(... */\n      tag_67\n        /* \"vesting_tokens_sushmita.sol\":3060:3068  schedule */\n      dup3\n        /* \"vesting_tokens_sushmita.sol\":3060:3082  schedule.cliffDuration */\n      0x20\n      add\n      mload\n        /* \"vesting_tokens_sushmita.sol\":3002:3041  block.timestamp.sub(schedule.startTime) */\n      tag_68\n        /* \"vesting_tokens_sushmita.sol\":3022:3030  schedule */\n      dup5\n        /* \"vesting_tokens_sushmita.sol\":3022:3040  schedule.startTime */\n      0x00\n      add\n      mload\n        /* \"vesting_tokens_sushmita.sol\":3002:3017  block.timestamp */\n      timestamp\n        /* \"vesting_tokens_sushmita.sol\":3002:3021  block.timestamp.sub */\n      tag_69\n      swap1\n        /* \"vesting_tokens_sushmita.sol\":3002:3041  block.timestamp.sub(schedule.startTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_68:\n        /* \"vesting_tokens_sushmita.sol\":3002:3045  block.timestamp.sub(schedule.startTime).sub */\n      tag_69\n      swap1\n        /* \"vesting_tokens_sushmita.sol\":3002:3093  block.timestamp.sub(schedule.startTime).sub(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"vesting_tokens_sushmita.sol\":2974:3093  uint256 elapsedSinceCliff = block.timestamp.sub(schedule.startTime).sub(... */\n      swap1\n      pop\n        /* \"vesting_tokens_sushmita.sol\":3106:3133  uint256 totalVestingPeriods */\n      0x00\n        /* \"vesting_tokens_sushmita.sol\":3136:3210  schedule.vestingDuration.div(... */\n      tag_70\n        /* \"vesting_tokens_sushmita.sol\":3179:3187  schedule */\n      dup4\n        /* \"vesting_tokens_sushmita.sol\":3179:3199  schedule.slicePeriod */\n      0x60\n      add\n      mload\n        /* \"vesting_tokens_sushmita.sol\":3136:3144  schedule */\n      dup5\n        /* \"vesting_tokens_sushmita.sol\":3136:3160  schedule.vestingDuration */\n      0x40\n      add\n      mload\n        /* \"vesting_tokens_sushmita.sol\":3136:3164  schedule.vestingDuration.div */\n      tag_71\n      swap1\n        /* \"vesting_tokens_sushmita.sol\":3136:3210  schedule.vestingDuration.div(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_70:\n        /* \"vesting_tokens_sushmita.sol\":3106:3210  uint256 totalVestingPeriods = schedule.vestingDuration.div(... */\n      swap1\n      pop\n        /* \"vesting_tokens_sushmita.sol\":3221:3242  uint256 vestedPeriods */\n      0x00\n        /* \"vesting_tokens_sushmita.sol\":3245:3288  elapsedSinceCliff.div(schedule.slicePeriod) */\n      tag_72\n        /* \"vesting_tokens_sushmita.sol\":3267:3275  schedule */\n      dup5\n        /* \"vesting_tokens_sushmita.sol\":3267:3287  schedule.slicePeriod */\n      0x60\n      add\n      mload\n        /* \"vesting_tokens_sushmita.sol\":3245:3262  elapsedSinceCliff */\n      dup5\n        /* \"vesting_tokens_sushmita.sol\":3245:3266  elapsedSinceCliff.div */\n      tag_71\n      swap1\n        /* \"vesting_tokens_sushmita.sol\":3245:3288  elapsedSinceCliff.div(schedule.slicePeriod) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_72:\n        /* \"vesting_tokens_sushmita.sol\":3221:3288  uint256 vestedPeriods = elapsedSinceCliff.div(schedule.slicePeriod) */\n      swap1\n      pop\n        /* \"vesting_tokens_sushmita.sol\":3322:3341  totalVestingPeriods */\n      dup2\n        /* \"vesting_tokens_sushmita.sol\":3305:3318  vestedPeriods */\n      dup2\n        /* \"vesting_tokens_sushmita.sol\":3305:3341  vestedPeriods >= totalVestingPeriods */\n      lt\n        /* \"vesting_tokens_sushmita.sol\":3301:3397  if (vestedPeriods >= totalVestingPeriods) {... */\n      tag_73\n      jumpi\n        /* \"vesting_tokens_sushmita.sol\":3365:3373  schedule */\n      dup4\n        /* \"vesting_tokens_sushmita.sol\":3365:3385  schedule.totalAmount */\n      0x80\n      add\n      mload\n        /* \"vesting_tokens_sushmita.sol\":3358:3385  return schedule.totalAmount */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_63)\n        /* \"vesting_tokens_sushmita.sol\":3301:3397  if (vestedPeriods >= totalVestingPeriods) {... */\n    tag_73:\n        /* \"vesting_tokens_sushmita.sol\":3409:3429  uint256 vestingSlice */\n      0x00\n        /* \"vesting_tokens_sushmita.sol\":3432:3477  schedule.totalAmount.div(totalVestingPeriods) */\n      tag_74\n        /* \"vesting_tokens_sushmita.sol\":3457:3476  totalVestingPeriods */\n      dup4\n        /* \"vesting_tokens_sushmita.sol\":3432:3440  schedule */\n      dup7\n        /* \"vesting_tokens_sushmita.sol\":3432:3452  schedule.totalAmount */\n      0x80\n      add\n      mload\n        /* \"vesting_tokens_sushmita.sol\":3432:3456  schedule.totalAmount.div */\n      tag_71\n      swap1\n        /* \"vesting_tokens_sushmita.sol\":3432:3477  schedule.totalAmount.div(totalVestingPeriods) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_74:\n        /* \"vesting_tokens_sushmita.sol\":3409:3477  uint256 vestingSlice = schedule.totalAmount.div(totalVestingPeriods) */\n      swap1\n      pop\n        /* \"vesting_tokens_sushmita.sol\":3495:3526  vestingSlice.mul(vestedPeriods) */\n      tag_75\n        /* \"vesting_tokens_sushmita.sol\":3512:3525  vestedPeriods */\n      dup3\n        /* \"vesting_tokens_sushmita.sol\":3495:3507  vestingSlice */\n      dup3\n        /* \"vesting_tokens_sushmita.sol\":3495:3511  vestingSlice.mul */\n      tag_76\n      swap1\n        /* \"vesting_tokens_sushmita.sol\":3495:3526  vestingSlice.mul(vestedPeriods) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_75:\n        /* \"vesting_tokens_sushmita.sol\":3488:3526  return vestingSlice.mul(vestedPeriods) */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"vesting_tokens_sushmita.sol\":2623:3534  function calculateReleasableTokens(address beneficiary)... */\n    tag_63:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"vesting_tokens_sushmita.sol\":246:266  address public owner */\n    tag_27:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"vesting_tokens_sushmita.sol\":3542:4207  function releaseTokens() external {... */\n    tag_31:\n        /* \"vesting_tokens_sushmita.sol\":3587:3619  VestingSchedule storage schedule */\n      0x00\n        /* \"vesting_tokens_sushmita.sol\":3622:3638  vestingSchedules */\n      0x02\n        /* \"vesting_tokens_sushmita.sol\":3622:3650  vestingSchedules[msg.sender] */\n      0x00\n        /* \"vesting_tokens_sushmita.sol\":3639:3649  msg.sender */\n      caller\n        /* \"vesting_tokens_sushmita.sol\":3622:3650  vestingSchedules[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"vesting_tokens_sushmita.sol\":3587:3650  VestingSchedule storage schedule = vestingSchedules[msg.sender] */\n      swap1\n      pop\n        /* \"vesting_tokens_sushmita.sol\":3690:3691  0 */\n      0x00\n        /* \"vesting_tokens_sushmita.sol\":3669:3677  schedule */\n      dup2\n        /* \"vesting_tokens_sushmita.sol\":3669:3687  schedule.startTime */\n      0x00\n      add\n      sload\n        /* \"vesting_tokens_sushmita.sol\":3669:3691  schedule.startTime > 0 */\n      gt\n        /* \"vesting_tokens_sushmita.sol\":3661:3742  require(schedule.startTime > 0, \"No vesting schedule found [in releaseTokens()]\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"vesting_tokens_sushmita.sol\":3762:3770  schedule */\n      dup1\n        /* \"vesting_tokens_sushmita.sol\":3762:3778  schedule.revoked */\n      0x07\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"vesting_tokens_sushmita.sol\":3761:3778  !schedule.revoked */\n      iszero\n        /* \"vesting_tokens_sushmita.sol\":3753:3828  require(!schedule.revoked, \"Vesting schedule revoked [in releaseTokens()]\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"vesting_tokens_sushmita.sol\":3841:3865  uint256 releasableAmount */\n      0x00\n        /* \"vesting_tokens_sushmita.sol\":3868:3905  calculateReleasableTokens(msg.sender) */\n      tag_84\n        /* \"vesting_tokens_sushmita.sol\":3894:3904  msg.sender */\n      caller\n        /* \"vesting_tokens_sushmita.sol\":3868:3893  calculateReleasableTokens */\n      tag_24\n        /* \"vesting_tokens_sushmita.sol\":3868:3905  calculateReleasableTokens(msg.sender) */\n      jump\t// in\n    tag_84:\n        /* \"vesting_tokens_sushmita.sol\":3841:3905  uint256 releasableAmount = calculateReleasableTokens(msg.sender) */\n      swap1\n      pop\n        /* \"vesting_tokens_sushmita.sol\":3943:3944  0 */\n      0x00\n        /* \"vesting_tokens_sushmita.sol\":3924:3940  releasableAmount */\n      dup2\n        /* \"vesting_tokens_sushmita.sol\":3924:3944  releasableAmount > 0 */\n      gt\n        /* \"vesting_tokens_sushmita.sol\":3916:4000  require(releasableAmount > 0, \"No tokens are currently vested [in releaseTokens()]\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"vesting_tokens_sushmita.sol\":4037:4080  schedule.vestedTokens.add(releasableAmount) */\n      tag_88\n        /* \"vesting_tokens_sushmita.sol\":4063:4079  releasableAmount */\n      dup2\n        /* \"vesting_tokens_sushmita.sol\":4037:4045  schedule */\n      dup4\n        /* \"vesting_tokens_sushmita.sol\":4037:4058  schedule.vestedTokens */\n      0x06\n      add\n      sload\n        /* \"vesting_tokens_sushmita.sol\":4037:4062  schedule.vestedTokens.add */\n      tag_65\n      swap1\n        /* \"vesting_tokens_sushmita.sol\":4037:4080  schedule.vestedTokens.add(releasableAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_88:\n        /* \"vesting_tokens_sushmita.sol\":4013:4021  schedule */\n      dup3\n        /* \"vesting_tokens_sushmita.sol\":4013:4034  schedule.vestedTokens */\n      0x06\n      add\n        /* \"vesting_tokens_sushmita.sol\":4013:4080  schedule.vestedTokens = schedule.vestedTokens.add(releasableAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"vesting_tokens_sushmita.sol\":4093:4098  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"vesting_tokens_sushmita.sol\":4093:4107  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"vesting_tokens_sushmita.sol\":4108:4118  msg.sender */\n      caller\n        /* \"vesting_tokens_sushmita.sol\":4120:4136  releasableAmount */\n      dup4\n        /* \"vesting_tokens_sushmita.sol\":4093:4137  token.transfer(msg.sender, releasableAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      pop\n        /* \"vesting_tokens_sushmita.sol\":4170:4180  msg.sender */\n      caller\n        /* \"vesting_tokens_sushmita.sol\":4155:4199  TokensReleased(msg.sender, releasableAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df93179\n        /* \"vesting_tokens_sushmita.sol\":4182:4198  releasableAmount */\n      dup3\n        /* \"vesting_tokens_sushmita.sol\":4155:4199  TokensReleased(msg.sender, releasableAmount) */\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"vesting_tokens_sushmita.sol\":3576:4207  {... */\n      pop\n      pop\n        /* \"vesting_tokens_sushmita.sol\":3542:4207  function releaseTokens() external {... */\n      jump\t// out\n        /* \"vesting_tokens_sushmita.sol\":4215:4863  function revokeVestingSchedule(address beneficiary) external onlyOwner {... */\n    tag_34:\n        /* \"vesting_tokens_sushmita.sol\":1087:1092  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"vesting_tokens_sushmita.sol\":1073:1092  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"vesting_tokens_sushmita.sol\":1073:1083  msg.sender */\n      caller\n        /* \"vesting_tokens_sushmita.sol\":1073:1092  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"vesting_tokens_sushmita.sol\":1065:1110  require(msg.sender == owner, \"Not the owner\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_51\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"vesting_tokens_sushmita.sol\":4297:4329  VestingSchedule storage schedule */\n      0x00\n        /* \"vesting_tokens_sushmita.sol\":4332:4348  vestingSchedules */\n      0x02\n        /* \"vesting_tokens_sushmita.sol\":4332:4361  vestingSchedules[beneficiary] */\n      0x00\n        /* \"vesting_tokens_sushmita.sol\":4349:4360  beneficiary */\n      dup4\n        /* \"vesting_tokens_sushmita.sol\":4332:4361  vestingSchedules[beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"vesting_tokens_sushmita.sol\":4297:4361  VestingSchedule storage schedule = vestingSchedules[beneficiary] */\n      swap1\n      pop\n        /* \"vesting_tokens_sushmita.sol\":4380:4388  schedule */\n      dup1\n        /* \"vesting_tokens_sushmita.sol\":4380:4398  schedule.revocable */\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"vesting_tokens_sushmita.sol\":4372:4462  require(schedule.revocable, \"Vesting schedule not revocable [in revokeVestingSchedule()]\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"vesting_tokens_sushmita.sol\":4482:4490  schedule */\n      dup1\n        /* \"vesting_tokens_sushmita.sol\":4482:4498  schedule.revoked */\n      0x07\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"vesting_tokens_sushmita.sol\":4481:4498  !schedule.revoked */\n      iszero\n        /* \"vesting_tokens_sushmita.sol\":4473:4564  require(!schedule.revoked, \"Vesting schedule already revoked [in revokeVestingSchedule()]\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"vesting_tokens_sushmita.sol\":4596:4600  true */\n      0x01\n        /* \"vesting_tokens_sushmita.sol\":4577:4585  schedule */\n      dup2\n        /* \"vesting_tokens_sushmita.sol\":4577:4593  schedule.revoked */\n      0x07\n      add\n      0x00\n        /* \"vesting_tokens_sushmita.sol\":4577:4600  schedule.revoked = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"vesting_tokens_sushmita.sol\":4613:4636  uint256 remainingTokens */\n      0x00\n        /* \"vesting_tokens_sushmita.sol\":4639:4710  schedule.totalAmount.sub(... */\n      tag_106\n        /* \"vesting_tokens_sushmita.sol\":4678:4686  schedule */\n      dup3\n        /* \"vesting_tokens_sushmita.sol\":4678:4699  schedule.vestedTokens */\n      0x06\n      add\n      sload\n        /* \"vesting_tokens_sushmita.sol\":4639:4647  schedule */\n      dup4\n        /* \"vesting_tokens_sushmita.sol\":4639:4659  schedule.totalAmount */\n      0x04\n      add\n      sload\n        /* \"vesting_tokens_sushmita.sol\":4639:4663  schedule.totalAmount.sub */\n      tag_69\n      swap1\n        /* \"vesting_tokens_sushmita.sol\":4639:4710  schedule.totalAmount.sub(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_106:\n        /* \"vesting_tokens_sushmita.sol\":4613:4710  uint256 remainingTokens = schedule.totalAmount.sub(... */\n      swap1\n      pop\n        /* \"vesting_tokens_sushmita.sol\":4743:4744  0 */\n      0x00\n        /* \"vesting_tokens_sushmita.sol\":4725:4740  remainingTokens */\n      dup2\n        /* \"vesting_tokens_sushmita.sol\":4725:4744  remainingTokens > 0 */\n      gt\n        /* \"vesting_tokens_sushmita.sol\":4721:4811  if (remainingTokens > 0) {... */\n      iszero\n      tag_107\n      jumpi\n        /* \"vesting_tokens_sushmita.sol\":4761:4766  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"vesting_tokens_sushmita.sol\":4761:4775  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"vesting_tokens_sushmita.sol\":4776:4781  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"vesting_tokens_sushmita.sol\":4783:4798  remainingTokens */\n      dup4\n        /* \"vesting_tokens_sushmita.sol\":4761:4799  token.transfer(owner, remainingTokens) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_108:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_111:\n      pop\n        /* \"vesting_tokens_sushmita.sol\":4721:4811  if (remainingTokens > 0) {... */\n    tag_107:\n        /* \"vesting_tokens_sushmita.sol\":4843:4854  beneficiary */\n      dup3\n        /* \"vesting_tokens_sushmita.sol\":4828:4855  VestingRevoked(beneficiary) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x68d870ac0aff3819234e8a1fc8f357b40d75212f2dc8594b97690fa205b3bab2\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"vesting_tokens_sushmita.sol\":4286:4863  {... */\n      pop\n      pop\n        /* \"vesting_tokens_sushmita.sol\":4215:4863  function revokeVestingSchedule(address beneficiary) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"vesting_tokens_sushmita.sol\":4969:5094  function getBalance(address beneficiary) view external returns(uint256){... */\n    tag_37:\n        /* \"vesting_tokens_sushmita.sol\":5032:5039  uint256 */\n      0x00\n        /* \"vesting_tokens_sushmita.sol\":5058:5063  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"vesting_tokens_sushmita.sol\":5058:5073  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"vesting_tokens_sushmita.sol\":5074:5085  beneficiary */\n      dup4\n        /* \"vesting_tokens_sushmita.sol\":5058:5086  token.balanceOf(beneficiary) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_113:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_115\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n        /* \"vesting_tokens_sushmita.sol\":5051:5086  return token.balanceOf(beneficiary) */\n      swap1\n      pop\n        /* \"vesting_tokens_sushmita.sol\":4969:5094  function getBalance(address beneficiary) view external returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"vesting_tokens_sushmita.sol\":273:291  ERC20 public token */\n    tag_40:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"vesting_tokens_sushmita.sol\":572:631  mapping(address => VestingSchedule) public vestingSchedules */\n    tag_45:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x06\n      add\n      sload\n      swap1\n      dup1\n      0x07\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup9\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_131:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_133:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_134:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_178\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_133\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_135:\n        /* \"#utility.yul\":641:665   */\n      tag_180\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_134\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_181\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_181:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_136:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_183\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_135\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_137:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_138:\n        /* \"#utility.yul\":997:1021   */\n      tag_186\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_137\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_187\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_187:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_139:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_189\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_138\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1287   */\n    tag_140:\n        /* \"#utility.yul\":1231:1238   */\n      0x00\n        /* \"#utility.yul\":1274:1279   */\n      dup2\n        /* \"#utility.yul\":1267:1280   */\n      iszero\n        /* \"#utility.yul\":1260:1281   */\n      iszero\n        /* \"#utility.yul\":1249:1281   */\n      swap1\n      pop\n        /* \"#utility.yul\":1197:1287   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1293:1409   */\n    tag_141:\n        /* \"#utility.yul\":1363:1384   */\n      tag_192\n        /* \"#utility.yul\":1378:1383   */\n      dup2\n        /* \"#utility.yul\":1363:1384   */\n      tag_140\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":1356:1361   */\n      dup2\n        /* \"#utility.yul\":1353:1385   */\n      eq\n        /* \"#utility.yul\":1343:1403   */\n      tag_193\n      jumpi\n        /* \"#utility.yul\":1399:1400   */\n      0x00\n        /* \"#utility.yul\":1396:1397   */\n      dup1\n        /* \"#utility.yul\":1389:1401   */\n      revert\n        /* \"#utility.yul\":1343:1403   */\n    tag_193:\n        /* \"#utility.yul\":1293:1409   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1415:1548   */\n    tag_142:\n        /* \"#utility.yul\":1458:1463   */\n      0x00\n        /* \"#utility.yul\":1496:1502   */\n      dup2\n        /* \"#utility.yul\":1483:1503   */\n      calldataload\n        /* \"#utility.yul\":1474:1503   */\n      swap1\n      pop\n        /* \"#utility.yul\":1512:1542   */\n      tag_195\n        /* \"#utility.yul\":1536:1541   */\n      dup2\n        /* \"#utility.yul\":1512:1542   */\n      tag_141\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":1415:1548   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1554:2751   */\n    tag_15:\n        /* \"#utility.yul\":1664:1670   */\n      0x00\n        /* \"#utility.yul\":1672:1678   */\n      dup1\n        /* \"#utility.yul\":1680:1686   */\n      0x00\n        /* \"#utility.yul\":1688:1694   */\n      dup1\n        /* \"#utility.yul\":1696:1702   */\n      0x00\n        /* \"#utility.yul\":1704:1710   */\n      dup1\n        /* \"#utility.yul\":1712:1718   */\n      0x00\n        /* \"#utility.yul\":1761:1764   */\n      0xe0\n        /* \"#utility.yul\":1749:1758   */\n      dup9\n        /* \"#utility.yul\":1740:1747   */\n      dup11\n        /* \"#utility.yul\":1736:1759   */\n      sub\n        /* \"#utility.yul\":1732:1765   */\n      slt\n        /* \"#utility.yul\":1729:1849   */\n      iszero\n      tag_197\n      jumpi\n        /* \"#utility.yul\":1768:1847   */\n      tag_198\n      tag_131\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1729:1849   */\n    tag_197:\n        /* \"#utility.yul\":1888:1889   */\n      0x00\n        /* \"#utility.yul\":1913:1966   */\n      tag_199\n        /* \"#utility.yul\":1958:1965   */\n      dup11\n        /* \"#utility.yul\":1949:1955   */\n      dup3\n        /* \"#utility.yul\":1938:1947   */\n      dup12\n        /* \"#utility.yul\":1934:1956   */\n      add\n        /* \"#utility.yul\":1913:1966   */\n      tag_136\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":1903:1966   */\n      swap8\n      pop\n        /* \"#utility.yul\":1859:1976   */\n      pop\n        /* \"#utility.yul\":2015:2017   */\n      0x20\n        /* \"#utility.yul\":2041:2094   */\n      tag_200\n        /* \"#utility.yul\":2086:2093   */\n      dup11\n        /* \"#utility.yul\":2077:2083   */\n      dup3\n        /* \"#utility.yul\":2066:2075   */\n      dup12\n        /* \"#utility.yul\":2062:2084   */\n      add\n        /* \"#utility.yul\":2041:2094   */\n      tag_139\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":2031:2094   */\n      swap7\n      pop\n        /* \"#utility.yul\":1986:2104   */\n      pop\n        /* \"#utility.yul\":2143:2145   */\n      0x40\n        /* \"#utility.yul\":2169:2222   */\n      tag_201\n        /* \"#utility.yul\":2214:2221   */\n      dup11\n        /* \"#utility.yul\":2205:2211   */\n      dup3\n        /* \"#utility.yul\":2194:2203   */\n      dup12\n        /* \"#utility.yul\":2190:2212   */\n      add\n        /* \"#utility.yul\":2169:2222   */\n      tag_139\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2159:2222   */\n      swap6\n      pop\n        /* \"#utility.yul\":2114:2232   */\n      pop\n        /* \"#utility.yul\":2271:2273   */\n      0x60\n        /* \"#utility.yul\":2297:2350   */\n      tag_202\n        /* \"#utility.yul\":2342:2349   */\n      dup11\n        /* \"#utility.yul\":2333:2339   */\n      dup3\n        /* \"#utility.yul\":2322:2331   */\n      dup12\n        /* \"#utility.yul\":2318:2340   */\n      add\n        /* \"#utility.yul\":2297:2350   */\n      tag_139\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":2287:2350   */\n      swap5\n      pop\n        /* \"#utility.yul\":2242:2360   */\n      pop\n        /* \"#utility.yul\":2399:2402   */\n      0x80\n        /* \"#utility.yul\":2426:2479   */\n      tag_203\n        /* \"#utility.yul\":2471:2478   */\n      dup11\n        /* \"#utility.yul\":2462:2468   */\n      dup3\n        /* \"#utility.yul\":2451:2460   */\n      dup12\n        /* \"#utility.yul\":2447:2469   */\n      add\n        /* \"#utility.yul\":2426:2479   */\n      tag_139\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":2416:2479   */\n      swap4\n      pop\n        /* \"#utility.yul\":2370:2489   */\n      pop\n        /* \"#utility.yul\":2528:2531   */\n      0xa0\n        /* \"#utility.yul\":2555:2608   */\n      tag_204\n        /* \"#utility.yul\":2600:2607   */\n      dup11\n        /* \"#utility.yul\":2591:2597   */\n      dup3\n        /* \"#utility.yul\":2580:2589   */\n      dup12\n        /* \"#utility.yul\":2576:2598   */\n      add\n        /* \"#utility.yul\":2555:2608   */\n      tag_139\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":2545:2608   */\n      swap3\n      pop\n        /* \"#utility.yul\":2499:2618   */\n      pop\n        /* \"#utility.yul\":2657:2660   */\n      0xc0\n        /* \"#utility.yul\":2684:2734   */\n      tag_205\n        /* \"#utility.yul\":2726:2733   */\n      dup11\n        /* \"#utility.yul\":2717:2723   */\n      dup3\n        /* \"#utility.yul\":2706:2715   */\n      dup12\n        /* \"#utility.yul\":2702:2724   */\n      add\n        /* \"#utility.yul\":2684:2734   */\n      tag_142\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":2674:2734   */\n      swap2\n      pop\n        /* \"#utility.yul\":2628:2744   */\n      pop\n        /* \"#utility.yul\":1554:2751   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2757:2875   */\n    tag_143:\n        /* \"#utility.yul\":2844:2868   */\n      tag_207\n        /* \"#utility.yul\":2862:2867   */\n      dup2\n        /* \"#utility.yul\":2844:2868   */\n      tag_137\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":2839:2842   */\n      dup3\n        /* \"#utility.yul\":2832:2869   */\n      mstore\n        /* \"#utility.yul\":2757:2875   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2881:3103   */\n    tag_20:\n        /* \"#utility.yul\":2974:2978   */\n      0x00\n        /* \"#utility.yul\":3012:3014   */\n      0x20\n        /* \"#utility.yul\":3001:3010   */\n      dup3\n        /* \"#utility.yul\":2997:3015   */\n      add\n        /* \"#utility.yul\":2989:3015   */\n      swap1\n      pop\n        /* \"#utility.yul\":3025:3096   */\n      tag_209\n        /* \"#utility.yul\":3093:3094   */\n      0x00\n        /* \"#utility.yul\":3082:3091   */\n      dup4\n        /* \"#utility.yul\":3078:3095   */\n      add\n        /* \"#utility.yul\":3069:3075   */\n      dup5\n        /* \"#utility.yul\":3025:3096   */\n      tag_143\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2881:3103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3438   */\n    tag_23:\n        /* \"#utility.yul\":3168:3174   */\n      0x00\n        /* \"#utility.yul\":3217:3219   */\n      0x20\n        /* \"#utility.yul\":3205:3214   */\n      dup3\n        /* \"#utility.yul\":3196:3203   */\n      dup5\n        /* \"#utility.yul\":3192:3215   */\n      sub\n        /* \"#utility.yul\":3188:3220   */\n      slt\n        /* \"#utility.yul\":3185:3304   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":3223:3302   */\n      tag_212\n      tag_131\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":3185:3304   */\n    tag_211:\n        /* \"#utility.yul\":3343:3344   */\n      0x00\n        /* \"#utility.yul\":3368:3421   */\n      tag_213\n        /* \"#utility.yul\":3413:3420   */\n      dup5\n        /* \"#utility.yul\":3404:3410   */\n      dup3\n        /* \"#utility.yul\":3393:3402   */\n      dup6\n        /* \"#utility.yul\":3389:3411   */\n      add\n        /* \"#utility.yul\":3368:3421   */\n      tag_136\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":3358:3421   */\n      swap2\n      pop\n        /* \"#utility.yul\":3314:3431   */\n      pop\n        /* \"#utility.yul\":3109:3438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3444:3562   */\n    tag_144:\n        /* \"#utility.yul\":3531:3555   */\n      tag_215\n        /* \"#utility.yul\":3549:3554   */\n      dup2\n        /* \"#utility.yul\":3531:3555   */\n      tag_134\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3526:3529   */\n      dup3\n        /* \"#utility.yul\":3519:3556   */\n      mstore\n        /* \"#utility.yul\":3444:3562   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3568:3790   */\n    tag_29:\n        /* \"#utility.yul\":3661:3665   */\n      0x00\n        /* \"#utility.yul\":3699:3701   */\n      0x20\n        /* \"#utility.yul\":3688:3697   */\n      dup3\n        /* \"#utility.yul\":3684:3702   */\n      add\n        /* \"#utility.yul\":3676:3702   */\n      swap1\n      pop\n        /* \"#utility.yul\":3712:3783   */\n      tag_217\n        /* \"#utility.yul\":3780:3781   */\n      0x00\n        /* \"#utility.yul\":3769:3778   */\n      dup4\n        /* \"#utility.yul\":3765:3782   */\n      add\n        /* \"#utility.yul\":3756:3762   */\n      dup5\n        /* \"#utility.yul\":3712:3783   */\n      tag_144\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3568:3790   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3796:3856   */\n    tag_145:\n        /* \"#utility.yul\":3824:3827   */\n      0x00\n        /* \"#utility.yul\":3845:3850   */\n      dup2\n        /* \"#utility.yul\":3838:3850   */\n      swap1\n      pop\n        /* \"#utility.yul\":3796:3856   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3862:4004   */\n    tag_146:\n        /* \"#utility.yul\":3912:3921   */\n      0x00\n        /* \"#utility.yul\":3945:3998   */\n      tag_220\n        /* \"#utility.yul\":3963:3997   */\n      tag_221\n        /* \"#utility.yul\":3972:3996   */\n      tag_222\n        /* \"#utility.yul\":3990:3995   */\n      dup5\n        /* \"#utility.yul\":3972:3996   */\n      tag_133\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":3963:3997   */\n      tag_145\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3945:3998   */\n      tag_133\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":3932:3998   */\n      swap1\n      pop\n        /* \"#utility.yul\":3862:4004   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4010:4136   */\n    tag_147:\n        /* \"#utility.yul\":4060:4069   */\n      0x00\n        /* \"#utility.yul\":4093:4130   */\n      tag_224\n        /* \"#utility.yul\":4124:4129   */\n      dup3\n        /* \"#utility.yul\":4093:4130   */\n      tag_146\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":4080:4130   */\n      swap1\n      pop\n        /* \"#utility.yul\":4010:4136   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4142:4281   */\n    tag_148:\n        /* \"#utility.yul\":4205:4214   */\n      0x00\n        /* \"#utility.yul\":4238:4275   */\n      tag_226\n        /* \"#utility.yul\":4269:4274   */\n      dup3\n        /* \"#utility.yul\":4238:4275   */\n      tag_147\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":4225:4275   */\n      swap1\n      pop\n        /* \"#utility.yul\":4142:4281   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4287:4444   */\n    tag_149:\n        /* \"#utility.yul\":4387:4437   */\n      tag_228\n        /* \"#utility.yul\":4431:4436   */\n      dup2\n        /* \"#utility.yul\":4387:4437   */\n      tag_148\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":4382:4385   */\n      dup3\n        /* \"#utility.yul\":4375:4438   */\n      mstore\n        /* \"#utility.yul\":4287:4444   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4450:4698   */\n    tag_42:\n        /* \"#utility.yul\":4556:4560   */\n      0x00\n        /* \"#utility.yul\":4594:4596   */\n      0x20\n        /* \"#utility.yul\":4583:4592   */\n      dup3\n        /* \"#utility.yul\":4579:4597   */\n      add\n        /* \"#utility.yul\":4571:4597   */\n      swap1\n      pop\n        /* \"#utility.yul\":4607:4691   */\n      tag_230\n        /* \"#utility.yul\":4688:4689   */\n      0x00\n        /* \"#utility.yul\":4677:4686   */\n      dup4\n        /* \"#utility.yul\":4673:4690   */\n      add\n        /* \"#utility.yul\":4664:4670   */\n      dup5\n        /* \"#utility.yul\":4607:4691   */\n      tag_149\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":4450:4698   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4704:4813   */\n    tag_150:\n        /* \"#utility.yul\":4785:4806   */\n      tag_232\n        /* \"#utility.yul\":4800:4805   */\n      dup2\n        /* \"#utility.yul\":4785:4806   */\n      tag_140\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":4780:4783   */\n      dup3\n        /* \"#utility.yul\":4773:4807   */\n      mstore\n        /* \"#utility.yul\":4704:4813   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4819:5792   */\n    tag_47:\n        /* \"#utility.yul\":5096:5100   */\n      0x00\n        /* \"#utility.yul\":5134:5137   */\n      0x0100\n        /* \"#utility.yul\":5123:5132   */\n      dup3\n        /* \"#utility.yul\":5119:5138   */\n      add\n        /* \"#utility.yul\":5111:5138   */\n      swap1\n      pop\n        /* \"#utility.yul\":5148:5219   */\n      tag_234\n        /* \"#utility.yul\":5216:5217   */\n      0x00\n        /* \"#utility.yul\":5205:5214   */\n      dup4\n        /* \"#utility.yul\":5201:5218   */\n      add\n        /* \"#utility.yul\":5192:5198   */\n      dup12\n        /* \"#utility.yul\":5148:5219   */\n      tag_143\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":5229:5301   */\n      tag_235\n        /* \"#utility.yul\":5297:5299   */\n      0x20\n        /* \"#utility.yul\":5286:5295   */\n      dup4\n        /* \"#utility.yul\":5282:5300   */\n      add\n        /* \"#utility.yul\":5273:5279   */\n      dup11\n        /* \"#utility.yul\":5229:5301   */\n      tag_143\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":5311:5383   */\n      tag_236\n        /* \"#utility.yul\":5379:5381   */\n      0x40\n        /* \"#utility.yul\":5368:5377   */\n      dup4\n        /* \"#utility.yul\":5364:5382   */\n      add\n        /* \"#utility.yul\":5355:5361   */\n      dup10\n        /* \"#utility.yul\":5311:5383   */\n      tag_143\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":5393:5465   */\n      tag_237\n        /* \"#utility.yul\":5461:5463   */\n      0x60\n        /* \"#utility.yul\":5450:5459   */\n      dup4\n        /* \"#utility.yul\":5446:5464   */\n      add\n        /* \"#utility.yul\":5437:5443   */\n      dup9\n        /* \"#utility.yul\":5393:5465   */\n      tag_143\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":5475:5548   */\n      tag_238\n        /* \"#utility.yul\":5543:5546   */\n      0x80\n        /* \"#utility.yul\":5532:5541   */\n      dup4\n        /* \"#utility.yul\":5528:5547   */\n      add\n        /* \"#utility.yul\":5519:5525   */\n      dup8\n        /* \"#utility.yul\":5475:5548   */\n      tag_143\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":5558:5625   */\n      tag_239\n        /* \"#utility.yul\":5620:5623   */\n      0xa0\n        /* \"#utility.yul\":5609:5618   */\n      dup4\n        /* \"#utility.yul\":5605:5624   */\n      add\n        /* \"#utility.yul\":5596:5602   */\n      dup7\n        /* \"#utility.yul\":5558:5625   */\n      tag_150\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":5635:5708   */\n      tag_240\n        /* \"#utility.yul\":5703:5706   */\n      0xc0\n        /* \"#utility.yul\":5692:5701   */\n      dup4\n        /* \"#utility.yul\":5688:5707   */\n      add\n        /* \"#utility.yul\":5679:5685   */\n      dup6\n        /* \"#utility.yul\":5635:5708   */\n      tag_143\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":5718:5785   */\n      tag_241\n        /* \"#utility.yul\":5780:5783   */\n      0xe0\n        /* \"#utility.yul\":5769:5778   */\n      dup4\n        /* \"#utility.yul\":5765:5784   */\n      add\n        /* \"#utility.yul\":5756:5762   */\n      dup5\n        /* \"#utility.yul\":5718:5785   */\n      tag_150\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":4819:5792   */\n      swap10\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5798:5967   */\n    tag_151:\n        /* \"#utility.yul\":5882:5893   */\n      0x00\n        /* \"#utility.yul\":5916:5922   */\n      dup3\n        /* \"#utility.yul\":5911:5914   */\n      dup3\n        /* \"#utility.yul\":5904:5923   */\n      mstore\n        /* \"#utility.yul\":5956:5960   */\n      0x20\n        /* \"#utility.yul\":5951:5954   */\n      dup3\n        /* \"#utility.yul\":5947:5961   */\n      add\n        /* \"#utility.yul\":5932:5961   */\n      swap1\n      pop\n        /* \"#utility.yul\":5798:5967   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5973:6136   */\n    tag_152:\n        /* \"#utility.yul\":6113:6128   */\n      0x4e6f7420746865206f776e657200000000000000000000000000000000000000\n        /* \"#utility.yul\":6109:6110   */\n      0x00\n        /* \"#utility.yul\":6101:6107   */\n      dup3\n        /* \"#utility.yul\":6097:6111   */\n      add\n        /* \"#utility.yul\":6090:6129   */\n      mstore\n        /* \"#utility.yul\":5973:6136   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6142:6508   */\n    tag_153:\n        /* \"#utility.yul\":6284:6287   */\n      0x00\n        /* \"#utility.yul\":6305:6372   */\n      tag_245\n        /* \"#utility.yul\":6369:6371   */\n      0x0d\n        /* \"#utility.yul\":6364:6367   */\n      dup4\n        /* \"#utility.yul\":6305:6372   */\n      tag_151\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":6298:6372   */\n      swap2\n      pop\n        /* \"#utility.yul\":6381:6474   */\n      tag_246\n        /* \"#utility.yul\":6470:6473   */\n      dup3\n        /* \"#utility.yul\":6381:6474   */\n      tag_152\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":6499:6501   */\n      0x20\n        /* \"#utility.yul\":6494:6497   */\n      dup3\n        /* \"#utility.yul\":6490:6502   */\n      add\n        /* \"#utility.yul\":6483:6502   */\n      swap1\n      pop\n        /* \"#utility.yul\":6142:6508   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6514:6933   */\n    tag_51:\n        /* \"#utility.yul\":6680:6684   */\n      0x00\n        /* \"#utility.yul\":6718:6720   */\n      0x20\n        /* \"#utility.yul\":6707:6716   */\n      dup3\n        /* \"#utility.yul\":6703:6721   */\n      add\n        /* \"#utility.yul\":6695:6721   */\n      swap1\n      pop\n        /* \"#utility.yul\":6767:6776   */\n      dup2\n        /* \"#utility.yul\":6761:6765   */\n      dup2\n        /* \"#utility.yul\":6757:6777   */\n      sub\n        /* \"#utility.yul\":6753:6754   */\n      0x00\n        /* \"#utility.yul\":6742:6751   */\n      dup4\n        /* \"#utility.yul\":6738:6755   */\n      add\n        /* \"#utility.yul\":6731:6778   */\n      mstore\n        /* \"#utility.yul\":6795:6926   */\n      tag_248\n        /* \"#utility.yul\":6921:6925   */\n      dup2\n        /* \"#utility.yul\":6795:6926   */\n      tag_153\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":6787:6926   */\n      swap1\n      pop\n        /* \"#utility.yul\":6514:6933   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6939:7186   */\n    tag_154:\n        /* \"#utility.yul\":7079:7113   */\n      0x56657374696e67207363686564756c6520616c72656164792065786973747320\n        /* \"#utility.yul\":7075:7076   */\n      0x00\n        /* \"#utility.yul\":7067:7073   */\n      dup3\n        /* \"#utility.yul\":7063:7077   */\n      add\n        /* \"#utility.yul\":7056:7114   */\n      mstore\n        /* \"#utility.yul\":7148:7178   */\n      0x5b696e2063726561746556657374696e675363686564756c6528295d00000000\n        /* \"#utility.yul\":7143:7145   */\n      0x20\n        /* \"#utility.yul\":7135:7141   */\n      dup3\n        /* \"#utility.yul\":7131:7146   */\n      add\n        /* \"#utility.yul\":7124:7179   */\n      mstore\n        /* \"#utility.yul\":6939:7186   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7192:7558   */\n    tag_155:\n        /* \"#utility.yul\":7334:7337   */\n      0x00\n        /* \"#utility.yul\":7355:7422   */\n      tag_251\n        /* \"#utility.yul\":7419:7421   */\n      0x3c\n        /* \"#utility.yul\":7414:7417   */\n      dup4\n        /* \"#utility.yul\":7355:7422   */\n      tag_151\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":7348:7422   */\n      swap2\n      pop\n        /* \"#utility.yul\":7431:7524   */\n      tag_252\n        /* \"#utility.yul\":7520:7523   */\n      dup3\n        /* \"#utility.yul\":7431:7524   */\n      tag_154\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":7549:7551   */\n      0x40\n        /* \"#utility.yul\":7544:7547   */\n      dup3\n        /* \"#utility.yul\":7540:7552   */\n      add\n        /* \"#utility.yul\":7533:7552   */\n      swap1\n      pop\n        /* \"#utility.yul\":7192:7558   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7564:7983   */\n    tag_55:\n        /* \"#utility.yul\":7730:7734   */\n      0x00\n        /* \"#utility.yul\":7768:7770   */\n      0x20\n        /* \"#utility.yul\":7757:7766   */\n      dup3\n        /* \"#utility.yul\":7753:7771   */\n      add\n        /* \"#utility.yul\":7745:7771   */\n      swap1\n      pop\n        /* \"#utility.yul\":7817:7826   */\n      dup2\n        /* \"#utility.yul\":7811:7815   */\n      dup2\n        /* \"#utility.yul\":7807:7827   */\n      sub\n        /* \"#utility.yul\":7803:7804   */\n      0x00\n        /* \"#utility.yul\":7792:7801   */\n      dup4\n        /* \"#utility.yul\":7788:7805   */\n      add\n        /* \"#utility.yul\":7781:7828   */\n      mstore\n        /* \"#utility.yul\":7845:7976   */\n      tag_254\n        /* \"#utility.yul\":7971:7975   */\n      dup2\n        /* \"#utility.yul\":7845:7976   */\n      tag_155\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":7837:7976   */\n      swap1\n      pop\n        /* \"#utility.yul\":7564:7983   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7989:8231   */\n    tag_156:\n        /* \"#utility.yul\":8129:8163   */\n      0x496e76616c69642076657374696e6720706172616d6574657273205b696e2063\n        /* \"#utility.yul\":8125:8126   */\n      0x00\n        /* \"#utility.yul\":8117:8123   */\n      dup3\n        /* \"#utility.yul\":8113:8127   */\n      add\n        /* \"#utility.yul\":8106:8164   */\n      mstore\n        /* \"#utility.yul\":8198:8223   */\n      0x726561746556657374696e675363686564756c6528295d000000000000000000\n        /* \"#utility.yul\":8193:8195   */\n      0x20\n        /* \"#utility.yul\":8185:8191   */\n      dup3\n        /* \"#utility.yul\":8181:8196   */\n      add\n        /* \"#utility.yul\":8174:8224   */\n      mstore\n        /* \"#utility.yul\":7989:8231   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8237:8603   */\n    tag_157:\n        /* \"#utility.yul\":8379:8382   */\n      0x00\n        /* \"#utility.yul\":8400:8467   */\n      tag_257\n        /* \"#utility.yul\":8464:8466   */\n      0x37\n        /* \"#utility.yul\":8459:8462   */\n      dup4\n        /* \"#utility.yul\":8400:8467   */\n      tag_151\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":8393:8467   */\n      swap2\n      pop\n        /* \"#utility.yul\":8476:8569   */\n      tag_258\n        /* \"#utility.yul\":8565:8568   */\n      dup3\n        /* \"#utility.yul\":8476:8569   */\n      tag_156\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":8594:8596   */\n      0x40\n        /* \"#utility.yul\":8589:8592   */\n      dup3\n        /* \"#utility.yul\":8585:8597   */\n      add\n        /* \"#utility.yul\":8578:8597   */\n      swap1\n      pop\n        /* \"#utility.yul\":8237:8603   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8609:9028   */\n    tag_59:\n        /* \"#utility.yul\":8775:8779   */\n      0x00\n        /* \"#utility.yul\":8813:8815   */\n      0x20\n        /* \"#utility.yul\":8802:8811   */\n      dup3\n        /* \"#utility.yul\":8798:8816   */\n      add\n        /* \"#utility.yul\":8790:8816   */\n      swap1\n      pop\n        /* \"#utility.yul\":8862:8871   */\n      dup2\n        /* \"#utility.yul\":8856:8860   */\n      dup2\n        /* \"#utility.yul\":8852:8872   */\n      sub\n        /* \"#utility.yul\":8848:8849   */\n      0x00\n        /* \"#utility.yul\":8837:8846   */\n      dup4\n        /* \"#utility.yul\":8833:8850   */\n      add\n        /* \"#utility.yul\":8826:8873   */\n      mstore\n        /* \"#utility.yul\":8890:9021   */\n      tag_260\n        /* \"#utility.yul\":9016:9020   */\n      dup2\n        /* \"#utility.yul\":8890:9021   */\n      tag_157\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":8882:9021   */\n      swap1\n      pop\n        /* \"#utility.yul\":8609:9028   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9034:9797   */\n    tag_61:\n        /* \"#utility.yul\":9261:9265   */\n      0x00\n        /* \"#utility.yul\":9299:9302   */\n      0xc0\n        /* \"#utility.yul\":9288:9297   */\n      dup3\n        /* \"#utility.yul\":9284:9303   */\n      add\n        /* \"#utility.yul\":9276:9303   */\n      swap1\n      pop\n        /* \"#utility.yul\":9313:9384   */\n      tag_262\n        /* \"#utility.yul\":9381:9382   */\n      0x00\n        /* \"#utility.yul\":9370:9379   */\n      dup4\n        /* \"#utility.yul\":9366:9383   */\n      add\n        /* \"#utility.yul\":9357:9363   */\n      dup10\n        /* \"#utility.yul\":9313:9384   */\n      tag_143\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":9394:9466   */\n      tag_263\n        /* \"#utility.yul\":9462:9464   */\n      0x20\n        /* \"#utility.yul\":9451:9460   */\n      dup4\n        /* \"#utility.yul\":9447:9465   */\n      add\n        /* \"#utility.yul\":9438:9444   */\n      dup9\n        /* \"#utility.yul\":9394:9466   */\n      tag_143\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":9476:9548   */\n      tag_264\n        /* \"#utility.yul\":9544:9546   */\n      0x40\n        /* \"#utility.yul\":9533:9542   */\n      dup4\n        /* \"#utility.yul\":9529:9547   */\n      add\n        /* \"#utility.yul\":9520:9526   */\n      dup8\n        /* \"#utility.yul\":9476:9548   */\n      tag_143\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":9558:9630   */\n      tag_265\n        /* \"#utility.yul\":9626:9628   */\n      0x60\n        /* \"#utility.yul\":9615:9624   */\n      dup4\n        /* \"#utility.yul\":9611:9629   */\n      add\n        /* \"#utility.yul\":9602:9608   */\n      dup7\n        /* \"#utility.yul\":9558:9630   */\n      tag_143\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":9640:9713   */\n      tag_266\n        /* \"#utility.yul\":9708:9711   */\n      0x80\n        /* \"#utility.yul\":9697:9706   */\n      dup4\n        /* \"#utility.yul\":9693:9712   */\n      add\n        /* \"#utility.yul\":9684:9690   */\n      dup6\n        /* \"#utility.yul\":9640:9713   */\n      tag_143\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":9723:9790   */\n      tag_267\n        /* \"#utility.yul\":9785:9788   */\n      0xa0\n        /* \"#utility.yul\":9774:9783   */\n      dup4\n        /* \"#utility.yul\":9770:9789   */\n      add\n        /* \"#utility.yul\":9761:9767   */\n      dup5\n        /* \"#utility.yul\":9723:9790   */\n      tag_150\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":9034:9797   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9803:10036   */\n    tag_158:\n        /* \"#utility.yul\":9943:9977   */\n      0x4e6f2076657374696e67207363686564756c6520666f756e64205b696e207265\n        /* \"#utility.yul\":9939:9940   */\n      0x00\n        /* \"#utility.yul\":9931:9937   */\n      dup3\n        /* \"#utility.yul\":9927:9941   */\n      add\n        /* \"#utility.yul\":9920:9978   */\n      mstore\n        /* \"#utility.yul\":10012:10028   */\n      0x6c65617365546f6b656e7328295d000000000000000000000000000000000000\n        /* \"#utility.yul\":10007:10009   */\n      0x20\n        /* \"#utility.yul\":9999:10005   */\n      dup3\n        /* \"#utility.yul\":9995:10010   */\n      add\n        /* \"#utility.yul\":9988:10029   */\n      mstore\n        /* \"#utility.yul\":9803:10036   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10042:10408   */\n    tag_159:\n        /* \"#utility.yul\":10184:10187   */\n      0x00\n        /* \"#utility.yul\":10205:10272   */\n      tag_270\n        /* \"#utility.yul\":10269:10271   */\n      0x2e\n        /* \"#utility.yul\":10264:10267   */\n      dup4\n        /* \"#utility.yul\":10205:10272   */\n      tag_151\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":10198:10272   */\n      swap2\n      pop\n        /* \"#utility.yul\":10281:10374   */\n      tag_271\n        /* \"#utility.yul\":10370:10373   */\n      dup3\n        /* \"#utility.yul\":10281:10374   */\n      tag_158\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":10399:10401   */\n      0x40\n        /* \"#utility.yul\":10394:10397   */\n      dup3\n        /* \"#utility.yul\":10390:10402   */\n      add\n        /* \"#utility.yul\":10383:10402   */\n      swap1\n      pop\n        /* \"#utility.yul\":10042:10408   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10414:10833   */\n    tag_80:\n        /* \"#utility.yul\":10580:10584   */\n      0x00\n        /* \"#utility.yul\":10618:10620   */\n      0x20\n        /* \"#utility.yul\":10607:10616   */\n      dup3\n        /* \"#utility.yul\":10603:10621   */\n      add\n        /* \"#utility.yul\":10595:10621   */\n      swap1\n      pop\n        /* \"#utility.yul\":10667:10676   */\n      dup2\n        /* \"#utility.yul\":10661:10665   */\n      dup2\n        /* \"#utility.yul\":10657:10677   */\n      sub\n        /* \"#utility.yul\":10653:10654   */\n      0x00\n        /* \"#utility.yul\":10642:10651   */\n      dup4\n        /* \"#utility.yul\":10638:10655   */\n      add\n        /* \"#utility.yul\":10631:10678   */\n      mstore\n        /* \"#utility.yul\":10695:10826   */\n      tag_273\n        /* \"#utility.yul\":10821:10825   */\n      dup2\n        /* \"#utility.yul\":10695:10826   */\n      tag_159\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":10687:10826   */\n      swap1\n      pop\n        /* \"#utility.yul\":10414:10833   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10839:11071   */\n    tag_160:\n        /* \"#utility.yul\":10979:11013   */\n      0x56657374696e67207363686564756c65207265766f6b6564205b696e2072656c\n        /* \"#utility.yul\":10975:10976   */\n      0x00\n        /* \"#utility.yul\":10967:10973   */\n      dup3\n        /* \"#utility.yul\":10963:10977   */\n      add\n        /* \"#utility.yul\":10956:11014   */\n      mstore\n        /* \"#utility.yul\":11048:11063   */\n      0x65617365546f6b656e7328295d00000000000000000000000000000000000000\n        /* \"#utility.yul\":11043:11045   */\n      0x20\n        /* \"#utility.yul\":11035:11041   */\n      dup3\n        /* \"#utility.yul\":11031:11046   */\n      add\n        /* \"#utility.yul\":11024:11064   */\n      mstore\n        /* \"#utility.yul\":10839:11071   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11077:11443   */\n    tag_161:\n        /* \"#utility.yul\":11219:11222   */\n      0x00\n        /* \"#utility.yul\":11240:11307   */\n      tag_276\n        /* \"#utility.yul\":11304:11306   */\n      0x2d\n        /* \"#utility.yul\":11299:11302   */\n      dup4\n        /* \"#utility.yul\":11240:11307   */\n      tag_151\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":11233:11307   */\n      swap2\n      pop\n        /* \"#utility.yul\":11316:11409   */\n      tag_277\n        /* \"#utility.yul\":11405:11408   */\n      dup3\n        /* \"#utility.yul\":11316:11409   */\n      tag_160\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":11434:11436   */\n      0x40\n        /* \"#utility.yul\":11429:11432   */\n      dup3\n        /* \"#utility.yul\":11425:11437   */\n      add\n        /* \"#utility.yul\":11418:11437   */\n      swap1\n      pop\n        /* \"#utility.yul\":11077:11443   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11449:11868   */\n    tag_83:\n        /* \"#utility.yul\":11615:11619   */\n      0x00\n        /* \"#utility.yul\":11653:11655   */\n      0x20\n        /* \"#utility.yul\":11642:11651   */\n      dup3\n        /* \"#utility.yul\":11638:11656   */\n      add\n        /* \"#utility.yul\":11630:11656   */\n      swap1\n      pop\n        /* \"#utility.yul\":11702:11711   */\n      dup2\n        /* \"#utility.yul\":11696:11700   */\n      dup2\n        /* \"#utility.yul\":11692:11712   */\n      sub\n        /* \"#utility.yul\":11688:11689   */\n      0x00\n        /* \"#utility.yul\":11677:11686   */\n      dup4\n        /* \"#utility.yul\":11673:11690   */\n      add\n        /* \"#utility.yul\":11666:11713   */\n      mstore\n        /* \"#utility.yul\":11730:11861   */\n      tag_279\n        /* \"#utility.yul\":11856:11860   */\n      dup2\n        /* \"#utility.yul\":11730:11861   */\n      tag_161\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":11722:11861   */\n      swap1\n      pop\n        /* \"#utility.yul\":11449:11868   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11874:12112   */\n    tag_162:\n        /* \"#utility.yul\":12014:12048   */\n      0x4e6f20746f6b656e73206172652063757272656e746c7920766573746564205b\n        /* \"#utility.yul\":12010:12011   */\n      0x00\n        /* \"#utility.yul\":12002:12008   */\n      dup3\n        /* \"#utility.yul\":11998:12012   */\n      add\n        /* \"#utility.yul\":11991:12049   */\n      mstore\n        /* \"#utility.yul\":12083:12104   */\n      0x696e2072656c65617365546f6b656e7328295d00000000000000000000000000\n        /* \"#utility.yul\":12078:12080   */\n      0x20\n        /* \"#utility.yul\":12070:12076   */\n      dup3\n        /* \"#utility.yul\":12066:12081   */\n      add\n        /* \"#utility.yul\":12059:12105   */\n      mstore\n        /* \"#utility.yul\":11874:12112   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12118:12484   */\n    tag_163:\n        /* \"#utility.yul\":12260:12263   */\n      0x00\n        /* \"#utility.yul\":12281:12348   */\n      tag_282\n        /* \"#utility.yul\":12345:12347   */\n      0x33\n        /* \"#utility.yul\":12340:12343   */\n      dup4\n        /* \"#utility.yul\":12281:12348   */\n      tag_151\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":12274:12348   */\n      swap2\n      pop\n        /* \"#utility.yul\":12357:12450   */\n      tag_283\n        /* \"#utility.yul\":12446:12449   */\n      dup3\n        /* \"#utility.yul\":12357:12450   */\n      tag_162\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":12475:12477   */\n      0x40\n        /* \"#utility.yul\":12470:12473   */\n      dup3\n        /* \"#utility.yul\":12466:12478   */\n      add\n        /* \"#utility.yul\":12459:12478   */\n      swap1\n      pop\n        /* \"#utility.yul\":12118:12484   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12490:12909   */\n    tag_87:\n        /* \"#utility.yul\":12656:12660   */\n      0x00\n        /* \"#utility.yul\":12694:12696   */\n      0x20\n        /* \"#utility.yul\":12683:12692   */\n      dup3\n        /* \"#utility.yul\":12679:12697   */\n      add\n        /* \"#utility.yul\":12671:12697   */\n      swap1\n      pop\n        /* \"#utility.yul\":12743:12752   */\n      dup2\n        /* \"#utility.yul\":12737:12741   */\n      dup2\n        /* \"#utility.yul\":12733:12753   */\n      sub\n        /* \"#utility.yul\":12729:12730   */\n      0x00\n        /* \"#utility.yul\":12718:12727   */\n      dup4\n        /* \"#utility.yul\":12714:12731   */\n      add\n        /* \"#utility.yul\":12707:12754   */\n      mstore\n        /* \"#utility.yul\":12771:12902   */\n      tag_285\n        /* \"#utility.yul\":12897:12901   */\n      dup2\n        /* \"#utility.yul\":12771:12902   */\n      tag_163\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":12763:12902   */\n      swap1\n      pop\n        /* \"#utility.yul\":12490:12909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12915:13247   */\n    tag_90:\n        /* \"#utility.yul\":13036:13040   */\n      0x00\n        /* \"#utility.yul\":13074:13076   */\n      0x40\n        /* \"#utility.yul\":13063:13072   */\n      dup3\n        /* \"#utility.yul\":13059:13077   */\n      add\n        /* \"#utility.yul\":13051:13077   */\n      swap1\n      pop\n        /* \"#utility.yul\":13087:13158   */\n      tag_287\n        /* \"#utility.yul\":13155:13156   */\n      0x00\n        /* \"#utility.yul\":13144:13153   */\n      dup4\n        /* \"#utility.yul\":13140:13157   */\n      add\n        /* \"#utility.yul\":13131:13137   */\n      dup6\n        /* \"#utility.yul\":13087:13158   */\n      tag_144\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":13168:13240   */\n      tag_288\n        /* \"#utility.yul\":13236:13238   */\n      0x20\n        /* \"#utility.yul\":13225:13234   */\n      dup4\n        /* \"#utility.yul\":13221:13239   */\n      add\n        /* \"#utility.yul\":13212:13218   */\n      dup5\n        /* \"#utility.yul\":13168:13240   */\n      tag_143\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":12915:13247   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13253:13390   */\n    tag_164:\n        /* \"#utility.yul\":13307:13312   */\n      0x00\n        /* \"#utility.yul\":13338:13344   */\n      dup2\n        /* \"#utility.yul\":13332:13345   */\n      mload\n        /* \"#utility.yul\":13323:13345   */\n      swap1\n      pop\n        /* \"#utility.yul\":13354:13384   */\n      tag_290\n        /* \"#utility.yul\":13378:13383   */\n      dup2\n        /* \"#utility.yul\":13354:13384   */\n      tag_141\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":13253:13390   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13396:13741   */\n    tag_94:\n        /* \"#utility.yul\":13463:13469   */\n      0x00\n        /* \"#utility.yul\":13512:13514   */\n      0x20\n        /* \"#utility.yul\":13500:13509   */\n      dup3\n        /* \"#utility.yul\":13491:13498   */\n      dup5\n        /* \"#utility.yul\":13487:13510   */\n      sub\n        /* \"#utility.yul\":13483:13515   */\n      slt\n        /* \"#utility.yul\":13480:13599   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":13518:13597   */\n      tag_293\n      tag_131\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":13480:13599   */\n    tag_292:\n        /* \"#utility.yul\":13638:13639   */\n      0x00\n        /* \"#utility.yul\":13663:13724   */\n      tag_294\n        /* \"#utility.yul\":13716:13723   */\n      dup5\n        /* \"#utility.yul\":13707:13713   */\n      dup3\n        /* \"#utility.yul\":13696:13705   */\n      dup6\n        /* \"#utility.yul\":13692:13714   */\n      add\n        /* \"#utility.yul\":13663:13724   */\n      tag_164\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":13653:13724   */\n      swap2\n      pop\n        /* \"#utility.yul\":13609:13734   */\n      pop\n        /* \"#utility.yul\":13396:13741   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13747:13993   */\n    tag_165:\n        /* \"#utility.yul\":13887:13921   */\n      0x56657374696e67207363686564756c65206e6f74207265766f6361626c65205b\n        /* \"#utility.yul\":13883:13884   */\n      0x00\n        /* \"#utility.yul\":13875:13881   */\n      dup3\n        /* \"#utility.yul\":13871:13885   */\n      add\n        /* \"#utility.yul\":13864:13922   */\n      mstore\n        /* \"#utility.yul\":13956:13985   */\n      0x696e207265766f6b6556657374696e675363686564756c6528295d0000000000\n        /* \"#utility.yul\":13951:13953   */\n      0x20\n        /* \"#utility.yul\":13943:13949   */\n      dup3\n        /* \"#utility.yul\":13939:13954   */\n      add\n        /* \"#utility.yul\":13932:13986   */\n      mstore\n        /* \"#utility.yul\":13747:13993   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13999:14365   */\n    tag_166:\n        /* \"#utility.yul\":14141:14144   */\n      0x00\n        /* \"#utility.yul\":14162:14229   */\n      tag_297\n        /* \"#utility.yul\":14226:14228   */\n      0x3b\n        /* \"#utility.yul\":14221:14224   */\n      dup4\n        /* \"#utility.yul\":14162:14229   */\n      tag_151\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":14155:14229   */\n      swap2\n      pop\n        /* \"#utility.yul\":14238:14331   */\n      tag_298\n        /* \"#utility.yul\":14327:14330   */\n      dup3\n        /* \"#utility.yul\":14238:14331   */\n      tag_165\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":14356:14358   */\n      0x40\n        /* \"#utility.yul\":14351:14354   */\n      dup3\n        /* \"#utility.yul\":14347:14359   */\n      add\n        /* \"#utility.yul\":14340:14359   */\n      swap1\n      pop\n        /* \"#utility.yul\":13999:14365   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14371:14790   */\n    tag_102:\n        /* \"#utility.yul\":14537:14541   */\n      0x00\n        /* \"#utility.yul\":14575:14577   */\n      0x20\n        /* \"#utility.yul\":14564:14573   */\n      dup3\n        /* \"#utility.yul\":14560:14578   */\n      add\n        /* \"#utility.yul\":14552:14578   */\n      swap1\n      pop\n        /* \"#utility.yul\":14624:14633   */\n      dup2\n        /* \"#utility.yul\":14618:14622   */\n      dup2\n        /* \"#utility.yul\":14614:14634   */\n      sub\n        /* \"#utility.yul\":14610:14611   */\n      0x00\n        /* \"#utility.yul\":14599:14608   */\n      dup4\n        /* \"#utility.yul\":14595:14612   */\n      add\n        /* \"#utility.yul\":14588:14635   */\n      mstore\n        /* \"#utility.yul\":14652:14783   */\n      tag_300\n        /* \"#utility.yul\":14778:14782   */\n      dup2\n        /* \"#utility.yul\":14652:14783   */\n      tag_166\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":14644:14783   */\n      swap1\n      pop\n        /* \"#utility.yul\":14371:14790   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14796:15044   */\n    tag_167:\n        /* \"#utility.yul\":14936:14970   */\n      0x56657374696e67207363686564756c6520616c7265616479207265766f6b6564\n        /* \"#utility.yul\":14932:14933   */\n      0x00\n        /* \"#utility.yul\":14924:14930   */\n      dup3\n        /* \"#utility.yul\":14920:14934   */\n      add\n        /* \"#utility.yul\":14913:14971   */\n      mstore\n        /* \"#utility.yul\":15005:15036   */\n      0x205b696e207265766f6b6556657374696e675363686564756c6528295d000000\n        /* \"#utility.yul\":15000:15002   */\n      0x20\n        /* \"#utility.yul\":14992:14998   */\n      dup3\n        /* \"#utility.yul\":14988:15003   */\n      add\n        /* \"#utility.yul\":14981:15037   */\n      mstore\n        /* \"#utility.yul\":14796:15044   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15050:15416   */\n    tag_168:\n        /* \"#utility.yul\":15192:15195   */\n      0x00\n        /* \"#utility.yul\":15213:15280   */\n      tag_303\n        /* \"#utility.yul\":15277:15279   */\n      0x3d\n        /* \"#utility.yul\":15272:15275   */\n      dup4\n        /* \"#utility.yul\":15213:15280   */\n      tag_151\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":15206:15280   */\n      swap2\n      pop\n        /* \"#utility.yul\":15289:15382   */\n      tag_304\n        /* \"#utility.yul\":15378:15381   */\n      dup3\n        /* \"#utility.yul\":15289:15382   */\n      tag_167\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":15407:15409   */\n      0x40\n        /* \"#utility.yul\":15402:15405   */\n      dup3\n        /* \"#utility.yul\":15398:15410   */\n      add\n        /* \"#utility.yul\":15391:15410   */\n      swap1\n      pop\n        /* \"#utility.yul\":15050:15416   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15422:15841   */\n    tag_105:\n        /* \"#utility.yul\":15588:15592   */\n      0x00\n        /* \"#utility.yul\":15626:15628   */\n      0x20\n        /* \"#utility.yul\":15615:15624   */\n      dup3\n        /* \"#utility.yul\":15611:15629   */\n      add\n        /* \"#utility.yul\":15603:15629   */\n      swap1\n      pop\n        /* \"#utility.yul\":15675:15684   */\n      dup2\n        /* \"#utility.yul\":15669:15673   */\n      dup2\n        /* \"#utility.yul\":15665:15685   */\n      sub\n        /* \"#utility.yul\":15661:15662   */\n      0x00\n        /* \"#utility.yul\":15650:15659   */\n      dup4\n        /* \"#utility.yul\":15646:15663   */\n      add\n        /* \"#utility.yul\":15639:15686   */\n      mstore\n        /* \"#utility.yul\":15703:15834   */\n      tag_306\n        /* \"#utility.yul\":15829:15833   */\n      dup2\n        /* \"#utility.yul\":15703:15834   */\n      tag_168\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":15695:15834   */\n      swap1\n      pop\n        /* \"#utility.yul\":15422:15841   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15847:15990   */\n    tag_169:\n        /* \"#utility.yul\":15904:15909   */\n      0x00\n        /* \"#utility.yul\":15935:15941   */\n      dup2\n        /* \"#utility.yul\":15929:15942   */\n      mload\n        /* \"#utility.yul\":15920:15942   */\n      swap1\n      pop\n        /* \"#utility.yul\":15951:15984   */\n      tag_308\n        /* \"#utility.yul\":15978:15983   */\n      dup2\n        /* \"#utility.yul\":15951:15984   */\n      tag_138\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":15847:15990   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15996:16347   */\n    tag_117:\n        /* \"#utility.yul\":16066:16072   */\n      0x00\n        /* \"#utility.yul\":16115:16117   */\n      0x20\n        /* \"#utility.yul\":16103:16112   */\n      dup3\n        /* \"#utility.yul\":16094:16101   */\n      dup5\n        /* \"#utility.yul\":16090:16113   */\n      sub\n        /* \"#utility.yul\":16086:16118   */\n      slt\n        /* \"#utility.yul\":16083:16202   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":16121:16200   */\n      tag_311\n      tag_131\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":16083:16202   */\n    tag_310:\n        /* \"#utility.yul\":16241:16242   */\n      0x00\n        /* \"#utility.yul\":16266:16330   */\n      tag_312\n        /* \"#utility.yul\":16322:16329   */\n      dup5\n        /* \"#utility.yul\":16313:16319   */\n      dup3\n        /* \"#utility.yul\":16302:16311   */\n      dup6\n        /* \"#utility.yul\":16298:16320   */\n      add\n        /* \"#utility.yul\":16266:16330   */\n      tag_169\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":16256:16330   */\n      swap2\n      pop\n        /* \"#utility.yul\":16212:16340   */\n      pop\n        /* \"#utility.yul\":15996:16347   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16353:16533   */\n    tag_170:\n        /* \"#utility.yul\":16401:16478   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16398:16399   */\n      0x00\n        /* \"#utility.yul\":16391:16479   */\n      mstore\n        /* \"#utility.yul\":16498:16502   */\n      0x11\n        /* \"#utility.yul\":16495:16496   */\n      0x04\n        /* \"#utility.yul\":16488:16503   */\n      mstore\n        /* \"#utility.yul\":16522:16526   */\n      0x24\n        /* \"#utility.yul\":16519:16520   */\n      0x00\n        /* \"#utility.yul\":16512:16527   */\n      revert\n        /* \"#utility.yul\":16539:16730   */\n    tag_120:\n        /* \"#utility.yul\":16579:16582   */\n      0x00\n        /* \"#utility.yul\":16598:16618   */\n      tag_315\n        /* \"#utility.yul\":16616:16617   */\n      dup3\n        /* \"#utility.yul\":16598:16618   */\n      tag_137\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":16593:16618   */\n      swap2\n      pop\n        /* \"#utility.yul\":16632:16652   */\n      tag_316\n        /* \"#utility.yul\":16650:16651   */\n      dup4\n        /* \"#utility.yul\":16632:16652   */\n      tag_137\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":16627:16652   */\n      swap3\n      pop\n        /* \"#utility.yul\":16675:16676   */\n      dup3\n        /* \"#utility.yul\":16672:16673   */\n      dup3\n        /* \"#utility.yul\":16668:16677   */\n      add\n        /* \"#utility.yul\":16661:16677   */\n      swap1\n      pop\n        /* \"#utility.yul\":16696:16699   */\n      dup1\n        /* \"#utility.yul\":16693:16694   */\n      dup3\n        /* \"#utility.yul\":16690:16700   */\n      gt\n        /* \"#utility.yul\":16687:16723   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":16703:16721   */\n      tag_318\n      tag_170\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":16687:16723   */\n    tag_317:\n        /* \"#utility.yul\":16539:16730   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16736:16930   */\n    tag_123:\n        /* \"#utility.yul\":16776:16780   */\n      0x00\n        /* \"#utility.yul\":16796:16816   */\n      tag_320\n        /* \"#utility.yul\":16814:16815   */\n      dup3\n        /* \"#utility.yul\":16796:16816   */\n      tag_137\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":16791:16816   */\n      swap2\n      pop\n        /* \"#utility.yul\":16830:16850   */\n      tag_321\n        /* \"#utility.yul\":16848:16849   */\n      dup4\n        /* \"#utility.yul\":16830:16850   */\n      tag_137\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":16825:16850   */\n      swap3\n      pop\n        /* \"#utility.yul\":16874:16875   */\n      dup3\n        /* \"#utility.yul\":16871:16872   */\n      dup3\n        /* \"#utility.yul\":16867:16876   */\n      sub\n        /* \"#utility.yul\":16859:16876   */\n      swap1\n      pop\n        /* \"#utility.yul\":16898:16899   */\n      dup2\n        /* \"#utility.yul\":16892:16896   */\n      dup2\n        /* \"#utility.yul\":16889:16900   */\n      gt\n        /* \"#utility.yul\":16886:16923   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":16903:16921   */\n      tag_323\n      tag_170\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":16886:16923   */\n    tag_322:\n        /* \"#utility.yul\":16736:16930   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16936:17116   */\n    tag_171:\n        /* \"#utility.yul\":16984:17061   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16981:16982   */\n      0x00\n        /* \"#utility.yul\":16974:17062   */\n      mstore\n        /* \"#utility.yul\":17081:17085   */\n      0x12\n        /* \"#utility.yul\":17078:17079   */\n      0x04\n        /* \"#utility.yul\":17071:17086   */\n      mstore\n        /* \"#utility.yul\":17105:17109   */\n      0x24\n        /* \"#utility.yul\":17102:17103   */\n      0x00\n        /* \"#utility.yul\":17095:17110   */\n      revert\n        /* \"#utility.yul\":17122:17307   */\n    tag_126:\n        /* \"#utility.yul\":17162:17163   */\n      0x00\n        /* \"#utility.yul\":17179:17199   */\n      tag_326\n        /* \"#utility.yul\":17197:17198   */\n      dup3\n        /* \"#utility.yul\":17179:17199   */\n      tag_137\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":17174:17199   */\n      swap2\n      pop\n        /* \"#utility.yul\":17213:17233   */\n      tag_327\n        /* \"#utility.yul\":17231:17232   */\n      dup4\n        /* \"#utility.yul\":17213:17233   */\n      tag_137\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":17208:17233   */\n      swap3\n      pop\n        /* \"#utility.yul\":17252:17253   */\n      dup3\n        /* \"#utility.yul\":17242:17277   */\n      tag_328\n      jumpi\n        /* \"#utility.yul\":17257:17275   */\n      tag_329\n      tag_171\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":17242:17277   */\n    tag_328:\n        /* \"#utility.yul\":17299:17300   */\n      dup3\n        /* \"#utility.yul\":17296:17297   */\n      dup3\n        /* \"#utility.yul\":17292:17301   */\n      div\n        /* \"#utility.yul\":17287:17301   */\n      swap1\n      pop\n        /* \"#utility.yul\":17122:17307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17313:17723   */\n    tag_129:\n        /* \"#utility.yul\":17353:17360   */\n      0x00\n        /* \"#utility.yul\":17376:17396   */\n      tag_331\n        /* \"#utility.yul\":17394:17395   */\n      dup3\n        /* \"#utility.yul\":17376:17396   */\n      tag_137\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":17371:17396   */\n      swap2\n      pop\n        /* \"#utility.yul\":17410:17430   */\n      tag_332\n        /* \"#utility.yul\":17428:17429   */\n      dup4\n        /* \"#utility.yul\":17410:17430   */\n      tag_137\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":17405:17430   */\n      swap3\n      pop\n        /* \"#utility.yul\":17465:17466   */\n      dup3\n        /* \"#utility.yul\":17462:17463   */\n      dup3\n        /* \"#utility.yul\":17458:17467   */\n      mul\n        /* \"#utility.yul\":17487:17517   */\n      tag_333\n        /* \"#utility.yul\":17505:17516   */\n      dup2\n        /* \"#utility.yul\":17487:17517   */\n      tag_137\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":17476:17517   */\n      swap2\n      pop\n        /* \"#utility.yul\":17666:17667   */\n      dup3\n        /* \"#utility.yul\":17657:17664   */\n      dup3\n        /* \"#utility.yul\":17653:17668   */\n      div\n        /* \"#utility.yul\":17650:17651   */\n      dup5\n        /* \"#utility.yul\":17647:17669   */\n      eq\n        /* \"#utility.yul\":17627:17628   */\n      dup4\n        /* \"#utility.yul\":17620:17629   */\n      iszero\n        /* \"#utility.yul\":17600:17683   */\n      or\n        /* \"#utility.yul\":17577:17716   */\n      tag_334\n      jumpi\n        /* \"#utility.yul\":17696:17714   */\n      tag_335\n      tag_170\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":17577:17716   */\n    tag_334:\n        /* \"#utility.yul\":17361:17723   */\n      pop\n        /* \"#utility.yul\":17313:17723   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206771de05b12ee3447f881fb8aaa030640111d9f3d3e02880389a366dfbc2e3c064736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1204": {
									"entryPoint": null,
									"id": 1204,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_ERC20_$651_fromMemory": {
									"entryPoint": 286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ERC20_$651_fromMemory": {
									"entryPoint": 308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ERC20_$651": {
									"entryPoint": 242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 188,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ERC20_$651": {
									"entryPoint": 261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1392:7",
										"nodeType": "YulBlock",
										"src": "0:1392:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "626:51:7",
													"nodeType": "YulBlock",
													"src": "626:51:7",
													"statements": [
														{
															"nativeSrc": "636:35:7",
															"nodeType": "YulAssignment",
															"src": "636:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "665:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "665:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "647:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "647:17:7"
																},
																"nativeSrc": "647:24:7",
																"nodeType": "YulFunctionCall",
																"src": "647:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "636:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "636:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ERC20_$651",
												"nativeSrc": "568:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "608:5:7",
														"nodeType": "YulTypedName",
														"src": "608:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "618:7:7",
														"nodeType": "YulTypedName",
														"src": "618:7:7",
														"type": ""
													}
												],
												"src": "568:109:7"
											},
											{
												"body": {
													"nativeSrc": "739:92:7",
													"nodeType": "YulBlock",
													"src": "739:92:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "809:16:7",
																"nodeType": "YulBlock",
																"src": "809:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "818:1:7",
																					"nodeType": "YulLiteral",
																					"src": "818:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:7",
																					"nodeType": "YulLiteral",
																					"src": "821:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "811:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "811:6:7"
																			},
																			"nativeSrc": "811:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "811:12:7"
																		},
																		"nativeSrc": "811:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "811:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "762:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "762:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "800:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "800:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ERC20_$651",
																					"nativeSrc": "769:30:7",
																					"nodeType": "YulIdentifier",
																					"src": "769:30:7"
																				},
																				"nativeSrc": "769:37:7",
																				"nodeType": "YulFunctionCall",
																				"src": "769:37:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "759:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "759:2:7"
																		},
																		"nativeSrc": "759:48:7",
																		"nodeType": "YulFunctionCall",
																		"src": "759:48:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "752:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:7"
																},
																"nativeSrc": "752:56:7",
																"nodeType": "YulFunctionCall",
																"src": "752:56:7"
															},
															"nativeSrc": "749:76:7",
															"nodeType": "YulIf",
															"src": "749:76:7"
														}
													]
												},
												"name": "validator_revert_t_contract$_ERC20_$651",
												"nativeSrc": "683:148:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "732:5:7",
														"nodeType": "YulTypedName",
														"src": "732:5:7",
														"type": ""
													}
												],
												"src": "683:148:7"
											},
											{
												"body": {
													"nativeSrc": "913:93:7",
													"nodeType": "YulBlock",
													"src": "913:93:7",
													"statements": [
														{
															"nativeSrc": "923:22:7",
															"nodeType": "YulAssignment",
															"src": "923:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "938:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "938:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "932:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "932:5:7"
																},
																"nativeSrc": "932:13:7",
																"nodeType": "YulFunctionCall",
																"src": "932:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "923:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "923:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "994:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "994:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ERC20_$651",
																	"nativeSrc": "954:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "954:39:7"
																},
																"nativeSrc": "954:46:7",
																"nodeType": "YulFunctionCall",
																"src": "954:46:7"
															},
															"nativeSrc": "954:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "954:46:7"
														}
													]
												},
												"name": "abi_decode_t_contract$_ERC20_$651_fromMemory",
												"nativeSrc": "837:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "891:6:7",
														"nodeType": "YulTypedName",
														"src": "891:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "899:3:7",
														"nodeType": "YulTypedName",
														"src": "899:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "907:5:7",
														"nodeType": "YulTypedName",
														"src": "907:5:7",
														"type": ""
													}
												],
												"src": "837:169:7"
											},
											{
												"body": {
													"nativeSrc": "1102:287:7",
													"nodeType": "YulBlock",
													"src": "1102:287:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1148:83:7",
																"nodeType": "YulBlock",
																"src": "1148:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1150:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1150:77:7"
																			},
																			"nativeSrc": "1150:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1150:79:7"
																		},
																		"nativeSrc": "1150:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1150:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1123:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1132:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1132:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1119:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1119:3:7"
																		},
																		"nativeSrc": "1119:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1119:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1144:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1144:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1115:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1115:3:7"
																},
																"nativeSrc": "1115:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1115:32:7"
															},
															"nativeSrc": "1112:119:7",
															"nodeType": "YulIf",
															"src": "1112:119:7"
														},
														{
															"nativeSrc": "1241:141:7",
															"nodeType": "YulBlock",
															"src": "1241:141:7",
															"statements": [
																{
																	"nativeSrc": "1256:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1256:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1270:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1270:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1260:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1260:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1285:87:7",
																	"nodeType": "YulAssignment",
																	"src": "1285:87:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1344:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1344:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1355:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1355:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1340:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1340:3:7"
																				},
																				"nativeSrc": "1340:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1340:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1364:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1364:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ERC20_$651_fromMemory",
																			"nativeSrc": "1295:44:7",
																			"nodeType": "YulIdentifier",
																			"src": "1295:44:7"
																		},
																		"nativeSrc": "1295:77:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1295:77:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1285:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1285:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ERC20_$651_fromMemory",
												"nativeSrc": "1012:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1072:9:7",
														"nodeType": "YulTypedName",
														"src": "1072:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1083:7:7",
														"nodeType": "YulTypedName",
														"src": "1083:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1095:6:7",
														"nodeType": "YulTypedName",
														"src": "1095:6:7",
														"type": ""
													}
												],
												"src": "1012:377:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ERC20_$651(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ERC20_$651(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC20_$651(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ERC20_$651_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC20_$651(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ERC20_$651_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC20_$651_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040516200174538038062001745833981810160405281019062000036919062000134565b335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000164565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620000eb82620000c0565b9050919050565b5f620000fe82620000df565b9050919050565b6200011081620000f2565b81146200011b575f80fd5b50565b5f815190506200012e8162000105565b92915050565b5f602082840312156200014c576200014b620000bc565b5b5f6200015b848285016200011e565b91505092915050565b6115d380620001725f395ff3fe608060405234801561000f575f80fd5b5060043610610091575f3560e01c8063a96f866811610064578063a96f86681461011d578063f035a27214610127578063f8b2cb4f14610143578063fc0c546a14610173578063fdb20ccb1461019157610091565b80634495e82714610095578063557ed1ba146100b15780637dc8a8aa146100cf5780638da5cb5b146100ff575b5f80fd5b6100af60048036038101906100aa9190610cf7565b6101c8565b005b6100b961040c565b6040516100c69190610da3565b60405180910390f35b6100e960048036038101906100e49190610dbc565b610413565b6040516100f69190610da3565b60405180910390f35b6101076105b1565b6040516101149190610df6565b60405180910390f35b6101256105d4565b005b610141600480360381019061013c9190610dbc565b610806565b005b61015d60048036038101906101589190610dbc565b610abb565b60405161016a9190610da3565b60405180910390f35b61017b610b5c565b6040516101889190610e6a565b60405180910390f35b6101ab60048036038101906101a69190610dbc565b610b81565b6040516101bf989796959493929190610e92565b60405180910390f35b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610255576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024c90610f68565b60405180910390fd5b5f60025f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0154146102d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cd90610ff6565b60405180910390fd5b5f821180156102e457505f84115b610323576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031a90611084565b60405180910390fd5b5f60025f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905086815f018190555085816001018190555084816002018190555083816003018190555082816004018190555081816005015f6101000a81548160ff0219169083151502179055508773ffffffffffffffffffffffffffffffffffffffff167fbea02a5045606a667ff06eb235c005b4f95b55a10c174b5aae63ba6be2ae98088888888888886040516103fa969594939291906110a2565b60405180910390a25050505050505050565b5f42905090565b5f8060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20604051806101000160405290815f820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015f9054906101000a900460ff1615151515815260200160068201548152602001600782015f9054906101000a900460ff16151515158152505090506104e98160200151825f0151610bdd90919063ffffffff16565b4210156104f9575f9150506105ac565b5f6105268260200151610518845f015142610bf290919063ffffffff16565b610bf290919063ffffffff16565b90505f61054483606001518460400151610c0790919063ffffffff16565b90505f61055e846060015184610c0790919063ffffffff16565b90508181106105775783608001519450505050506105ac565b5f61058f838660800151610c0790919063ffffffff16565b90506105a48282610c1c90919063ffffffff16565b955050505050505b919050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f015411610659576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065090611171565b60405180910390fd5b806007015f9054906101000a900460ff16156106aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a1906111ff565b60405180910390fd5b5f6106b433610413565b90505f81116106f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ef9061128d565b60405180910390fd5b61070f818360060154610bdd90919063ffffffff16565b826006018190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016107739291906112ab565b6020604051808303815f875af115801561078f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107b391906112e6565b503373ffffffffffffffffffffffffffffffffffffffff167fc7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df93179826040516107fa9190610da3565b60405180910390a25050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610893576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088a90610f68565b60405180910390fd5b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050806005015f9054906101000a900460ff16610923576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091a90611381565b60405180910390fd5b806007015f9054906101000a900460ff1615610974576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096b9061140f565b60405180910390fd5b6001816007015f6101000a81548160ff0219169083151502179055505f6109ac82600601548360040154610bf290919063ffffffff16565b90505f811115610a735760015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401610a319291906112ab565b6020604051808303815f875af1158015610a4d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a7191906112e6565b505b8273ffffffffffffffffffffffffffffffffffffffff167f68d870ac0aff3819234e8a1fc8f357b40d75212f2dc8594b97690fa205b3bab260405160405180910390a2505050565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401610b169190610df6565b602060405180830381865afa158015610b31573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b559190611441565b9050919050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002602052805f5260405f205f91509050805f015490806001015490806002015490806003015490806004015490806005015f9054906101000a900460ff1690806006015490806007015f9054906101000a900460ff16905088565b5f8183610bea9190611499565b905092915050565b5f8183610bff91906114cc565b905092915050565b5f8183610c14919061152c565b905092915050565b5f8183610c29919061155c565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c5e82610c35565b9050919050565b610c6e81610c54565b8114610c78575f80fd5b50565b5f81359050610c8981610c65565b92915050565b5f819050919050565b610ca181610c8f565b8114610cab575f80fd5b50565b5f81359050610cbc81610c98565b92915050565b5f8115159050919050565b610cd681610cc2565b8114610ce0575f80fd5b50565b5f81359050610cf181610ccd565b92915050565b5f805f805f805f60e0888a031215610d1257610d11610c31565b5b5f610d1f8a828b01610c7b565b9750506020610d308a828b01610cae565b9650506040610d418a828b01610cae565b9550506060610d528a828b01610cae565b9450506080610d638a828b01610cae565b93505060a0610d748a828b01610cae565b92505060c0610d858a828b01610ce3565b91505092959891949750929550565b610d9d81610c8f565b82525050565b5f602082019050610db65f830184610d94565b92915050565b5f60208284031215610dd157610dd0610c31565b5b5f610dde84828501610c7b565b91505092915050565b610df081610c54565b82525050565b5f602082019050610e095f830184610de7565b92915050565b5f819050919050565b5f610e32610e2d610e2884610c35565b610e0f565b610c35565b9050919050565b5f610e4382610e18565b9050919050565b5f610e5482610e39565b9050919050565b610e6481610e4a565b82525050565b5f602082019050610e7d5f830184610e5b565b92915050565b610e8c81610cc2565b82525050565b5f61010082019050610ea65f83018b610d94565b610eb3602083018a610d94565b610ec06040830189610d94565b610ecd6060830188610d94565b610eda6080830187610d94565b610ee760a0830186610e83565b610ef460c0830185610d94565b610f0160e0830184610e83565b9998505050505050505050565b5f82825260208201905092915050565b7f4e6f7420746865206f776e6572000000000000000000000000000000000000005f82015250565b5f610f52600d83610f0e565b9150610f5d82610f1e565b602082019050919050565b5f6020820190508181035f830152610f7f81610f46565b9050919050565b7f56657374696e67207363686564756c6520616c726561647920657869737473205f8201527f5b696e2063726561746556657374696e675363686564756c6528295d00000000602082015250565b5f610fe0603c83610f0e565b9150610feb82610f86565b604082019050919050565b5f6020820190508181035f83015261100d81610fd4565b9050919050565b7f496e76616c69642076657374696e6720706172616d6574657273205b696e20635f8201527f726561746556657374696e675363686564756c6528295d000000000000000000602082015250565b5f61106e603783610f0e565b915061107982611014565b604082019050919050565b5f6020820190508181035f83015261109b81611062565b9050919050565b5f60c0820190506110b55f830189610d94565b6110c26020830188610d94565b6110cf6040830187610d94565b6110dc6060830186610d94565b6110e96080830185610d94565b6110f660a0830184610e83565b979650505050505050565b7f4e6f2076657374696e67207363686564756c6520666f756e64205b696e2072655f8201527f6c65617365546f6b656e7328295d000000000000000000000000000000000000602082015250565b5f61115b602e83610f0e565b915061116682611101565b604082019050919050565b5f6020820190508181035f8301526111888161114f565b9050919050565b7f56657374696e67207363686564756c65207265766f6b6564205b696e2072656c5f8201527f65617365546f6b656e7328295d00000000000000000000000000000000000000602082015250565b5f6111e9602d83610f0e565b91506111f48261118f565b604082019050919050565b5f6020820190508181035f830152611216816111dd565b9050919050565b7f4e6f20746f6b656e73206172652063757272656e746c7920766573746564205b5f8201527f696e2072656c65617365546f6b656e7328295d00000000000000000000000000602082015250565b5f611277603383610f0e565b91506112828261121d565b604082019050919050565b5f6020820190508181035f8301526112a48161126b565b9050919050565b5f6040820190506112be5f830185610de7565b6112cb6020830184610d94565b9392505050565b5f815190506112e081610ccd565b92915050565b5f602082840312156112fb576112fa610c31565b5b5f611308848285016112d2565b91505092915050565b7f56657374696e67207363686564756c65206e6f74207265766f6361626c65205b5f8201527f696e207265766f6b6556657374696e675363686564756c6528295d0000000000602082015250565b5f61136b603b83610f0e565b915061137682611311565b604082019050919050565b5f6020820190508181035f8301526113988161135f565b9050919050565b7f56657374696e67207363686564756c6520616c7265616479207265766f6b65645f8201527f205b696e207265766f6b6556657374696e675363686564756c6528295d000000602082015250565b5f6113f9603d83610f0e565b91506114048261139f565b604082019050919050565b5f6020820190508181035f830152611426816113ed565b9050919050565b5f8151905061143b81610c98565b92915050565b5f6020828403121561145657611455610c31565b5b5f6114638482850161142d565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6114a382610c8f565b91506114ae83610c8f565b92508282019050808211156114c6576114c561146c565b5b92915050565b5f6114d682610c8f565b91506114e183610c8f565b92508282039050818111156114f9576114f861146c565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61153682610c8f565b915061154183610c8f565b925082611551576115506114ff565b5b828204905092915050565b5f61156682610c8f565b915061157183610c8f565b925082820261157f81610c8f565b915082820484148315176115965761159561146c565b5b509291505056fea26469706673582212206771de05b12ee3447f881fb8aaa030640111d9f3d3e02880389a366dfbc2e3c064736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1745 CODESIZE SUB DUP1 PUSH3 0x1745 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x134 JUMP JUMPDEST CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x164 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xEB DUP3 PUSH3 0xC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xFE DUP3 PUSH3 0xDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x110 DUP2 PUSH3 0xF2 JUMP JUMPDEST DUP2 EQ PUSH3 0x11B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x12E DUP2 PUSH3 0x105 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x14C JUMPI PUSH3 0x14B PUSH3 0xBC JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x15B DUP5 DUP3 DUP6 ADD PUSH3 0x11E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15D3 DUP1 PUSH3 0x172 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA96F8668 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA96F8668 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0xF035A272 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xFDB20CCB EQ PUSH2 0x191 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x4495E827 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x557ED1BA EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x7DC8A8AA EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x1C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB9 PUSH2 0x40C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x125 PUSH2 0x5D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x158 SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST PUSH2 0xABB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x255 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24C SWAP1 PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD EQ PUSH2 0x2D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CD SWAP1 PUSH2 0xFF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x2E4 JUMPI POP PUSH0 DUP5 GT JUMPDEST PUSH2 0x323 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31A SWAP1 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP7 DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP6 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBEA02A5045606A667FF06EB235C005B4F95B55A10C174B5AAE63BA6BE2AE9808 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x3FA SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x4E9 DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH0 ADD MLOAD PUSH2 0xBDD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x4F9 JUMPI PUSH0 SWAP2 POP POP PUSH2 0x5AC JUMP JUMPDEST PUSH0 PUSH2 0x526 DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x518 DUP5 PUSH0 ADD MLOAD TIMESTAMP PUSH2 0xBF2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xBF2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x544 DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0xC07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x55E DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH2 0xC07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT PUSH2 0x577 JUMPI DUP4 PUSH1 0x80 ADD MLOAD SWAP5 POP POP POP POP POP PUSH2 0x5AC JUMP JUMPDEST PUSH0 PUSH2 0x58F DUP4 DUP7 PUSH1 0x80 ADD MLOAD PUSH2 0xC07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x5A4 DUP3 DUP3 PUSH2 0xC1C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD GT PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x650 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x6AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A1 SWAP1 PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x6B4 CALLER PUSH2 0x413 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x6F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EF SWAP1 PUSH2 0x128D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70F DUP2 DUP4 PUSH1 0x6 ADD SLOAD PUSH2 0xBDD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x773 SWAP3 SWAP2 SWAP1 PUSH2 0x12AB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x78F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7B3 SWAP2 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC7798891864187665AC6DD119286E44EC13F014527AEEB2B8EB3FD413DF93179 DUP3 PUSH1 0x40 MLOAD PUSH2 0x7FA SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x893 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88A SWAP1 PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x923 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91A SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x974 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96B SWAP1 PUSH2 0x140F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x7 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH2 0x9AC DUP3 PUSH1 0x6 ADD SLOAD DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0xBF2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xA73 JUMPI PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA31 SWAP3 SWAP2 SWAP1 PUSH2 0x12AB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA4D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA71 SWAP2 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x68D870AC0AFF3819234E8A1FC8F357B40D75212F2DC8594B97690FA205B3BAB2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB16 SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB31 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB55 SWAP2 SWAP1 PUSH2 0x1441 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP9 JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xBEA SWAP2 SWAP1 PUSH2 0x1499 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xBFF SWAP2 SWAP1 PUSH2 0x14CC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xC14 SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xC29 SWAP2 SWAP1 PUSH2 0x155C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC5E DUP3 PUSH2 0xC35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC6E DUP2 PUSH2 0xC54 JUMP JUMPDEST DUP2 EQ PUSH2 0xC78 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC89 DUP2 PUSH2 0xC65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCA1 DUP2 PUSH2 0xC8F JUMP JUMPDEST DUP2 EQ PUSH2 0xCAB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCBC DUP2 PUSH2 0xC98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD6 DUP2 PUSH2 0xCC2 JUMP JUMPDEST DUP2 EQ PUSH2 0xCE0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCF1 DUP2 PUSH2 0xCCD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xD12 JUMPI PUSH2 0xD11 PUSH2 0xC31 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD1F DUP11 DUP3 DUP12 ADD PUSH2 0xC7B JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0xD30 DUP11 DUP3 DUP12 ADD PUSH2 0xCAE JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0xD41 DUP11 DUP3 DUP12 ADD PUSH2 0xCAE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0xD52 DUP11 DUP3 DUP12 ADD PUSH2 0xCAE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0xD63 DUP11 DUP3 DUP12 ADD PUSH2 0xCAE JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0xD74 DUP11 DUP3 DUP12 ADD PUSH2 0xCAE JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0xD85 DUP11 DUP3 DUP12 ADD PUSH2 0xCE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH2 0xD9D DUP2 PUSH2 0xC8F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB6 PUSH0 DUP4 ADD DUP5 PUSH2 0xD94 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD1 JUMPI PUSH2 0xDD0 PUSH2 0xC31 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDDE DUP5 DUP3 DUP6 ADD PUSH2 0xC7B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDF0 DUP2 PUSH2 0xC54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE09 PUSH0 DUP4 ADD DUP5 PUSH2 0xDE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE32 PUSH2 0xE2D PUSH2 0xE28 DUP5 PUSH2 0xC35 JUMP JUMPDEST PUSH2 0xE0F JUMP JUMPDEST PUSH2 0xC35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE43 DUP3 PUSH2 0xE18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE54 DUP3 PUSH2 0xE39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE64 DUP2 PUSH2 0xE4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE7D PUSH0 DUP4 ADD DUP5 PUSH2 0xE5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE8C DUP2 PUSH2 0xCC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xEA6 PUSH0 DUP4 ADD DUP12 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0xEB3 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0xEC0 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0xECD PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0xEDA PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0xEE7 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0xE83 JUMP JUMPDEST PUSH2 0xEF4 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0xF01 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0xE83 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420746865206F776E657200000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF52 PUSH1 0xD DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0xF5D DUP3 PUSH2 0xF1E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF7F DUP2 PUSH2 0xF46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56657374696E67207363686564756C6520616C72656164792065786973747320 PUSH0 DUP3 ADD MSTORE PUSH32 0x5B696E2063726561746556657374696E675363686564756C6528295D00000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFE0 PUSH1 0x3C DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0xFEB DUP3 PUSH2 0xF86 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x100D DUP2 PUSH2 0xFD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642076657374696E6720706172616D6574657273205B696E2063 PUSH0 DUP3 ADD MSTORE PUSH32 0x726561746556657374696E675363686564756C6528295D000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x106E PUSH1 0x37 DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x1079 DUP3 PUSH2 0x1014 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x109B DUP2 PUSH2 0x1062 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x10B5 PUSH0 DUP4 ADD DUP10 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0x10C2 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0x10CF PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0x10DC PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0x10E9 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0x10F6 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0xE83 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F2076657374696E67207363686564756C6520666F756E64205B696E207265 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C65617365546F6B656E7328295D000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x115B PUSH1 0x2E DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x1166 DUP3 PUSH2 0x1101 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1188 DUP2 PUSH2 0x114F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56657374696E67207363686564756C65207265766F6B6564205B696E2072656C PUSH0 DUP3 ADD MSTORE PUSH32 0x65617365546F6B656E7328295D00000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11E9 PUSH1 0x2D DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x11F4 DUP3 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1216 DUP2 PUSH2 0x11DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E73206172652063757272656E746C7920766573746564205B PUSH0 DUP3 ADD MSTORE PUSH32 0x696E2072656C65617365546F6B656E7328295D00000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1277 PUSH1 0x33 DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x1282 DUP3 PUSH2 0x121D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12A4 DUP2 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12BE PUSH0 DUP4 ADD DUP6 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x12CB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD94 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x12E0 DUP2 PUSH2 0xCCD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12FB JUMPI PUSH2 0x12FA PUSH2 0xC31 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1308 DUP5 DUP3 DUP6 ADD PUSH2 0x12D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x56657374696E67207363686564756C65206E6F74207265766F6361626C65205B PUSH0 DUP3 ADD MSTORE PUSH32 0x696E207265766F6B6556657374696E675363686564756C6528295D0000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x136B PUSH1 0x3B DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x1376 DUP3 PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1398 DUP2 PUSH2 0x135F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56657374696E67207363686564756C6520616C7265616479207265766F6B6564 PUSH0 DUP3 ADD MSTORE PUSH32 0x205B696E207265766F6B6556657374696E675363686564756C6528295D000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13F9 PUSH1 0x3D DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x1404 DUP3 PUSH2 0x139F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1426 DUP2 PUSH2 0x13ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x143B DUP2 PUSH2 0xC98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1456 JUMPI PUSH2 0x1455 PUSH2 0xC31 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1463 DUP5 DUP3 DUP6 ADD PUSH2 0x142D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x14A3 DUP3 PUSH2 0xC8F JUMP JUMPDEST SWAP2 POP PUSH2 0x14AE DUP4 PUSH2 0xC8F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x14C6 JUMPI PUSH2 0x14C5 PUSH2 0x146C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14D6 DUP3 PUSH2 0xC8F JUMP JUMPDEST SWAP2 POP PUSH2 0x14E1 DUP4 PUSH2 0xC8F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x14F9 JUMPI PUSH2 0x14F8 PUSH2 0x146C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1536 DUP3 PUSH2 0xC8F JUMP JUMPDEST SWAP2 POP PUSH2 0x1541 DUP4 PUSH2 0xC8F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1551 JUMPI PUSH2 0x1550 PUSH2 0x14FF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1566 DUP3 PUSH2 0xC8F JUMP JUMPDEST SWAP2 POP PUSH2 0x1571 DUP4 PUSH2 0xC8F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x157F DUP2 PUSH2 0xC8F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1596 JUMPI PUSH2 0x1595 PUSH2 0x146C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x71DE05B12EE3447F DUP9 0x1F 0xB8 0xAA LOG0 ADDRESS PUSH5 0x111D9F3D3 0xE0 0x28 DUP1 CODESIZE SWAP11 CALLDATASIZE PUSH14 0xFBC2E3C064736F6C634300081600 CALLER ",
							"sourceMap": "179:4918:6:-:0;;;1340:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1385:10;1377:5;;:18;;;;;;;;;;;;;;;;;;1414:6;1406:5;;:14;;;;;;;;;;;;;;;;;;1340:88;179:4918;;88:117:7;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:109::-;618:7;647:24;665:5;647:24;:::i;:::-;636:35;;568:109;;;:::o;683:148::-;769:37;800:5;769:37;:::i;:::-;762:5;759:48;749:76;;821:1;818;811:12;749:76;683:148;:::o;837:169::-;907:5;938:6;932:13;923:22;;954:46;994:5;954:46;:::i;:::-;837:169;;;;:::o;1012:377::-;1095:6;1144:2;1132:9;1123:7;1119:23;1115:32;1112:119;;;1150:79;;:::i;:::-;1112:119;1270:1;1295:77;1364:7;1355:6;1344:9;1340:22;1295:77;:::i;:::-;1285:87;;1241:141;1012:377;;;;:::o;179:4918:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@add_961": {
									"entryPoint": 3037,
									"id": 961,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calculateReleasableTokens_1377": {
									"entryPoint": 1043,
									"id": 1377,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@createVestingSchedule_1298": {
									"entryPoint": 456,
									"id": 1298,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@div_1006": {
									"entryPoint": 3079,
									"id": 1006,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getBalance_1523": {
									"entryPoint": 2747,
									"id": 1523,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTime_1510": {
									"entryPoint": 1036,
									"id": 1510,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mul_991": {
									"entryPoint": 3100,
									"id": 991,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_1106": {
									"entryPoint": 1457,
									"id": 1106,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@releaseTokens_1442": {
									"entryPoint": 1492,
									"id": 1442,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@revokeVestingSchedule_1501": {
									"entryPoint": 2054,
									"id": 1501,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_976": {
									"entryPoint": 3058,
									"id": 976,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@token_1109": {
									"entryPoint": 2908,
									"id": 1109,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vestingSchedules_1131": {
									"entryPoint": 2945,
									"id": 1131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 3299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256t_uint256t_bool": {
									"entryPoint": 3319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack": {
									"entryPoint": 3675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_355818d83c8a345156e9c9a4dba90156101aa53cf6253a0e31b268cb4f5ed37c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b68c92569791860f282db1798d2130f4868b4523af1c81978c30cade9171f05_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_43d731a8d2f0ada02799d5871bba7214c5049cea0dc0905a332cbb13de3b790e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7396082dc6294442634f0de48aba0d988835ea8d6b07c9d734ff6fb82b9c2247_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7441065767ad0fe3bd08de9982a7ce4be699ef924daf185e4fd316647cedf834_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8068c343730405aa069278bd5a46c221f347524c68990a8a4739ee122c129a07_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5101,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bcc14aed11ccf054314d063261af3f30afd8d4635113ff9c4571c5a5464632f5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4779,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed": {
									"entryPoint": 3690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_355818d83c8a345156e9c9a4dba90156101aa53cf6253a0e31b268cb4f5ed37c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b68c92569791860f282db1798d2130f4868b4523af1c81978c30cade9171f05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_43d731a8d2f0ada02799d5871bba7214c5049cea0dc0905a332cbb13de3b790e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7396082dc6294442634f0de48aba0d988835ea8d6b07c9d734ff6fb82b9c2247__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7441065767ad0fe3bd08de9982a7ce4be699ef924daf185e4fd316647cedf834__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8068c343730405aa069278bd5a46c221f347524c68990a8a4739ee122c129a07__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bcc14aed11ccf054314d063261af3f30afd8d4635113ff9c4571c5a5464632f5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 4258,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 3730,
									"id": null,
									"parameterSlots": 9,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ERC20_$651_to_t_address": {
									"entryPoint": 3658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5228,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5375,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3121,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_355818d83c8a345156e9c9a4dba90156101aa53cf6253a0e31b268cb4f5ed37c": {
									"entryPoint": 4353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b68c92569791860f282db1798d2130f4868b4523af1c81978c30cade9171f05": {
									"entryPoint": 4637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_43d731a8d2f0ada02799d5871bba7214c5049cea0dc0905a332cbb13de3b790e": {
									"entryPoint": 4495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5": {
									"entryPoint": 3870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7396082dc6294442634f0de48aba0d988835ea8d6b07c9d734ff6fb82b9c2247": {
									"entryPoint": 4116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7441065767ad0fe3bd08de9982a7ce4be699ef924daf185e4fd316647cedf834": {
									"entryPoint": 4881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8068c343730405aa069278bd5a46c221f347524c68990a8a4739ee122c129a07": {
									"entryPoint": 5023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bcc14aed11ccf054314d063261af3f30afd8d4635113ff9c4571c5a5464632f5": {
									"entryPoint": 3974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:17726:7",
										"nodeType": "YulBlock",
										"src": "0:17726:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "748:87:7",
													"nodeType": "YulBlock",
													"src": "748:87:7",
													"statements": [
														{
															"nativeSrc": "758:29:7",
															"nodeType": "YulAssignment",
															"src": "758:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:7"
																},
																"nativeSrc": "767:20:7",
																"nodeType": "YulFunctionCall",
																"src": "767:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:7"
																},
																"nativeSrc": "796:33:7",
																"nodeType": "YulFunctionCall",
																"src": "796:33:7"
															},
															"nativeSrc": "796:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:7",
														"nodeType": "YulTypedName",
														"src": "726:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:7",
														"nodeType": "YulTypedName",
														"src": "734:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:7",
														"nodeType": "YulTypedName",
														"src": "742:5:7",
														"type": ""
													}
												],
												"src": "696:139:7"
											},
											{
												"body": {
													"nativeSrc": "886:32:7",
													"nodeType": "YulBlock",
													"src": "886:32:7",
													"statements": [
														{
															"nativeSrc": "896:16:7",
															"nodeType": "YulAssignment",
															"src": "896:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:7",
																"nodeType": "YulIdentifier",
																"src": "907:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:7",
														"nodeType": "YulTypedName",
														"src": "868:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:7",
														"nodeType": "YulTypedName",
														"src": "878:7:7",
														"type": ""
													}
												],
												"src": "841:77:7"
											},
											{
												"body": {
													"nativeSrc": "967:79:7",
													"nodeType": "YulBlock",
													"src": "967:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:7",
																"nodeType": "YulBlock",
																"src": "1024:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:7"
																			},
																			"nativeSrc": "1026:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:7"
																		},
																		"nativeSrc": "1026:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:7"
																				},
																				"nativeSrc": "997:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:7"
																		},
																		"nativeSrc": "987:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:7"
																},
																"nativeSrc": "980:43:7",
																"nodeType": "YulFunctionCall",
																"src": "980:43:7"
															},
															"nativeSrc": "977:63:7",
															"nodeType": "YulIf",
															"src": "977:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:7",
														"nodeType": "YulTypedName",
														"src": "960:5:7",
														"type": ""
													}
												],
												"src": "924:122:7"
											},
											{
												"body": {
													"nativeSrc": "1104:87:7",
													"nodeType": "YulBlock",
													"src": "1104:87:7",
													"statements": [
														{
															"nativeSrc": "1114:29:7",
															"nodeType": "YulAssignment",
															"src": "1114:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:7"
																},
																"nativeSrc": "1123:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:7"
																},
																"nativeSrc": "1152:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:7"
															},
															"nativeSrc": "1152:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:7",
														"nodeType": "YulTypedName",
														"src": "1082:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:7",
														"nodeType": "YulTypedName",
														"src": "1090:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:7",
														"nodeType": "YulTypedName",
														"src": "1098:5:7",
														"type": ""
													}
												],
												"src": "1052:139:7"
											},
											{
												"body": {
													"nativeSrc": "1239:48:7",
													"nodeType": "YulBlock",
													"src": "1239:48:7",
													"statements": [
														{
															"nativeSrc": "1249:32:7",
															"nodeType": "YulAssignment",
															"src": "1249:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1274:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1274:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1267:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1267:6:7"
																		},
																		"nativeSrc": "1267:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1267:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1260:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1260:6:7"
																},
																"nativeSrc": "1260:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1260:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1249:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1249:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1197:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1221:5:7",
														"nodeType": "YulTypedName",
														"src": "1221:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1231:7:7",
														"nodeType": "YulTypedName",
														"src": "1231:7:7",
														"type": ""
													}
												],
												"src": "1197:90:7"
											},
											{
												"body": {
													"nativeSrc": "1333:76:7",
													"nodeType": "YulBlock",
													"src": "1333:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1387:16:7",
																"nodeType": "YulBlock",
																"src": "1387:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1396:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1396:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1399:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1399:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1389:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1389:6:7"
																			},
																			"nativeSrc": "1389:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1389:12:7"
																		},
																		"nativeSrc": "1389:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1389:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1356:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1356:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1378:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1378:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "1363:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "1363:14:7"
																				},
																				"nativeSrc": "1363:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1363:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1353:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1353:2:7"
																		},
																		"nativeSrc": "1353:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1353:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1346:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1346:6:7"
																},
																"nativeSrc": "1346:40:7",
																"nodeType": "YulFunctionCall",
																"src": "1346:40:7"
															},
															"nativeSrc": "1343:60:7",
															"nodeType": "YulIf",
															"src": "1343:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "1293:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1326:5:7",
														"nodeType": "YulTypedName",
														"src": "1326:5:7",
														"type": ""
													}
												],
												"src": "1293:116:7"
											},
											{
												"body": {
													"nativeSrc": "1464:84:7",
													"nodeType": "YulBlock",
													"src": "1464:84:7",
													"statements": [
														{
															"nativeSrc": "1474:29:7",
															"nodeType": "YulAssignment",
															"src": "1474:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1496:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1483:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1483:12:7"
																},
																"nativeSrc": "1483:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1483:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1474:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1474:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1536:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1536:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "1512:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "1512:23:7"
																},
																"nativeSrc": "1512:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1512:30:7"
															},
															"nativeSrc": "1512:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "1512:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "1415:133:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1442:6:7",
														"nodeType": "YulTypedName",
														"src": "1442:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1450:3:7",
														"nodeType": "YulTypedName",
														"src": "1450:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1458:5:7",
														"nodeType": "YulTypedName",
														"src": "1458:5:7",
														"type": ""
													}
												],
												"src": "1415:133:7"
											},
											{
												"body": {
													"nativeSrc": "1719:1032:7",
													"nodeType": "YulBlock",
													"src": "1719:1032:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1766:83:7",
																"nodeType": "YulBlock",
																"src": "1766:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1768:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1768:77:7"
																			},
																			"nativeSrc": "1768:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1768:79:7"
																		},
																		"nativeSrc": "1768:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1768:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1740:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1740:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1749:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1749:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1736:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1736:3:7"
																		},
																		"nativeSrc": "1736:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1736:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1761:3:7",
																		"nodeType": "YulLiteral",
																		"src": "1761:3:7",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1732:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1732:3:7"
																},
																"nativeSrc": "1732:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1732:33:7"
															},
															"nativeSrc": "1729:120:7",
															"nodeType": "YulIf",
															"src": "1729:120:7"
														},
														{
															"nativeSrc": "1859:117:7",
															"nodeType": "YulBlock",
															"src": "1859:117:7",
															"statements": [
																{
																	"nativeSrc": "1874:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1874:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1888:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1888:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1878:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1878:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1903:63:7",
																	"nodeType": "YulAssignment",
																	"src": "1903:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1938:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1938:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1949:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1949:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1934:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1934:3:7"
																				},
																				"nativeSrc": "1934:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1934:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1958:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1958:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1913:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "1913:20:7"
																		},
																		"nativeSrc": "1913:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1913:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1903:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1903:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1986:118:7",
															"nodeType": "YulBlock",
															"src": "1986:118:7",
															"statements": [
																{
																	"nativeSrc": "2001:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2001:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2015:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2015:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2005:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2005:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2031:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2031:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2066:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2066:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2077:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2077:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2062:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2062:3:7"
																				},
																				"nativeSrc": "2062:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2062:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2086:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2086:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2041:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2041:20:7"
																		},
																		"nativeSrc": "2041:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2041:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2031:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2031:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2114:118:7",
															"nodeType": "YulBlock",
															"src": "2114:118:7",
															"statements": [
																{
																	"nativeSrc": "2129:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2129:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2143:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2143:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2133:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2133:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2159:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2159:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2194:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2194:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2205:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2205:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2190:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2190:3:7"
																				},
																				"nativeSrc": "2190:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2190:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2214:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2214:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2169:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2169:20:7"
																		},
																		"nativeSrc": "2169:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2169:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2159:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2159:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2242:118:7",
															"nodeType": "YulBlock",
															"src": "2242:118:7",
															"statements": [
																{
																	"nativeSrc": "2257:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2257:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2271:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2271:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2261:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2261:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2287:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2287:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2322:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2322:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2333:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2333:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2318:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2318:3:7"
																				},
																				"nativeSrc": "2318:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2318:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2342:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2342:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2297:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2297:20:7"
																		},
																		"nativeSrc": "2297:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2297:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "2287:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2287:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2370:119:7",
															"nodeType": "YulBlock",
															"src": "2370:119:7",
															"statements": [
																{
																	"nativeSrc": "2385:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2385:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2399:3:7",
																		"nodeType": "YulLiteral",
																		"src": "2399:3:7",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2389:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2389:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2416:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2416:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2451:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2451:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2462:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2462:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2447:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2447:3:7"
																				},
																				"nativeSrc": "2447:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2447:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2471:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2471:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2426:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2426:20:7"
																		},
																		"nativeSrc": "2426:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2426:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "2416:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2416:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2499:119:7",
															"nodeType": "YulBlock",
															"src": "2499:119:7",
															"statements": [
																{
																	"nativeSrc": "2514:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2514:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2528:3:7",
																		"nodeType": "YulLiteral",
																		"src": "2528:3:7",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2518:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2518:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2545:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2545:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2580:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2580:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2591:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2591:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2576:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2576:3:7"
																				},
																				"nativeSrc": "2576:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2576:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2600:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2600:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2555:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2555:20:7"
																		},
																		"nativeSrc": "2555:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2555:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "2545:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2545:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2628:116:7",
															"nodeType": "YulBlock",
															"src": "2628:116:7",
															"statements": [
																{
																	"nativeSrc": "2643:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2643:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2657:3:7",
																		"nodeType": "YulLiteral",
																		"src": "2657:3:7",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2647:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2647:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2674:60:7",
																	"nodeType": "YulAssignment",
																	"src": "2674:60:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2706:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2706:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2717:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2717:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2702:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2702:3:7"
																				},
																				"nativeSrc": "2702:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2702:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2726:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2726:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "2684:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "2684:17:7"
																		},
																		"nativeSrc": "2684:50:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2684:50:7"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "2674:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2674:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256t_uint256t_bool",
												"nativeSrc": "1554:1197:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1641:9:7",
														"nodeType": "YulTypedName",
														"src": "1641:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1652:7:7",
														"nodeType": "YulTypedName",
														"src": "1652:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1664:6:7",
														"nodeType": "YulTypedName",
														"src": "1664:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1672:6:7",
														"nodeType": "YulTypedName",
														"src": "1672:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1680:6:7",
														"nodeType": "YulTypedName",
														"src": "1680:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1688:6:7",
														"nodeType": "YulTypedName",
														"src": "1688:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1696:6:7",
														"nodeType": "YulTypedName",
														"src": "1696:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "1704:6:7",
														"nodeType": "YulTypedName",
														"src": "1704:6:7",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "1712:6:7",
														"nodeType": "YulTypedName",
														"src": "1712:6:7",
														"type": ""
													}
												],
												"src": "1554:1197:7"
											},
											{
												"body": {
													"nativeSrc": "2822:53:7",
													"nodeType": "YulBlock",
													"src": "2822:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2839:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2839:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2862:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2862:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2844:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "2844:17:7"
																		},
																		"nativeSrc": "2844:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2844:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2832:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2832:6:7"
																},
																"nativeSrc": "2832:37:7",
																"nodeType": "YulFunctionCall",
																"src": "2832:37:7"
															},
															"nativeSrc": "2832:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "2832:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2757:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2810:5:7",
														"nodeType": "YulTypedName",
														"src": "2810:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2817:3:7",
														"nodeType": "YulTypedName",
														"src": "2817:3:7",
														"type": ""
													}
												],
												"src": "2757:118:7"
											},
											{
												"body": {
													"nativeSrc": "2979:124:7",
													"nodeType": "YulBlock",
													"src": "2979:124:7",
													"statements": [
														{
															"nativeSrc": "2989:26:7",
															"nodeType": "YulAssignment",
															"src": "2989:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3001:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3001:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3012:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3012:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2997:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2997:3:7"
																},
																"nativeSrc": "2997:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2997:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2989:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2989:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3069:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3069:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3082:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3082:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3093:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3093:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3078:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3078:3:7"
																		},
																		"nativeSrc": "3078:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3078:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3025:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3025:43:7"
																},
																"nativeSrc": "3025:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3025:71:7"
															},
															"nativeSrc": "3025:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3025:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2881:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2951:9:7",
														"nodeType": "YulTypedName",
														"src": "2951:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2963:6:7",
														"nodeType": "YulTypedName",
														"src": "2963:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2974:4:7",
														"nodeType": "YulTypedName",
														"src": "2974:4:7",
														"type": ""
													}
												],
												"src": "2881:222:7"
											},
											{
												"body": {
													"nativeSrc": "3175:263:7",
													"nodeType": "YulBlock",
													"src": "3175:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3221:83:7",
																"nodeType": "YulBlock",
																"src": "3221:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3223:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3223:77:7"
																			},
																			"nativeSrc": "3223:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3223:79:7"
																		},
																		"nativeSrc": "3223:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3196:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3196:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3205:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3192:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:7"
																		},
																		"nativeSrc": "3192:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3192:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3188:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:7"
																},
																"nativeSrc": "3188:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3188:32:7"
															},
															"nativeSrc": "3185:119:7",
															"nodeType": "YulIf",
															"src": "3185:119:7"
														},
														{
															"nativeSrc": "3314:117:7",
															"nodeType": "YulBlock",
															"src": "3314:117:7",
															"statements": [
																{
																	"nativeSrc": "3329:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3329:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3343:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3343:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3333:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3333:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3358:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3358:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3393:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3393:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3404:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3404:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3389:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3389:3:7"
																				},
																				"nativeSrc": "3389:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3389:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3413:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3413:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3368:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3368:20:7"
																		},
																		"nativeSrc": "3368:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3368:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3358:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3358:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3109:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3145:9:7",
														"nodeType": "YulTypedName",
														"src": "3145:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3156:7:7",
														"nodeType": "YulTypedName",
														"src": "3156:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3168:6:7",
														"nodeType": "YulTypedName",
														"src": "3168:6:7",
														"type": ""
													}
												],
												"src": "3109:329:7"
											},
											{
												"body": {
													"nativeSrc": "3509:53:7",
													"nodeType": "YulBlock",
													"src": "3509:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3526:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3526:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3549:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3549:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3531:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3531:17:7"
																		},
																		"nativeSrc": "3531:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3531:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3519:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3519:6:7"
																},
																"nativeSrc": "3519:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3519:37:7"
															},
															"nativeSrc": "3519:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3519:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3444:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3497:5:7",
														"nodeType": "YulTypedName",
														"src": "3497:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3504:3:7",
														"nodeType": "YulTypedName",
														"src": "3504:3:7",
														"type": ""
													}
												],
												"src": "3444:118:7"
											},
											{
												"body": {
													"nativeSrc": "3666:124:7",
													"nodeType": "YulBlock",
													"src": "3666:124:7",
													"statements": [
														{
															"nativeSrc": "3676:26:7",
															"nodeType": "YulAssignment",
															"src": "3676:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3688:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3688:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3699:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3699:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3684:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3684:3:7"
																},
																"nativeSrc": "3684:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3684:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3676:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3676:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3756:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3756:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3769:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3769:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3780:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3780:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3765:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3765:3:7"
																		},
																		"nativeSrc": "3765:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3712:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3712:43:7"
																},
																"nativeSrc": "3712:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3712:71:7"
															},
															"nativeSrc": "3712:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3712:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3568:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3638:9:7",
														"nodeType": "YulTypedName",
														"src": "3638:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3650:6:7",
														"nodeType": "YulTypedName",
														"src": "3650:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3661:4:7",
														"nodeType": "YulTypedName",
														"src": "3661:4:7",
														"type": ""
													}
												],
												"src": "3568:222:7"
											},
											{
												"body": {
													"nativeSrc": "3828:28:7",
													"nodeType": "YulBlock",
													"src": "3828:28:7",
													"statements": [
														{
															"nativeSrc": "3838:12:7",
															"nodeType": "YulAssignment",
															"src": "3838:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3845:5:7",
																"nodeType": "YulIdentifier",
																"src": "3845:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3838:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3838:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3796:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3814:5:7",
														"nodeType": "YulTypedName",
														"src": "3814:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3824:3:7",
														"nodeType": "YulTypedName",
														"src": "3824:3:7",
														"type": ""
													}
												],
												"src": "3796:60:7"
											},
											{
												"body": {
													"nativeSrc": "3922:82:7",
													"nodeType": "YulBlock",
													"src": "3922:82:7",
													"statements": [
														{
															"nativeSrc": "3932:66:7",
															"nodeType": "YulAssignment",
															"src": "3932:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3990:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3990:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3972:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3972:17:7"
																				},
																				"nativeSrc": "3972:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3972:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3963:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "3963:8:7"
																		},
																		"nativeSrc": "3963:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3963:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3945:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3945:17:7"
																},
																"nativeSrc": "3945:53:7",
																"nodeType": "YulFunctionCall",
																"src": "3945:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3932:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3932:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3862:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3902:5:7",
														"nodeType": "YulTypedName",
														"src": "3902:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3912:9:7",
														"nodeType": "YulTypedName",
														"src": "3912:9:7",
														"type": ""
													}
												],
												"src": "3862:142:7"
											},
											{
												"body": {
													"nativeSrc": "4070:66:7",
													"nodeType": "YulBlock",
													"src": "4070:66:7",
													"statements": [
														{
															"nativeSrc": "4080:50:7",
															"nodeType": "YulAssignment",
															"src": "4080:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4124:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4124:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "4093:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "4093:30:7"
																},
																"nativeSrc": "4093:37:7",
																"nodeType": "YulFunctionCall",
																"src": "4093:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4080:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4080:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4010:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4050:5:7",
														"nodeType": "YulTypedName",
														"src": "4050:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4060:9:7",
														"nodeType": "YulTypedName",
														"src": "4060:9:7",
														"type": ""
													}
												],
												"src": "4010:126:7"
											},
											{
												"body": {
													"nativeSrc": "4215:66:7",
													"nodeType": "YulBlock",
													"src": "4215:66:7",
													"statements": [
														{
															"nativeSrc": "4225:50:7",
															"nodeType": "YulAssignment",
															"src": "4225:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4269:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4269:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4238:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "4238:30:7"
																},
																"nativeSrc": "4238:37:7",
																"nodeType": "YulFunctionCall",
																"src": "4238:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4225:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4225:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ERC20_$651_to_t_address",
												"nativeSrc": "4142:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4195:5:7",
														"nodeType": "YulTypedName",
														"src": "4195:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4205:9:7",
														"nodeType": "YulTypedName",
														"src": "4205:9:7",
														"type": ""
													}
												],
												"src": "4142:139:7"
											},
											{
												"body": {
													"nativeSrc": "4365:79:7",
													"nodeType": "YulBlock",
													"src": "4365:79:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4382:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4382:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4431:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4431:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ERC20_$651_to_t_address",
																			"nativeSrc": "4387:43:7",
																			"nodeType": "YulIdentifier",
																			"src": "4387:43:7"
																		},
																		"nativeSrc": "4387:50:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4387:50:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4375:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4375:6:7"
																},
																"nativeSrc": "4375:63:7",
																"nodeType": "YulFunctionCall",
																"src": "4375:63:7"
															},
															"nativeSrc": "4375:63:7",
															"nodeType": "YulExpressionStatement",
															"src": "4375:63:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack",
												"nativeSrc": "4287:157:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4353:5:7",
														"nodeType": "YulTypedName",
														"src": "4353:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4360:3:7",
														"nodeType": "YulTypedName",
														"src": "4360:3:7",
														"type": ""
													}
												],
												"src": "4287:157:7"
											},
											{
												"body": {
													"nativeSrc": "4561:137:7",
													"nodeType": "YulBlock",
													"src": "4561:137:7",
													"statements": [
														{
															"nativeSrc": "4571:26:7",
															"nodeType": "YulAssignment",
															"src": "4571:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4583:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4583:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4594:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4594:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4579:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4579:3:7"
																},
																"nativeSrc": "4579:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4579:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4571:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4571:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4664:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4664:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4677:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4677:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4688:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4688:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4673:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4673:3:7"
																		},
																		"nativeSrc": "4673:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4673:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack",
																	"nativeSrc": "4607:56:7",
																	"nodeType": "YulIdentifier",
																	"src": "4607:56:7"
																},
																"nativeSrc": "4607:84:7",
																"nodeType": "YulFunctionCall",
																"src": "4607:84:7"
															},
															"nativeSrc": "4607:84:7",
															"nodeType": "YulExpressionStatement",
															"src": "4607:84:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed",
												"nativeSrc": "4450:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4533:9:7",
														"nodeType": "YulTypedName",
														"src": "4533:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4545:6:7",
														"nodeType": "YulTypedName",
														"src": "4545:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4556:4:7",
														"nodeType": "YulTypedName",
														"src": "4556:4:7",
														"type": ""
													}
												],
												"src": "4450:248:7"
											},
											{
												"body": {
													"nativeSrc": "4763:50:7",
													"nodeType": "YulBlock",
													"src": "4763:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4780:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4780:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4800:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4800:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "4785:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "4785:14:7"
																		},
																		"nativeSrc": "4785:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4785:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4773:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4773:6:7"
																},
																"nativeSrc": "4773:34:7",
																"nodeType": "YulFunctionCall",
																"src": "4773:34:7"
															},
															"nativeSrc": "4773:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "4773:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "4704:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4751:5:7",
														"nodeType": "YulTypedName",
														"src": "4751:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4758:3:7",
														"nodeType": "YulTypedName",
														"src": "4758:3:7",
														"type": ""
													}
												],
												"src": "4704:109:7"
											},
											{
												"body": {
													"nativeSrc": "5101:691:7",
													"nodeType": "YulBlock",
													"src": "5101:691:7",
													"statements": [
														{
															"nativeSrc": "5111:27:7",
															"nodeType": "YulAssignment",
															"src": "5111:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5123:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5123:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5134:3:7",
																		"nodeType": "YulLiteral",
																		"src": "5134:3:7",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5119:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5119:3:7"
																},
																"nativeSrc": "5119:19:7",
																"nodeType": "YulFunctionCall",
																"src": "5119:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5111:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5111:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5192:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5192:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5205:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5205:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5216:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5216:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5201:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5201:3:7"
																		},
																		"nativeSrc": "5201:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5201:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5148:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5148:43:7"
																},
																"nativeSrc": "5148:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5148:71:7"
															},
															"nativeSrc": "5148:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5148:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5273:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5273:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5286:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5286:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5297:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5297:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5282:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5282:3:7"
																		},
																		"nativeSrc": "5282:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5282:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5229:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5229:43:7"
																},
																"nativeSrc": "5229:72:7",
																"nodeType": "YulFunctionCall",
																"src": "5229:72:7"
															},
															"nativeSrc": "5229:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "5229:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5355:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5355:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5368:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5368:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5379:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5379:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5364:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5364:3:7"
																		},
																		"nativeSrc": "5364:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5364:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5311:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5311:43:7"
																},
																"nativeSrc": "5311:72:7",
																"nodeType": "YulFunctionCall",
																"src": "5311:72:7"
															},
															"nativeSrc": "5311:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "5311:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "5437:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5437:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5450:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5450:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5461:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5461:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5446:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5446:3:7"
																		},
																		"nativeSrc": "5446:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5446:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5393:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5393:43:7"
																},
																"nativeSrc": "5393:72:7",
																"nodeType": "YulFunctionCall",
																"src": "5393:72:7"
															},
															"nativeSrc": "5393:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "5393:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "5519:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5519:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5532:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5532:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5543:3:7",
																				"nodeType": "YulLiteral",
																				"src": "5543:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5528:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5528:3:7"
																		},
																		"nativeSrc": "5528:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5528:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5475:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5475:43:7"
																},
																"nativeSrc": "5475:73:7",
																"nodeType": "YulFunctionCall",
																"src": "5475:73:7"
															},
															"nativeSrc": "5475:73:7",
															"nodeType": "YulExpressionStatement",
															"src": "5475:73:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "5596:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5596:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5609:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5609:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5620:3:7",
																				"nodeType": "YulLiteral",
																				"src": "5620:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5605:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5605:3:7"
																		},
																		"nativeSrc": "5605:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5605:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "5558:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "5558:37:7"
																},
																"nativeSrc": "5558:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5558:67:7"
															},
															"nativeSrc": "5558:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5558:67:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "5679:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5679:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5692:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5692:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5703:3:7",
																				"nodeType": "YulLiteral",
																				"src": "5703:3:7",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5688:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5688:3:7"
																		},
																		"nativeSrc": "5688:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5688:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5635:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5635:43:7"
																},
																"nativeSrc": "5635:73:7",
																"nodeType": "YulFunctionCall",
																"src": "5635:73:7"
															},
															"nativeSrc": "5635:73:7",
															"nodeType": "YulExpressionStatement",
															"src": "5635:73:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value7",
																		"nativeSrc": "5756:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5756:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5769:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5769:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5780:3:7",
																				"nodeType": "YulLiteral",
																				"src": "5780:3:7",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5765:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5765:3:7"
																		},
																		"nativeSrc": "5765:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5765:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "5718:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "5718:37:7"
																},
																"nativeSrc": "5718:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5718:67:7"
															},
															"nativeSrc": "5718:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5718:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "4819:973:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5017:9:7",
														"nodeType": "YulTypedName",
														"src": "5017:9:7",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "5029:6:7",
														"nodeType": "YulTypedName",
														"src": "5029:6:7",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "5037:6:7",
														"nodeType": "YulTypedName",
														"src": "5037:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "5045:6:7",
														"nodeType": "YulTypedName",
														"src": "5045:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "5053:6:7",
														"nodeType": "YulTypedName",
														"src": "5053:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5061:6:7",
														"nodeType": "YulTypedName",
														"src": "5061:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5069:6:7",
														"nodeType": "YulTypedName",
														"src": "5069:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5077:6:7",
														"nodeType": "YulTypedName",
														"src": "5077:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5085:6:7",
														"nodeType": "YulTypedName",
														"src": "5085:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5096:4:7",
														"nodeType": "YulTypedName",
														"src": "5096:4:7",
														"type": ""
													}
												],
												"src": "4819:973:7"
											},
											{
												"body": {
													"nativeSrc": "5894:73:7",
													"nodeType": "YulBlock",
													"src": "5894:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5911:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5911:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5916:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5916:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5904:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5904:6:7"
																},
																"nativeSrc": "5904:19:7",
																"nodeType": "YulFunctionCall",
																"src": "5904:19:7"
															},
															"nativeSrc": "5904:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "5904:19:7"
														},
														{
															"nativeSrc": "5932:29:7",
															"nodeType": "YulAssignment",
															"src": "5932:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5951:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5951:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5956:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5956:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5947:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5947:3:7"
																},
																"nativeSrc": "5947:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5947:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5932:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "5932:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5798:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5866:3:7",
														"nodeType": "YulTypedName",
														"src": "5866:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5871:6:7",
														"nodeType": "YulTypedName",
														"src": "5871:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5882:11:7",
														"nodeType": "YulTypedName",
														"src": "5882:11:7",
														"type": ""
													}
												],
												"src": "5798:169:7"
											},
											{
												"body": {
													"nativeSrc": "6079:57:7",
													"nodeType": "YulBlock",
													"src": "6079:57:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6101:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6101:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6097:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6097:3:7"
																		},
																		"nativeSrc": "6097:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6097:14:7"
																	},
																	{
																		"hexValue": "4e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "6113:15:7",
																		"nodeType": "YulLiteral",
																		"src": "6113:15:7",
																		"type": "",
																		"value": "Not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6090:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6090:6:7"
																},
																"nativeSrc": "6090:39:7",
																"nodeType": "YulFunctionCall",
																"src": "6090:39:7"
															},
															"nativeSrc": "6090:39:7",
															"nodeType": "YulExpressionStatement",
															"src": "6090:39:7"
														}
													]
												},
												"name": "store_literal_in_memory_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
												"nativeSrc": "5973:163:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6071:6:7",
														"nodeType": "YulTypedName",
														"src": "6071:6:7",
														"type": ""
													}
												],
												"src": "5973:163:7"
											},
											{
												"body": {
													"nativeSrc": "6288:220:7",
													"nodeType": "YulBlock",
													"src": "6288:220:7",
													"statements": [
														{
															"nativeSrc": "6298:74:7",
															"nodeType": "YulAssignment",
															"src": "6298:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6364:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6364:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6369:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6369:2:7",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6305:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "6305:58:7"
																},
																"nativeSrc": "6305:67:7",
																"nodeType": "YulFunctionCall",
																"src": "6305:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6298:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6298:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6470:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6470:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																	"nativeSrc": "6381:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "6381:88:7"
																},
																"nativeSrc": "6381:93:7",
																"nodeType": "YulFunctionCall",
																"src": "6381:93:7"
															},
															"nativeSrc": "6381:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "6381:93:7"
														},
														{
															"nativeSrc": "6483:19:7",
															"nodeType": "YulAssignment",
															"src": "6483:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6494:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6494:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6499:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6499:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6490:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6490:3:7"
																},
																"nativeSrc": "6490:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6490:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6483:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6483:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6142:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6276:3:7",
														"nodeType": "YulTypedName",
														"src": "6276:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6284:3:7",
														"nodeType": "YulTypedName",
														"src": "6284:3:7",
														"type": ""
													}
												],
												"src": "6142:366:7"
											},
											{
												"body": {
													"nativeSrc": "6685:248:7",
													"nodeType": "YulBlock",
													"src": "6685:248:7",
													"statements": [
														{
															"nativeSrc": "6695:26:7",
															"nodeType": "YulAssignment",
															"src": "6695:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6707:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6707:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6718:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6718:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6703:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6703:3:7"
																},
																"nativeSrc": "6703:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6703:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6695:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6695:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6742:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6742:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6753:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6753:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6738:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6738:3:7"
																		},
																		"nativeSrc": "6738:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6738:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6761:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6761:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6767:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6767:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6757:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6757:3:7"
																		},
																		"nativeSrc": "6757:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6757:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6731:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6731:6:7"
																},
																"nativeSrc": "6731:47:7",
																"nodeType": "YulFunctionCall",
																"src": "6731:47:7"
															},
															"nativeSrc": "6731:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "6731:47:7"
														},
														{
															"nativeSrc": "6787:139:7",
															"nodeType": "YulAssignment",
															"src": "6787:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6921:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6921:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6795:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "6795:124:7"
																},
																"nativeSrc": "6795:131:7",
																"nodeType": "YulFunctionCall",
																"src": "6795:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6787:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6787:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6514:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6665:9:7",
														"nodeType": "YulTypedName",
														"src": "6665:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6680:4:7",
														"nodeType": "YulTypedName",
														"src": "6680:4:7",
														"type": ""
													}
												],
												"src": "6514:419:7"
											},
											{
												"body": {
													"nativeSrc": "7045:141:7",
													"nodeType": "YulBlock",
													"src": "7045:141:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7067:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7067:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7075:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7075:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7063:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7063:3:7"
																		},
																		"nativeSrc": "7063:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7063:14:7"
																	},
																	{
																		"hexValue": "56657374696e67207363686564756c6520616c72656164792065786973747320",
																		"kind": "string",
																		"nativeSrc": "7079:34:7",
																		"nodeType": "YulLiteral",
																		"src": "7079:34:7",
																		"type": "",
																		"value": "Vesting schedule already exists "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7056:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7056:6:7"
																},
																"nativeSrc": "7056:58:7",
																"nodeType": "YulFunctionCall",
																"src": "7056:58:7"
															},
															"nativeSrc": "7056:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "7056:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7135:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7135:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7143:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7143:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7131:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7131:3:7"
																		},
																		"nativeSrc": "7131:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7131:15:7"
																	},
																	{
																		"hexValue": "5b696e2063726561746556657374696e675363686564756c6528295d",
																		"kind": "string",
																		"nativeSrc": "7148:30:7",
																		"nodeType": "YulLiteral",
																		"src": "7148:30:7",
																		"type": "",
																		"value": "[in createVestingSchedule()]"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7124:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7124:6:7"
																},
																"nativeSrc": "7124:55:7",
																"nodeType": "YulFunctionCall",
																"src": "7124:55:7"
															},
															"nativeSrc": "7124:55:7",
															"nodeType": "YulExpressionStatement",
															"src": "7124:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_bcc14aed11ccf054314d063261af3f30afd8d4635113ff9c4571c5a5464632f5",
												"nativeSrc": "6939:247:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7037:6:7",
														"nodeType": "YulTypedName",
														"src": "7037:6:7",
														"type": ""
													}
												],
												"src": "6939:247:7"
											},
											{
												"body": {
													"nativeSrc": "7338:220:7",
													"nodeType": "YulBlock",
													"src": "7338:220:7",
													"statements": [
														{
															"nativeSrc": "7348:74:7",
															"nodeType": "YulAssignment",
															"src": "7348:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7414:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7414:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7419:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7419:2:7",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7355:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "7355:58:7"
																},
																"nativeSrc": "7355:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7355:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7348:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7348:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7520:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7520:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bcc14aed11ccf054314d063261af3f30afd8d4635113ff9c4571c5a5464632f5",
																	"nativeSrc": "7431:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "7431:88:7"
																},
																"nativeSrc": "7431:93:7",
																"nodeType": "YulFunctionCall",
																"src": "7431:93:7"
															},
															"nativeSrc": "7431:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "7431:93:7"
														},
														{
															"nativeSrc": "7533:19:7",
															"nodeType": "YulAssignment",
															"src": "7533:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7544:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7544:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7549:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7549:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7540:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7540:3:7"
																},
																"nativeSrc": "7540:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7540:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7533:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7533:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bcc14aed11ccf054314d063261af3f30afd8d4635113ff9c4571c5a5464632f5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7192:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7326:3:7",
														"nodeType": "YulTypedName",
														"src": "7326:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7334:3:7",
														"nodeType": "YulTypedName",
														"src": "7334:3:7",
														"type": ""
													}
												],
												"src": "7192:366:7"
											},
											{
												"body": {
													"nativeSrc": "7735:248:7",
													"nodeType": "YulBlock",
													"src": "7735:248:7",
													"statements": [
														{
															"nativeSrc": "7745:26:7",
															"nodeType": "YulAssignment",
															"src": "7745:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7757:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7757:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7768:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7768:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7753:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7753:3:7"
																},
																"nativeSrc": "7753:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7753:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7745:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7745:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7792:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7792:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7803:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7803:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7788:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7788:3:7"
																		},
																		"nativeSrc": "7788:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7788:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7811:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7811:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7817:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7817:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7807:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7807:3:7"
																		},
																		"nativeSrc": "7807:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7807:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7781:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7781:6:7"
																},
																"nativeSrc": "7781:47:7",
																"nodeType": "YulFunctionCall",
																"src": "7781:47:7"
															},
															"nativeSrc": "7781:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "7781:47:7"
														},
														{
															"nativeSrc": "7837:139:7",
															"nodeType": "YulAssignment",
															"src": "7837:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7971:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7971:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bcc14aed11ccf054314d063261af3f30afd8d4635113ff9c4571c5a5464632f5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7845:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "7845:124:7"
																},
																"nativeSrc": "7845:131:7",
																"nodeType": "YulFunctionCall",
																"src": "7845:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7837:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7837:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bcc14aed11ccf054314d063261af3f30afd8d4635113ff9c4571c5a5464632f5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7564:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7715:9:7",
														"nodeType": "YulTypedName",
														"src": "7715:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7730:4:7",
														"nodeType": "YulTypedName",
														"src": "7730:4:7",
														"type": ""
													}
												],
												"src": "7564:419:7"
											},
											{
												"body": {
													"nativeSrc": "8095:136:7",
													"nodeType": "YulBlock",
													"src": "8095:136:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8117:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8117:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8125:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8125:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8113:3:7"
																		},
																		"nativeSrc": "8113:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8113:14:7"
																	},
																	{
																		"hexValue": "496e76616c69642076657374696e6720706172616d6574657273205b696e2063",
																		"kind": "string",
																		"nativeSrc": "8129:34:7",
																		"nodeType": "YulLiteral",
																		"src": "8129:34:7",
																		"type": "",
																		"value": "Invalid vesting parameters [in c"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8106:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8106:6:7"
																},
																"nativeSrc": "8106:58:7",
																"nodeType": "YulFunctionCall",
																"src": "8106:58:7"
															},
															"nativeSrc": "8106:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "8106:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8185:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8185:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8193:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8193:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8181:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8181:3:7"
																		},
																		"nativeSrc": "8181:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8181:15:7"
																	},
																	{
																		"hexValue": "726561746556657374696e675363686564756c6528295d",
																		"kind": "string",
																		"nativeSrc": "8198:25:7",
																		"nodeType": "YulLiteral",
																		"src": "8198:25:7",
																		"type": "",
																		"value": "reateVestingSchedule()]"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8174:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8174:6:7"
																},
																"nativeSrc": "8174:50:7",
																"nodeType": "YulFunctionCall",
																"src": "8174:50:7"
															},
															"nativeSrc": "8174:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "8174:50:7"
														}
													]
												},
												"name": "store_literal_in_memory_7396082dc6294442634f0de48aba0d988835ea8d6b07c9d734ff6fb82b9c2247",
												"nativeSrc": "7989:242:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8087:6:7",
														"nodeType": "YulTypedName",
														"src": "8087:6:7",
														"type": ""
													}
												],
												"src": "7989:242:7"
											},
											{
												"body": {
													"nativeSrc": "8383:220:7",
													"nodeType": "YulBlock",
													"src": "8383:220:7",
													"statements": [
														{
															"nativeSrc": "8393:74:7",
															"nodeType": "YulAssignment",
															"src": "8393:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8459:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8459:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8464:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8464:2:7",
																		"type": "",
																		"value": "55"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8400:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "8400:58:7"
																},
																"nativeSrc": "8400:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8400:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8393:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8393:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8565:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8565:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7396082dc6294442634f0de48aba0d988835ea8d6b07c9d734ff6fb82b9c2247",
																	"nativeSrc": "8476:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "8476:88:7"
																},
																"nativeSrc": "8476:93:7",
																"nodeType": "YulFunctionCall",
																"src": "8476:93:7"
															},
															"nativeSrc": "8476:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "8476:93:7"
														},
														{
															"nativeSrc": "8578:19:7",
															"nodeType": "YulAssignment",
															"src": "8578:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8589:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8589:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8594:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8594:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8585:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8585:3:7"
																},
																"nativeSrc": "8585:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8585:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8578:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8578:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7396082dc6294442634f0de48aba0d988835ea8d6b07c9d734ff6fb82b9c2247_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8237:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8371:3:7",
														"nodeType": "YulTypedName",
														"src": "8371:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8379:3:7",
														"nodeType": "YulTypedName",
														"src": "8379:3:7",
														"type": ""
													}
												],
												"src": "8237:366:7"
											},
											{
												"body": {
													"nativeSrc": "8780:248:7",
													"nodeType": "YulBlock",
													"src": "8780:248:7",
													"statements": [
														{
															"nativeSrc": "8790:26:7",
															"nodeType": "YulAssignment",
															"src": "8790:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8802:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8802:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8813:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8813:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8798:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8798:3:7"
																},
																"nativeSrc": "8798:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8798:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8790:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8790:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8837:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8837:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8848:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8848:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8833:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8833:3:7"
																		},
																		"nativeSrc": "8833:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8833:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8856:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8856:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8862:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8862:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8852:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8852:3:7"
																		},
																		"nativeSrc": "8852:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8852:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8826:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8826:6:7"
																},
																"nativeSrc": "8826:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8826:47:7"
															},
															"nativeSrc": "8826:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8826:47:7"
														},
														{
															"nativeSrc": "8882:139:7",
															"nodeType": "YulAssignment",
															"src": "8882:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9016:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9016:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7396082dc6294442634f0de48aba0d988835ea8d6b07c9d734ff6fb82b9c2247_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8890:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "8890:124:7"
																},
																"nativeSrc": "8890:131:7",
																"nodeType": "YulFunctionCall",
																"src": "8890:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8882:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8882:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7396082dc6294442634f0de48aba0d988835ea8d6b07c9d734ff6fb82b9c2247__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8609:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8760:9:7",
														"nodeType": "YulTypedName",
														"src": "8760:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8775:4:7",
														"nodeType": "YulTypedName",
														"src": "8775:4:7",
														"type": ""
													}
												],
												"src": "8609:419:7"
											},
											{
												"body": {
													"nativeSrc": "9266:531:7",
													"nodeType": "YulBlock",
													"src": "9266:531:7",
													"statements": [
														{
															"nativeSrc": "9276:27:7",
															"nodeType": "YulAssignment",
															"src": "9276:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9288:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9288:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9299:3:7",
																		"nodeType": "YulLiteral",
																		"src": "9299:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9284:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9284:3:7"
																},
																"nativeSrc": "9284:19:7",
																"nodeType": "YulFunctionCall",
																"src": "9284:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9276:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9276:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9357:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9357:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9370:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9370:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9381:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9381:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9366:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9366:3:7"
																		},
																		"nativeSrc": "9366:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9366:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9313:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9313:43:7"
																},
																"nativeSrc": "9313:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9313:71:7"
															},
															"nativeSrc": "9313:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9313:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9438:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9438:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9451:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9451:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9462:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9462:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9447:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9447:3:7"
																		},
																		"nativeSrc": "9447:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9447:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9394:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9394:43:7"
																},
																"nativeSrc": "9394:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9394:72:7"
															},
															"nativeSrc": "9394:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9394:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9520:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9520:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9533:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9533:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9544:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9544:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9529:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9529:3:7"
																		},
																		"nativeSrc": "9529:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9529:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9476:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9476:43:7"
																},
																"nativeSrc": "9476:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9476:72:7"
															},
															"nativeSrc": "9476:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9476:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "9602:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9602:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9615:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9615:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9626:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9626:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9611:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9611:3:7"
																		},
																		"nativeSrc": "9611:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9611:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9558:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9558:43:7"
																},
																"nativeSrc": "9558:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9558:72:7"
															},
															"nativeSrc": "9558:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9558:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "9684:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9684:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9697:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9697:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9708:3:7",
																				"nodeType": "YulLiteral",
																				"src": "9708:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9693:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9693:3:7"
																		},
																		"nativeSrc": "9693:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9693:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9640:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9640:43:7"
																},
																"nativeSrc": "9640:73:7",
																"nodeType": "YulFunctionCall",
																"src": "9640:73:7"
															},
															"nativeSrc": "9640:73:7",
															"nodeType": "YulExpressionStatement",
															"src": "9640:73:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "9761:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9761:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9774:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9774:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9785:3:7",
																				"nodeType": "YulLiteral",
																				"src": "9785:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9770:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9770:3:7"
																		},
																		"nativeSrc": "9770:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9770:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "9723:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "9723:37:7"
																},
																"nativeSrc": "9723:67:7",
																"nodeType": "YulFunctionCall",
																"src": "9723:67:7"
															},
															"nativeSrc": "9723:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "9723:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "9034:763:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9198:9:7",
														"nodeType": "YulTypedName",
														"src": "9198:9:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "9210:6:7",
														"nodeType": "YulTypedName",
														"src": "9210:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9218:6:7",
														"nodeType": "YulTypedName",
														"src": "9218:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9226:6:7",
														"nodeType": "YulTypedName",
														"src": "9226:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9234:6:7",
														"nodeType": "YulTypedName",
														"src": "9234:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9242:6:7",
														"nodeType": "YulTypedName",
														"src": "9242:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9250:6:7",
														"nodeType": "YulTypedName",
														"src": "9250:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9261:4:7",
														"nodeType": "YulTypedName",
														"src": "9261:4:7",
														"type": ""
													}
												],
												"src": "9034:763:7"
											},
											{
												"body": {
													"nativeSrc": "9909:127:7",
													"nodeType": "YulBlock",
													"src": "9909:127:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9931:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9931:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9939:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9939:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9927:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9927:3:7"
																		},
																		"nativeSrc": "9927:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9927:14:7"
																	},
																	{
																		"hexValue": "4e6f2076657374696e67207363686564756c6520666f756e64205b696e207265",
																		"kind": "string",
																		"nativeSrc": "9943:34:7",
																		"nodeType": "YulLiteral",
																		"src": "9943:34:7",
																		"type": "",
																		"value": "No vesting schedule found [in re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9920:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9920:6:7"
																},
																"nativeSrc": "9920:58:7",
																"nodeType": "YulFunctionCall",
																"src": "9920:58:7"
															},
															"nativeSrc": "9920:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "9920:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9999:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9999:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10007:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10007:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9995:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9995:3:7"
																		},
																		"nativeSrc": "9995:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9995:15:7"
																	},
																	{
																		"hexValue": "6c65617365546f6b656e7328295d",
																		"kind": "string",
																		"nativeSrc": "10012:16:7",
																		"nodeType": "YulLiteral",
																		"src": "10012:16:7",
																		"type": "",
																		"value": "leaseTokens()]"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9988:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9988:6:7"
																},
																"nativeSrc": "9988:41:7",
																"nodeType": "YulFunctionCall",
																"src": "9988:41:7"
															},
															"nativeSrc": "9988:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "9988:41:7"
														}
													]
												},
												"name": "store_literal_in_memory_355818d83c8a345156e9c9a4dba90156101aa53cf6253a0e31b268cb4f5ed37c",
												"nativeSrc": "9803:233:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9901:6:7",
														"nodeType": "YulTypedName",
														"src": "9901:6:7",
														"type": ""
													}
												],
												"src": "9803:233:7"
											},
											{
												"body": {
													"nativeSrc": "10188:220:7",
													"nodeType": "YulBlock",
													"src": "10188:220:7",
													"statements": [
														{
															"nativeSrc": "10198:74:7",
															"nodeType": "YulAssignment",
															"src": "10198:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10264:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10264:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10269:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10269:2:7",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10205:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "10205:58:7"
																},
																"nativeSrc": "10205:67:7",
																"nodeType": "YulFunctionCall",
																"src": "10205:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10198:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10198:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10370:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10370:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_355818d83c8a345156e9c9a4dba90156101aa53cf6253a0e31b268cb4f5ed37c",
																	"nativeSrc": "10281:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "10281:88:7"
																},
																"nativeSrc": "10281:93:7",
																"nodeType": "YulFunctionCall",
																"src": "10281:93:7"
															},
															"nativeSrc": "10281:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "10281:93:7"
														},
														{
															"nativeSrc": "10383:19:7",
															"nodeType": "YulAssignment",
															"src": "10383:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10394:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10394:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10399:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10399:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10390:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10390:3:7"
																},
																"nativeSrc": "10390:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10390:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10383:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10383:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_355818d83c8a345156e9c9a4dba90156101aa53cf6253a0e31b268cb4f5ed37c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10042:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10176:3:7",
														"nodeType": "YulTypedName",
														"src": "10176:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10184:3:7",
														"nodeType": "YulTypedName",
														"src": "10184:3:7",
														"type": ""
													}
												],
												"src": "10042:366:7"
											},
											{
												"body": {
													"nativeSrc": "10585:248:7",
													"nodeType": "YulBlock",
													"src": "10585:248:7",
													"statements": [
														{
															"nativeSrc": "10595:26:7",
															"nodeType": "YulAssignment",
															"src": "10595:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10607:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10607:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10618:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10618:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10603:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10603:3:7"
																},
																"nativeSrc": "10603:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10603:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10595:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10595:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10642:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10642:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10653:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10653:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10638:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10638:3:7"
																		},
																		"nativeSrc": "10638:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10638:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10661:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10661:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10667:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10667:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10657:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10657:3:7"
																		},
																		"nativeSrc": "10657:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10657:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10631:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10631:6:7"
																},
																"nativeSrc": "10631:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10631:47:7"
															},
															"nativeSrc": "10631:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10631:47:7"
														},
														{
															"nativeSrc": "10687:139:7",
															"nodeType": "YulAssignment",
															"src": "10687:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10821:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10821:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_355818d83c8a345156e9c9a4dba90156101aa53cf6253a0e31b268cb4f5ed37c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10695:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "10695:124:7"
																},
																"nativeSrc": "10695:131:7",
																"nodeType": "YulFunctionCall",
																"src": "10695:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10687:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10687:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_355818d83c8a345156e9c9a4dba90156101aa53cf6253a0e31b268cb4f5ed37c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10414:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10565:9:7",
														"nodeType": "YulTypedName",
														"src": "10565:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10580:4:7",
														"nodeType": "YulTypedName",
														"src": "10580:4:7",
														"type": ""
													}
												],
												"src": "10414:419:7"
											},
											{
												"body": {
													"nativeSrc": "10945:126:7",
													"nodeType": "YulBlock",
													"src": "10945:126:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10967:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10967:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10975:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10975:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10963:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10963:3:7"
																		},
																		"nativeSrc": "10963:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10963:14:7"
																	},
																	{
																		"hexValue": "56657374696e67207363686564756c65207265766f6b6564205b696e2072656c",
																		"kind": "string",
																		"nativeSrc": "10979:34:7",
																		"nodeType": "YulLiteral",
																		"src": "10979:34:7",
																		"type": "",
																		"value": "Vesting schedule revoked [in rel"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10956:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10956:6:7"
																},
																"nativeSrc": "10956:58:7",
																"nodeType": "YulFunctionCall",
																"src": "10956:58:7"
															},
															"nativeSrc": "10956:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "10956:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11035:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11035:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11043:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11043:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11031:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11031:3:7"
																		},
																		"nativeSrc": "11031:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11031:15:7"
																	},
																	{
																		"hexValue": "65617365546f6b656e7328295d",
																		"kind": "string",
																		"nativeSrc": "11048:15:7",
																		"nodeType": "YulLiteral",
																		"src": "11048:15:7",
																		"type": "",
																		"value": "easeTokens()]"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11024:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11024:6:7"
																},
																"nativeSrc": "11024:40:7",
																"nodeType": "YulFunctionCall",
																"src": "11024:40:7"
															},
															"nativeSrc": "11024:40:7",
															"nodeType": "YulExpressionStatement",
															"src": "11024:40:7"
														}
													]
												},
												"name": "store_literal_in_memory_43d731a8d2f0ada02799d5871bba7214c5049cea0dc0905a332cbb13de3b790e",
												"nativeSrc": "10839:232:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10937:6:7",
														"nodeType": "YulTypedName",
														"src": "10937:6:7",
														"type": ""
													}
												],
												"src": "10839:232:7"
											},
											{
												"body": {
													"nativeSrc": "11223:220:7",
													"nodeType": "YulBlock",
													"src": "11223:220:7",
													"statements": [
														{
															"nativeSrc": "11233:74:7",
															"nodeType": "YulAssignment",
															"src": "11233:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11299:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11299:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11304:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11304:2:7",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11240:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "11240:58:7"
																},
																"nativeSrc": "11240:67:7",
																"nodeType": "YulFunctionCall",
																"src": "11240:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11233:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11405:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11405:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_43d731a8d2f0ada02799d5871bba7214c5049cea0dc0905a332cbb13de3b790e",
																	"nativeSrc": "11316:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "11316:88:7"
																},
																"nativeSrc": "11316:93:7",
																"nodeType": "YulFunctionCall",
																"src": "11316:93:7"
															},
															"nativeSrc": "11316:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "11316:93:7"
														},
														{
															"nativeSrc": "11418:19:7",
															"nodeType": "YulAssignment",
															"src": "11418:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11429:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11429:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11434:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11434:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11425:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11425:3:7"
																},
																"nativeSrc": "11425:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11425:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11418:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11418:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_43d731a8d2f0ada02799d5871bba7214c5049cea0dc0905a332cbb13de3b790e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11077:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11211:3:7",
														"nodeType": "YulTypedName",
														"src": "11211:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11219:3:7",
														"nodeType": "YulTypedName",
														"src": "11219:3:7",
														"type": ""
													}
												],
												"src": "11077:366:7"
											},
											{
												"body": {
													"nativeSrc": "11620:248:7",
													"nodeType": "YulBlock",
													"src": "11620:248:7",
													"statements": [
														{
															"nativeSrc": "11630:26:7",
															"nodeType": "YulAssignment",
															"src": "11630:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11642:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11642:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11653:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11653:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11638:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11638:3:7"
																},
																"nativeSrc": "11638:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11638:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11630:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11630:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11677:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11677:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11688:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11688:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11673:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11673:3:7"
																		},
																		"nativeSrc": "11673:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11673:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11696:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11696:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11702:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11702:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11692:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11692:3:7"
																		},
																		"nativeSrc": "11692:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11692:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11666:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11666:6:7"
																},
																"nativeSrc": "11666:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11666:47:7"
															},
															"nativeSrc": "11666:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11666:47:7"
														},
														{
															"nativeSrc": "11722:139:7",
															"nodeType": "YulAssignment",
															"src": "11722:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11856:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11856:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_43d731a8d2f0ada02799d5871bba7214c5049cea0dc0905a332cbb13de3b790e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11730:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "11730:124:7"
																},
																"nativeSrc": "11730:131:7",
																"nodeType": "YulFunctionCall",
																"src": "11730:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11722:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11722:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_43d731a8d2f0ada02799d5871bba7214c5049cea0dc0905a332cbb13de3b790e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11449:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11600:9:7",
														"nodeType": "YulTypedName",
														"src": "11600:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11615:4:7",
														"nodeType": "YulTypedName",
														"src": "11615:4:7",
														"type": ""
													}
												],
												"src": "11449:419:7"
											},
											{
												"body": {
													"nativeSrc": "11980:132:7",
													"nodeType": "YulBlock",
													"src": "11980:132:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12002:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12002:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12010:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12010:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11998:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11998:3:7"
																		},
																		"nativeSrc": "11998:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11998:14:7"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e73206172652063757272656e746c7920766573746564205b",
																		"kind": "string",
																		"nativeSrc": "12014:34:7",
																		"nodeType": "YulLiteral",
																		"src": "12014:34:7",
																		"type": "",
																		"value": "No tokens are currently vested ["
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11991:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11991:6:7"
																},
																"nativeSrc": "11991:58:7",
																"nodeType": "YulFunctionCall",
																"src": "11991:58:7"
															},
															"nativeSrc": "11991:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "11991:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12070:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12070:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12078:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12078:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12066:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12066:3:7"
																		},
																		"nativeSrc": "12066:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12066:15:7"
																	},
																	{
																		"hexValue": "696e2072656c65617365546f6b656e7328295d",
																		"kind": "string",
																		"nativeSrc": "12083:21:7",
																		"nodeType": "YulLiteral",
																		"src": "12083:21:7",
																		"type": "",
																		"value": "in releaseTokens()]"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12059:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12059:6:7"
																},
																"nativeSrc": "12059:46:7",
																"nodeType": "YulFunctionCall",
																"src": "12059:46:7"
															},
															"nativeSrc": "12059:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "12059:46:7"
														}
													]
												},
												"name": "store_literal_in_memory_3b68c92569791860f282db1798d2130f4868b4523af1c81978c30cade9171f05",
												"nativeSrc": "11874:238:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11972:6:7",
														"nodeType": "YulTypedName",
														"src": "11972:6:7",
														"type": ""
													}
												],
												"src": "11874:238:7"
											},
											{
												"body": {
													"nativeSrc": "12264:220:7",
													"nodeType": "YulBlock",
													"src": "12264:220:7",
													"statements": [
														{
															"nativeSrc": "12274:74:7",
															"nodeType": "YulAssignment",
															"src": "12274:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12340:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12340:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12345:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12345:2:7",
																		"type": "",
																		"value": "51"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12281:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12281:58:7"
																},
																"nativeSrc": "12281:67:7",
																"nodeType": "YulFunctionCall",
																"src": "12281:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12274:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12274:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12446:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12446:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b68c92569791860f282db1798d2130f4868b4523af1c81978c30cade9171f05",
																	"nativeSrc": "12357:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "12357:88:7"
																},
																"nativeSrc": "12357:93:7",
																"nodeType": "YulFunctionCall",
																"src": "12357:93:7"
															},
															"nativeSrc": "12357:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "12357:93:7"
														},
														{
															"nativeSrc": "12459:19:7",
															"nodeType": "YulAssignment",
															"src": "12459:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12470:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12470:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12475:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12475:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12466:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12466:3:7"
																},
																"nativeSrc": "12466:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12466:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12459:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12459:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b68c92569791860f282db1798d2130f4868b4523af1c81978c30cade9171f05_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12118:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12252:3:7",
														"nodeType": "YulTypedName",
														"src": "12252:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12260:3:7",
														"nodeType": "YulTypedName",
														"src": "12260:3:7",
														"type": ""
													}
												],
												"src": "12118:366:7"
											},
											{
												"body": {
													"nativeSrc": "12661:248:7",
													"nodeType": "YulBlock",
													"src": "12661:248:7",
													"statements": [
														{
															"nativeSrc": "12671:26:7",
															"nodeType": "YulAssignment",
															"src": "12671:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12683:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12683:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12694:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12694:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12679:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12679:3:7"
																},
																"nativeSrc": "12679:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12679:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12671:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12671:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12718:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12718:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12729:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12729:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12714:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12714:3:7"
																		},
																		"nativeSrc": "12714:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12714:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12737:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12737:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12743:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12743:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12733:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12733:3:7"
																		},
																		"nativeSrc": "12733:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12733:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12707:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12707:6:7"
																},
																"nativeSrc": "12707:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12707:47:7"
															},
															"nativeSrc": "12707:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12707:47:7"
														},
														{
															"nativeSrc": "12763:139:7",
															"nodeType": "YulAssignment",
															"src": "12763:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12897:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12897:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b68c92569791860f282db1798d2130f4868b4523af1c81978c30cade9171f05_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12771:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12771:124:7"
																},
																"nativeSrc": "12771:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12771:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12763:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12763:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b68c92569791860f282db1798d2130f4868b4523af1c81978c30cade9171f05__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12490:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12641:9:7",
														"nodeType": "YulTypedName",
														"src": "12641:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12656:4:7",
														"nodeType": "YulTypedName",
														"src": "12656:4:7",
														"type": ""
													}
												],
												"src": "12490:419:7"
											},
											{
												"body": {
													"nativeSrc": "13041:206:7",
													"nodeType": "YulBlock",
													"src": "13041:206:7",
													"statements": [
														{
															"nativeSrc": "13051:26:7",
															"nodeType": "YulAssignment",
															"src": "13051:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13063:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13063:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13074:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13059:3:7"
																},
																"nativeSrc": "13059:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13059:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13051:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13051:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13131:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13131:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13144:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13144:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13155:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13155:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13140:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13140:3:7"
																		},
																		"nativeSrc": "13140:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13140:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13087:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13087:43:7"
																},
																"nativeSrc": "13087:71:7",
																"nodeType": "YulFunctionCall",
																"src": "13087:71:7"
															},
															"nativeSrc": "13087:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "13087:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13212:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13212:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13225:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13225:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13236:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13236:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13221:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13221:3:7"
																		},
																		"nativeSrc": "13221:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13221:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13168:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13168:43:7"
																},
																"nativeSrc": "13168:72:7",
																"nodeType": "YulFunctionCall",
																"src": "13168:72:7"
															},
															"nativeSrc": "13168:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "13168:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12915:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13005:9:7",
														"nodeType": "YulTypedName",
														"src": "13005:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13017:6:7",
														"nodeType": "YulTypedName",
														"src": "13017:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13025:6:7",
														"nodeType": "YulTypedName",
														"src": "13025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13036:4:7",
														"nodeType": "YulTypedName",
														"src": "13036:4:7",
														"type": ""
													}
												],
												"src": "12915:332:7"
											},
											{
												"body": {
													"nativeSrc": "13313:77:7",
													"nodeType": "YulBlock",
													"src": "13313:77:7",
													"statements": [
														{
															"nativeSrc": "13323:22:7",
															"nodeType": "YulAssignment",
															"src": "13323:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13338:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13338:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13332:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "13332:5:7"
																},
																"nativeSrc": "13332:13:7",
																"nodeType": "YulFunctionCall",
																"src": "13332:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13323:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "13323:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13378:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "13378:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "13354:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "13354:23:7"
																},
																"nativeSrc": "13354:30:7",
																"nodeType": "YulFunctionCall",
																"src": "13354:30:7"
															},
															"nativeSrc": "13354:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "13354:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "13253:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13291:6:7",
														"nodeType": "YulTypedName",
														"src": "13291:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13299:3:7",
														"nodeType": "YulTypedName",
														"src": "13299:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13307:5:7",
														"nodeType": "YulTypedName",
														"src": "13307:5:7",
														"type": ""
													}
												],
												"src": "13253:137:7"
											},
											{
												"body": {
													"nativeSrc": "13470:271:7",
													"nodeType": "YulBlock",
													"src": "13470:271:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "13516:83:7",
																"nodeType": "YulBlock",
																"src": "13516:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13518:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "13518:77:7"
																			},
																			"nativeSrc": "13518:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13518:79:7"
																		},
																		"nativeSrc": "13518:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13518:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13491:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "13491:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13500:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13500:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13487:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13487:3:7"
																		},
																		"nativeSrc": "13487:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13487:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13512:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13512:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13483:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13483:3:7"
																},
																"nativeSrc": "13483:32:7",
																"nodeType": "YulFunctionCall",
																"src": "13483:32:7"
															},
															"nativeSrc": "13480:119:7",
															"nodeType": "YulIf",
															"src": "13480:119:7"
														},
														{
															"nativeSrc": "13609:125:7",
															"nodeType": "YulBlock",
															"src": "13609:125:7",
															"statements": [
																{
																	"nativeSrc": "13624:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13624:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13638:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13638:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13628:6:7",
																			"nodeType": "YulTypedName",
																			"src": "13628:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13653:71:7",
																	"nodeType": "YulAssignment",
																	"src": "13653:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13696:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "13696:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13707:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "13707:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13692:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "13692:3:7"
																				},
																				"nativeSrc": "13692:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "13692:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13716:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "13716:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "13663:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "13663:28:7"
																		},
																		"nativeSrc": "13663:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13663:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13653:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "13653:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "13396:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13440:9:7",
														"nodeType": "YulTypedName",
														"src": "13440:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13451:7:7",
														"nodeType": "YulTypedName",
														"src": "13451:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13463:6:7",
														"nodeType": "YulTypedName",
														"src": "13463:6:7",
														"type": ""
													}
												],
												"src": "13396:345:7"
											},
											{
												"body": {
													"nativeSrc": "13853:140:7",
													"nodeType": "YulBlock",
													"src": "13853:140:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13875:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13875:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13883:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13883:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13871:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13871:3:7"
																		},
																		"nativeSrc": "13871:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13871:14:7"
																	},
																	{
																		"hexValue": "56657374696e67207363686564756c65206e6f74207265766f6361626c65205b",
																		"kind": "string",
																		"nativeSrc": "13887:34:7",
																		"nodeType": "YulLiteral",
																		"src": "13887:34:7",
																		"type": "",
																		"value": "Vesting schedule not revocable ["
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13864:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13864:6:7"
																},
																"nativeSrc": "13864:58:7",
																"nodeType": "YulFunctionCall",
																"src": "13864:58:7"
															},
															"nativeSrc": "13864:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "13864:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13943:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13943:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13951:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13951:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13939:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13939:3:7"
																		},
																		"nativeSrc": "13939:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13939:15:7"
																	},
																	{
																		"hexValue": "696e207265766f6b6556657374696e675363686564756c6528295d",
																		"kind": "string",
																		"nativeSrc": "13956:29:7",
																		"nodeType": "YulLiteral",
																		"src": "13956:29:7",
																		"type": "",
																		"value": "in revokeVestingSchedule()]"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13932:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13932:6:7"
																},
																"nativeSrc": "13932:54:7",
																"nodeType": "YulFunctionCall",
																"src": "13932:54:7"
															},
															"nativeSrc": "13932:54:7",
															"nodeType": "YulExpressionStatement",
															"src": "13932:54:7"
														}
													]
												},
												"name": "store_literal_in_memory_7441065767ad0fe3bd08de9982a7ce4be699ef924daf185e4fd316647cedf834",
												"nativeSrc": "13747:246:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13845:6:7",
														"nodeType": "YulTypedName",
														"src": "13845:6:7",
														"type": ""
													}
												],
												"src": "13747:246:7"
											},
											{
												"body": {
													"nativeSrc": "14145:220:7",
													"nodeType": "YulBlock",
													"src": "14145:220:7",
													"statements": [
														{
															"nativeSrc": "14155:74:7",
															"nodeType": "YulAssignment",
															"src": "14155:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14221:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14221:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14226:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14226:2:7",
																		"type": "",
																		"value": "59"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14162:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "14162:58:7"
																},
																"nativeSrc": "14162:67:7",
																"nodeType": "YulFunctionCall",
																"src": "14162:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14155:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14155:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14327:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14327:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7441065767ad0fe3bd08de9982a7ce4be699ef924daf185e4fd316647cedf834",
																	"nativeSrc": "14238:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "14238:88:7"
																},
																"nativeSrc": "14238:93:7",
																"nodeType": "YulFunctionCall",
																"src": "14238:93:7"
															},
															"nativeSrc": "14238:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "14238:93:7"
														},
														{
															"nativeSrc": "14340:19:7",
															"nodeType": "YulAssignment",
															"src": "14340:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14351:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14351:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14356:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14356:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14347:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14347:3:7"
																},
																"nativeSrc": "14347:12:7",
																"nodeType": "YulFunctionCall",
																"src": "14347:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14340:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14340:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7441065767ad0fe3bd08de9982a7ce4be699ef924daf185e4fd316647cedf834_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13999:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14133:3:7",
														"nodeType": "YulTypedName",
														"src": "14133:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14141:3:7",
														"nodeType": "YulTypedName",
														"src": "14141:3:7",
														"type": ""
													}
												],
												"src": "13999:366:7"
											},
											{
												"body": {
													"nativeSrc": "14542:248:7",
													"nodeType": "YulBlock",
													"src": "14542:248:7",
													"statements": [
														{
															"nativeSrc": "14552:26:7",
															"nodeType": "YulAssignment",
															"src": "14552:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14564:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14564:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14575:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14575:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14560:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14560:3:7"
																},
																"nativeSrc": "14560:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14560:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14552:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14552:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14599:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14599:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14610:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14610:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14595:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14595:3:7"
																		},
																		"nativeSrc": "14595:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14595:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14618:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14618:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14624:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14624:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14614:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14614:3:7"
																		},
																		"nativeSrc": "14614:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14614:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14588:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14588:6:7"
																},
																"nativeSrc": "14588:47:7",
																"nodeType": "YulFunctionCall",
																"src": "14588:47:7"
															},
															"nativeSrc": "14588:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "14588:47:7"
														},
														{
															"nativeSrc": "14644:139:7",
															"nodeType": "YulAssignment",
															"src": "14644:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14778:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14778:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7441065767ad0fe3bd08de9982a7ce4be699ef924daf185e4fd316647cedf834_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14652:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "14652:124:7"
																},
																"nativeSrc": "14652:131:7",
																"nodeType": "YulFunctionCall",
																"src": "14652:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14644:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14644:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7441065767ad0fe3bd08de9982a7ce4be699ef924daf185e4fd316647cedf834__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14371:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14522:9:7",
														"nodeType": "YulTypedName",
														"src": "14522:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14537:4:7",
														"nodeType": "YulTypedName",
														"src": "14537:4:7",
														"type": ""
													}
												],
												"src": "14371:419:7"
											},
											{
												"body": {
													"nativeSrc": "14902:142:7",
													"nodeType": "YulBlock",
													"src": "14902:142:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14924:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14924:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14932:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14932:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14920:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14920:3:7"
																		},
																		"nativeSrc": "14920:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14920:14:7"
																	},
																	{
																		"hexValue": "56657374696e67207363686564756c6520616c7265616479207265766f6b6564",
																		"kind": "string",
																		"nativeSrc": "14936:34:7",
																		"nodeType": "YulLiteral",
																		"src": "14936:34:7",
																		"type": "",
																		"value": "Vesting schedule already revoked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14913:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14913:6:7"
																},
																"nativeSrc": "14913:58:7",
																"nodeType": "YulFunctionCall",
																"src": "14913:58:7"
															},
															"nativeSrc": "14913:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "14913:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14992:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14992:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15000:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15000:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14988:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14988:3:7"
																		},
																		"nativeSrc": "14988:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14988:15:7"
																	},
																	{
																		"hexValue": "205b696e207265766f6b6556657374696e675363686564756c6528295d",
																		"kind": "string",
																		"nativeSrc": "15005:31:7",
																		"nodeType": "YulLiteral",
																		"src": "15005:31:7",
																		"type": "",
																		"value": " [in revokeVestingSchedule()]"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14981:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14981:6:7"
																},
																"nativeSrc": "14981:56:7",
																"nodeType": "YulFunctionCall",
																"src": "14981:56:7"
															},
															"nativeSrc": "14981:56:7",
															"nodeType": "YulExpressionStatement",
															"src": "14981:56:7"
														}
													]
												},
												"name": "store_literal_in_memory_8068c343730405aa069278bd5a46c221f347524c68990a8a4739ee122c129a07",
												"nativeSrc": "14796:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14894:6:7",
														"nodeType": "YulTypedName",
														"src": "14894:6:7",
														"type": ""
													}
												],
												"src": "14796:248:7"
											},
											{
												"body": {
													"nativeSrc": "15196:220:7",
													"nodeType": "YulBlock",
													"src": "15196:220:7",
													"statements": [
														{
															"nativeSrc": "15206:74:7",
															"nodeType": "YulAssignment",
															"src": "15206:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15272:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15272:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15277:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15277:2:7",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15213:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "15213:58:7"
																},
																"nativeSrc": "15213:67:7",
																"nodeType": "YulFunctionCall",
																"src": "15213:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15206:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15206:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15378:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15378:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8068c343730405aa069278bd5a46c221f347524c68990a8a4739ee122c129a07",
																	"nativeSrc": "15289:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "15289:88:7"
																},
																"nativeSrc": "15289:93:7",
																"nodeType": "YulFunctionCall",
																"src": "15289:93:7"
															},
															"nativeSrc": "15289:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "15289:93:7"
														},
														{
															"nativeSrc": "15391:19:7",
															"nodeType": "YulAssignment",
															"src": "15391:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15402:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15402:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15407:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15407:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15398:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15398:3:7"
																},
																"nativeSrc": "15398:12:7",
																"nodeType": "YulFunctionCall",
																"src": "15398:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15391:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15391:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8068c343730405aa069278bd5a46c221f347524c68990a8a4739ee122c129a07_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15050:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15184:3:7",
														"nodeType": "YulTypedName",
														"src": "15184:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15192:3:7",
														"nodeType": "YulTypedName",
														"src": "15192:3:7",
														"type": ""
													}
												],
												"src": "15050:366:7"
											},
											{
												"body": {
													"nativeSrc": "15593:248:7",
													"nodeType": "YulBlock",
													"src": "15593:248:7",
													"statements": [
														{
															"nativeSrc": "15603:26:7",
															"nodeType": "YulAssignment",
															"src": "15603:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15615:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15615:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15626:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15626:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15611:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15611:3:7"
																},
																"nativeSrc": "15611:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15611:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15603:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15603:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15650:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15650:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15661:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15661:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15646:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15646:3:7"
																		},
																		"nativeSrc": "15646:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15646:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15669:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "15669:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15675:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15675:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15665:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15665:3:7"
																		},
																		"nativeSrc": "15665:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15665:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15639:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15639:6:7"
																},
																"nativeSrc": "15639:47:7",
																"nodeType": "YulFunctionCall",
																"src": "15639:47:7"
															},
															"nativeSrc": "15639:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "15639:47:7"
														},
														{
															"nativeSrc": "15695:139:7",
															"nodeType": "YulAssignment",
															"src": "15695:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15829:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15829:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8068c343730405aa069278bd5a46c221f347524c68990a8a4739ee122c129a07_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15703:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "15703:124:7"
																},
																"nativeSrc": "15703:131:7",
																"nodeType": "YulFunctionCall",
																"src": "15703:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15695:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15695:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8068c343730405aa069278bd5a46c221f347524c68990a8a4739ee122c129a07__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15422:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15573:9:7",
														"nodeType": "YulTypedName",
														"src": "15573:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15588:4:7",
														"nodeType": "YulTypedName",
														"src": "15588:4:7",
														"type": ""
													}
												],
												"src": "15422:419:7"
											},
											{
												"body": {
													"nativeSrc": "15910:80:7",
													"nodeType": "YulBlock",
													"src": "15910:80:7",
													"statements": [
														{
															"nativeSrc": "15920:22:7",
															"nodeType": "YulAssignment",
															"src": "15920:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15935:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15935:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15929:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "15929:5:7"
																},
																"nativeSrc": "15929:13:7",
																"nodeType": "YulFunctionCall",
																"src": "15929:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15920:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "15920:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15978:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "15978:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "15951:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "15951:26:7"
																},
																"nativeSrc": "15951:33:7",
																"nodeType": "YulFunctionCall",
																"src": "15951:33:7"
															},
															"nativeSrc": "15951:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "15951:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "15847:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15888:6:7",
														"nodeType": "YulTypedName",
														"src": "15888:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15896:3:7",
														"nodeType": "YulTypedName",
														"src": "15896:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15904:5:7",
														"nodeType": "YulTypedName",
														"src": "15904:5:7",
														"type": ""
													}
												],
												"src": "15847:143:7"
											},
											{
												"body": {
													"nativeSrc": "16073:274:7",
													"nodeType": "YulBlock",
													"src": "16073:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "16119:83:7",
																"nodeType": "YulBlock",
																"src": "16119:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16121:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "16121:77:7"
																			},
																			"nativeSrc": "16121:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16121:79:7"
																		},
																		"nativeSrc": "16121:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "16121:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16094:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "16094:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16103:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16103:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16090:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16090:3:7"
																		},
																		"nativeSrc": "16090:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16090:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16115:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16115:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16086:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16086:3:7"
																},
																"nativeSrc": "16086:32:7",
																"nodeType": "YulFunctionCall",
																"src": "16086:32:7"
															},
															"nativeSrc": "16083:119:7",
															"nodeType": "YulIf",
															"src": "16083:119:7"
														},
														{
															"nativeSrc": "16212:128:7",
															"nodeType": "YulBlock",
															"src": "16212:128:7",
															"statements": [
																{
																	"nativeSrc": "16227:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16227:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16241:1:7",
																		"nodeType": "YulLiteral",
																		"src": "16241:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16231:6:7",
																			"nodeType": "YulTypedName",
																			"src": "16231:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16256:74:7",
																	"nodeType": "YulAssignment",
																	"src": "16256:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16302:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "16302:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16313:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "16313:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16298:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "16298:3:7"
																				},
																				"nativeSrc": "16298:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "16298:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16322:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "16322:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "16266:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "16266:31:7"
																		},
																		"nativeSrc": "16266:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16266:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16256:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "16256:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "15996:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16043:9:7",
														"nodeType": "YulTypedName",
														"src": "16043:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16054:7:7",
														"nodeType": "YulTypedName",
														"src": "16054:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16066:6:7",
														"nodeType": "YulTypedName",
														"src": "16066:6:7",
														"type": ""
													}
												],
												"src": "15996:351:7"
											},
											{
												"body": {
													"nativeSrc": "16381:152:7",
													"nodeType": "YulBlock",
													"src": "16381:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16398:1:7",
																		"nodeType": "YulLiteral",
																		"src": "16398:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16401:77:7",
																		"nodeType": "YulLiteral",
																		"src": "16401:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16391:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16391:6:7"
																},
																"nativeSrc": "16391:88:7",
																"nodeType": "YulFunctionCall",
																"src": "16391:88:7"
															},
															"nativeSrc": "16391:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "16391:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16495:1:7",
																		"nodeType": "YulLiteral",
																		"src": "16495:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16498:4:7",
																		"nodeType": "YulLiteral",
																		"src": "16498:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16488:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16488:6:7"
																},
																"nativeSrc": "16488:15:7",
																"nodeType": "YulFunctionCall",
																"src": "16488:15:7"
															},
															"nativeSrc": "16488:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "16488:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16519:1:7",
																		"nodeType": "YulLiteral",
																		"src": "16519:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16522:4:7",
																		"nodeType": "YulLiteral",
																		"src": "16522:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16512:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16512:6:7"
																},
																"nativeSrc": "16512:15:7",
																"nodeType": "YulFunctionCall",
																"src": "16512:15:7"
															},
															"nativeSrc": "16512:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "16512:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "16353:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "16353:180:7"
											},
											{
												"body": {
													"nativeSrc": "16583:147:7",
													"nodeType": "YulBlock",
													"src": "16583:147:7",
													"statements": [
														{
															"nativeSrc": "16593:25:7",
															"nodeType": "YulAssignment",
															"src": "16593:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16616:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16616:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16598:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "16598:17:7"
																},
																"nativeSrc": "16598:20:7",
																"nodeType": "YulFunctionCall",
																"src": "16598:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16593:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "16593:1:7"
																}
															]
														},
														{
															"nativeSrc": "16627:25:7",
															"nodeType": "YulAssignment",
															"src": "16627:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16650:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16650:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16632:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "16632:17:7"
																},
																"nativeSrc": "16632:20:7",
																"nodeType": "YulFunctionCall",
																"src": "16632:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16627:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "16627:1:7"
																}
															]
														},
														{
															"nativeSrc": "16661:16:7",
															"nodeType": "YulAssignment",
															"src": "16661:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16672:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16672:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16675:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16675:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16668:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16668:3:7"
																},
																"nativeSrc": "16668:9:7",
																"nodeType": "YulFunctionCall",
																"src": "16668:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "16661:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16661:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16701:22:7",
																"nodeType": "YulBlock",
																"src": "16701:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16703:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "16703:16:7"
																			},
																			"nativeSrc": "16703:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16703:18:7"
																		},
																		"nativeSrc": "16703:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "16703:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16693:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16693:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "16696:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16696:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16690:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "16690:2:7"
																},
																"nativeSrc": "16690:10:7",
																"nodeType": "YulFunctionCall",
																"src": "16690:10:7"
															},
															"nativeSrc": "16687:36:7",
															"nodeType": "YulIf",
															"src": "16687:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "16539:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16570:1:7",
														"nodeType": "YulTypedName",
														"src": "16570:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16573:1:7",
														"nodeType": "YulTypedName",
														"src": "16573:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "16579:3:7",
														"nodeType": "YulTypedName",
														"src": "16579:3:7",
														"type": ""
													}
												],
												"src": "16539:191:7"
											},
											{
												"body": {
													"nativeSrc": "16781:149:7",
													"nodeType": "YulBlock",
													"src": "16781:149:7",
													"statements": [
														{
															"nativeSrc": "16791:25:7",
															"nodeType": "YulAssignment",
															"src": "16791:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16814:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16814:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16796:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "16796:17:7"
																},
																"nativeSrc": "16796:20:7",
																"nodeType": "YulFunctionCall",
																"src": "16796:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16791:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "16791:1:7"
																}
															]
														},
														{
															"nativeSrc": "16825:25:7",
															"nodeType": "YulAssignment",
															"src": "16825:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16848:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16848:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16830:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "16830:17:7"
																},
																"nativeSrc": "16830:20:7",
																"nodeType": "YulFunctionCall",
																"src": "16830:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16825:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "16825:1:7"
																}
															]
														},
														{
															"nativeSrc": "16859:17:7",
															"nodeType": "YulAssignment",
															"src": "16859:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16871:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16871:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16874:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16874:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "16867:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16867:3:7"
																},
																"nativeSrc": "16867:9:7",
																"nodeType": "YulFunctionCall",
																"src": "16867:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "16859:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16859:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16901:22:7",
																"nodeType": "YulBlock",
																"src": "16901:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16903:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "16903:16:7"
																			},
																			"nativeSrc": "16903:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16903:18:7"
																		},
																		"nativeSrc": "16903:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "16903:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "16892:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16892:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "16898:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16898:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16889:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "16889:2:7"
																},
																"nativeSrc": "16889:11:7",
																"nodeType": "YulFunctionCall",
																"src": "16889:11:7"
															},
															"nativeSrc": "16886:37:7",
															"nodeType": "YulIf",
															"src": "16886:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "16736:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16767:1:7",
														"nodeType": "YulTypedName",
														"src": "16767:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16770:1:7",
														"nodeType": "YulTypedName",
														"src": "16770:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "16776:4:7",
														"nodeType": "YulTypedName",
														"src": "16776:4:7",
														"type": ""
													}
												],
												"src": "16736:194:7"
											},
											{
												"body": {
													"nativeSrc": "16964:152:7",
													"nodeType": "YulBlock",
													"src": "16964:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16981:1:7",
																		"nodeType": "YulLiteral",
																		"src": "16981:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16984:77:7",
																		"nodeType": "YulLiteral",
																		"src": "16984:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16974:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16974:6:7"
																},
																"nativeSrc": "16974:88:7",
																"nodeType": "YulFunctionCall",
																"src": "16974:88:7"
															},
															"nativeSrc": "16974:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "16974:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17078:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17078:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17081:4:7",
																		"nodeType": "YulLiteral",
																		"src": "17081:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17071:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17071:6:7"
																},
																"nativeSrc": "17071:15:7",
																"nodeType": "YulFunctionCall",
																"src": "17071:15:7"
															},
															"nativeSrc": "17071:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "17071:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17102:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17102:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17105:4:7",
																		"nodeType": "YulLiteral",
																		"src": "17105:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17095:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17095:6:7"
																},
																"nativeSrc": "17095:15:7",
																"nodeType": "YulFunctionCall",
																"src": "17095:15:7"
															},
															"nativeSrc": "17095:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "17095:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "16936:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "16936:180:7"
											},
											{
												"body": {
													"nativeSrc": "17164:143:7",
													"nodeType": "YulBlock",
													"src": "17164:143:7",
													"statements": [
														{
															"nativeSrc": "17174:25:7",
															"nodeType": "YulAssignment",
															"src": "17174:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17197:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17197:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17179:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "17179:17:7"
																},
																"nativeSrc": "17179:20:7",
																"nodeType": "YulFunctionCall",
																"src": "17179:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17174:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "17174:1:7"
																}
															]
														},
														{
															"nativeSrc": "17208:25:7",
															"nodeType": "YulAssignment",
															"src": "17208:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17231:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17231:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17213:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "17213:17:7"
																},
																"nativeSrc": "17213:20:7",
																"nodeType": "YulFunctionCall",
																"src": "17213:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17208:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "17208:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17255:22:7",
																"nodeType": "YulBlock",
																"src": "17255:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "17257:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "17257:16:7"
																			},
																			"nativeSrc": "17257:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "17257:18:7"
																		},
																		"nativeSrc": "17257:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "17257:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17252:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17252:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17245:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17245:6:7"
																},
																"nativeSrc": "17245:9:7",
																"nodeType": "YulFunctionCall",
																"src": "17245:9:7"
															},
															"nativeSrc": "17242:35:7",
															"nodeType": "YulIf",
															"src": "17242:35:7"
														},
														{
															"nativeSrc": "17287:14:7",
															"nodeType": "YulAssignment",
															"src": "17287:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17296:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17296:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17299:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17299:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "17292:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17292:3:7"
																},
																"nativeSrc": "17292:9:7",
																"nodeType": "YulFunctionCall",
																"src": "17292:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "17287:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "17287:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "17122:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17153:1:7",
														"nodeType": "YulTypedName",
														"src": "17153:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17156:1:7",
														"nodeType": "YulTypedName",
														"src": "17156:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "17162:1:7",
														"nodeType": "YulTypedName",
														"src": "17162:1:7",
														"type": ""
													}
												],
												"src": "17122:185:7"
											},
											{
												"body": {
													"nativeSrc": "17361:362:7",
													"nodeType": "YulBlock",
													"src": "17361:362:7",
													"statements": [
														{
															"nativeSrc": "17371:25:7",
															"nodeType": "YulAssignment",
															"src": "17371:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17394:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17394:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17376:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "17376:17:7"
																},
																"nativeSrc": "17376:20:7",
																"nodeType": "YulFunctionCall",
																"src": "17376:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17371:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "17371:1:7"
																}
															]
														},
														{
															"nativeSrc": "17405:25:7",
															"nodeType": "YulAssignment",
															"src": "17405:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17428:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17428:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17410:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "17410:17:7"
																},
																"nativeSrc": "17410:20:7",
																"nodeType": "YulFunctionCall",
																"src": "17410:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17405:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "17405:1:7"
																}
															]
														},
														{
															"nativeSrc": "17439:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17439:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17462:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17462:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17465:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17465:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "17458:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17458:3:7"
																},
																"nativeSrc": "17458:9:7",
																"nodeType": "YulFunctionCall",
																"src": "17458:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "17443:11:7",
																	"nodeType": "YulTypedName",
																	"src": "17443:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17476:41:7",
															"nodeType": "YulAssignment",
															"src": "17476:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "17505:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "17505:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17487:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "17487:17:7"
																},
																"nativeSrc": "17487:30:7",
																"nodeType": "YulFunctionCall",
																"src": "17487:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "17476:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "17476:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17694:22:7",
																"nodeType": "YulBlock",
																"src": "17694:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17696:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "17696:16:7"
																			},
																			"nativeSrc": "17696:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "17696:18:7"
																		},
																		"nativeSrc": "17696:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "17696:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "17627:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "17627:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "17620:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "17620:6:7"
																				},
																				"nativeSrc": "17620:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "17620:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "17650:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "17650:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "17657:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "17657:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "17666:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "17666:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "17653:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "17653:3:7"
																						},
																						"nativeSrc": "17653:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "17653:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "17647:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "17647:2:7"
																				},
																				"nativeSrc": "17647:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "17647:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "17600:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "17600:2:7"
																		},
																		"nativeSrc": "17600:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17600:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17580:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17580:6:7"
																},
																"nativeSrc": "17580:113:7",
																"nodeType": "YulFunctionCall",
																"src": "17580:113:7"
															},
															"nativeSrc": "17577:139:7",
															"nodeType": "YulIf",
															"src": "17577:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "17313:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17344:1:7",
														"nodeType": "YulTypedName",
														"src": "17344:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17347:1:7",
														"nodeType": "YulTypedName",
														"src": "17347:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "17353:7:7",
														"nodeType": "YulTypedName",
														"src": "17353:7:7",
														"type": ""
													}
												],
												"src": "17313:410:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$651_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$651_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256_t_bool__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value7,  add(headStart, 224))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bcc14aed11ccf054314d063261af3f30afd8d4635113ff9c4571c5a5464632f5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Vesting schedule already exists \")\n\n        mstore(add(memPtr, 32), \"[in createVestingSchedule()]\")\n\n    }\n\n    function abi_encode_t_stringliteral_bcc14aed11ccf054314d063261af3f30afd8d4635113ff9c4571c5a5464632f5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 60)\n        store_literal_in_memory_bcc14aed11ccf054314d063261af3f30afd8d4635113ff9c4571c5a5464632f5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bcc14aed11ccf054314d063261af3f30afd8d4635113ff9c4571c5a5464632f5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bcc14aed11ccf054314d063261af3f30afd8d4635113ff9c4571c5a5464632f5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7396082dc6294442634f0de48aba0d988835ea8d6b07c9d734ff6fb82b9c2247(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid vesting parameters [in c\")\n\n        mstore(add(memPtr, 32), \"reateVestingSchedule()]\")\n\n    }\n\n    function abi_encode_t_stringliteral_7396082dc6294442634f0de48aba0d988835ea8d6b07c9d734ff6fb82b9c2247_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 55)\n        store_literal_in_memory_7396082dc6294442634f0de48aba0d988835ea8d6b07c9d734ff6fb82b9c2247(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7396082dc6294442634f0de48aba0d988835ea8d6b07c9d734ff6fb82b9c2247__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7396082dc6294442634f0de48aba0d988835ea8d6b07c9d734ff6fb82b9c2247_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function store_literal_in_memory_355818d83c8a345156e9c9a4dba90156101aa53cf6253a0e31b268cb4f5ed37c(memPtr) {\n\n        mstore(add(memPtr, 0), \"No vesting schedule found [in re\")\n\n        mstore(add(memPtr, 32), \"leaseTokens()]\")\n\n    }\n\n    function abi_encode_t_stringliteral_355818d83c8a345156e9c9a4dba90156101aa53cf6253a0e31b268cb4f5ed37c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_355818d83c8a345156e9c9a4dba90156101aa53cf6253a0e31b268cb4f5ed37c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_355818d83c8a345156e9c9a4dba90156101aa53cf6253a0e31b268cb4f5ed37c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_355818d83c8a345156e9c9a4dba90156101aa53cf6253a0e31b268cb4f5ed37c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_43d731a8d2f0ada02799d5871bba7214c5049cea0dc0905a332cbb13de3b790e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Vesting schedule revoked [in rel\")\n\n        mstore(add(memPtr, 32), \"easeTokens()]\")\n\n    }\n\n    function abi_encode_t_stringliteral_43d731a8d2f0ada02799d5871bba7214c5049cea0dc0905a332cbb13de3b790e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_43d731a8d2f0ada02799d5871bba7214c5049cea0dc0905a332cbb13de3b790e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_43d731a8d2f0ada02799d5871bba7214c5049cea0dc0905a332cbb13de3b790e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_43d731a8d2f0ada02799d5871bba7214c5049cea0dc0905a332cbb13de3b790e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b68c92569791860f282db1798d2130f4868b4523af1c81978c30cade9171f05(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens are currently vested [\")\n\n        mstore(add(memPtr, 32), \"in releaseTokens()]\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b68c92569791860f282db1798d2130f4868b4523af1c81978c30cade9171f05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 51)\n        store_literal_in_memory_3b68c92569791860f282db1798d2130f4868b4523af1c81978c30cade9171f05(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b68c92569791860f282db1798d2130f4868b4523af1c81978c30cade9171f05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b68c92569791860f282db1798d2130f4868b4523af1c81978c30cade9171f05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_7441065767ad0fe3bd08de9982a7ce4be699ef924daf185e4fd316647cedf834(memPtr) {\n\n        mstore(add(memPtr, 0), \"Vesting schedule not revocable [\")\n\n        mstore(add(memPtr, 32), \"in revokeVestingSchedule()]\")\n\n    }\n\n    function abi_encode_t_stringliteral_7441065767ad0fe3bd08de9982a7ce4be699ef924daf185e4fd316647cedf834_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 59)\n        store_literal_in_memory_7441065767ad0fe3bd08de9982a7ce4be699ef924daf185e4fd316647cedf834(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7441065767ad0fe3bd08de9982a7ce4be699ef924daf185e4fd316647cedf834__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7441065767ad0fe3bd08de9982a7ce4be699ef924daf185e4fd316647cedf834_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8068c343730405aa069278bd5a46c221f347524c68990a8a4739ee122c129a07(memPtr) {\n\n        mstore(add(memPtr, 0), \"Vesting schedule already revoked\")\n\n        mstore(add(memPtr, 32), \" [in revokeVestingSchedule()]\")\n\n    }\n\n    function abi_encode_t_stringliteral_8068c343730405aa069278bd5a46c221f347524c68990a8a4739ee122c129a07_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_8068c343730405aa069278bd5a46c221f347524c68990a8a4739ee122c129a07(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8068c343730405aa069278bd5a46c221f347524c68990a8a4739ee122c129a07__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8068c343730405aa069278bd5a46c221f347524c68990a8a4739ee122c129a07_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610091575f3560e01c8063a96f866811610064578063a96f86681461011d578063f035a27214610127578063f8b2cb4f14610143578063fc0c546a14610173578063fdb20ccb1461019157610091565b80634495e82714610095578063557ed1ba146100b15780637dc8a8aa146100cf5780638da5cb5b146100ff575b5f80fd5b6100af60048036038101906100aa9190610cf7565b6101c8565b005b6100b961040c565b6040516100c69190610da3565b60405180910390f35b6100e960048036038101906100e49190610dbc565b610413565b6040516100f69190610da3565b60405180910390f35b6101076105b1565b6040516101149190610df6565b60405180910390f35b6101256105d4565b005b610141600480360381019061013c9190610dbc565b610806565b005b61015d60048036038101906101589190610dbc565b610abb565b60405161016a9190610da3565b60405180910390f35b61017b610b5c565b6040516101889190610e6a565b60405180910390f35b6101ab60048036038101906101a69190610dbc565b610b81565b6040516101bf989796959493929190610e92565b60405180910390f35b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610255576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024c90610f68565b60405180910390fd5b5f60025f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0154146102d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cd90610ff6565b60405180910390fd5b5f821180156102e457505f84115b610323576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031a90611084565b60405180910390fd5b5f60025f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905086815f018190555085816001018190555084816002018190555083816003018190555082816004018190555081816005015f6101000a81548160ff0219169083151502179055508773ffffffffffffffffffffffffffffffffffffffff167fbea02a5045606a667ff06eb235c005b4f95b55a10c174b5aae63ba6be2ae98088888888888886040516103fa969594939291906110a2565b60405180910390a25050505050505050565b5f42905090565b5f8060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20604051806101000160405290815f820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015f9054906101000a900460ff1615151515815260200160068201548152602001600782015f9054906101000a900460ff16151515158152505090506104e98160200151825f0151610bdd90919063ffffffff16565b4210156104f9575f9150506105ac565b5f6105268260200151610518845f015142610bf290919063ffffffff16565b610bf290919063ffffffff16565b90505f61054483606001518460400151610c0790919063ffffffff16565b90505f61055e846060015184610c0790919063ffffffff16565b90508181106105775783608001519450505050506105ac565b5f61058f838660800151610c0790919063ffffffff16565b90506105a48282610c1c90919063ffffffff16565b955050505050505b919050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f015411610659576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065090611171565b60405180910390fd5b806007015f9054906101000a900460ff16156106aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a1906111ff565b60405180910390fd5b5f6106b433610413565b90505f81116106f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ef9061128d565b60405180910390fd5b61070f818360060154610bdd90919063ffffffff16565b826006018190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016107739291906112ab565b6020604051808303815f875af115801561078f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107b391906112e6565b503373ffffffffffffffffffffffffffffffffffffffff167fc7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df93179826040516107fa9190610da3565b60405180910390a25050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610893576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088a90610f68565b60405180910390fd5b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050806005015f9054906101000a900460ff16610923576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091a90611381565b60405180910390fd5b806007015f9054906101000a900460ff1615610974576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096b9061140f565b60405180910390fd5b6001816007015f6101000a81548160ff0219169083151502179055505f6109ac82600601548360040154610bf290919063ffffffff16565b90505f811115610a735760015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401610a319291906112ab565b6020604051808303815f875af1158015610a4d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a7191906112e6565b505b8273ffffffffffffffffffffffffffffffffffffffff167f68d870ac0aff3819234e8a1fc8f357b40d75212f2dc8594b97690fa205b3bab260405160405180910390a2505050565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401610b169190610df6565b602060405180830381865afa158015610b31573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b559190611441565b9050919050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002602052805f5260405f205f91509050805f015490806001015490806002015490806003015490806004015490806005015f9054906101000a900460ff1690806006015490806007015f9054906101000a900460ff16905088565b5f8183610bea9190611499565b905092915050565b5f8183610bff91906114cc565b905092915050565b5f8183610c14919061152c565b905092915050565b5f8183610c29919061155c565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c5e82610c35565b9050919050565b610c6e81610c54565b8114610c78575f80fd5b50565b5f81359050610c8981610c65565b92915050565b5f819050919050565b610ca181610c8f565b8114610cab575f80fd5b50565b5f81359050610cbc81610c98565b92915050565b5f8115159050919050565b610cd681610cc2565b8114610ce0575f80fd5b50565b5f81359050610cf181610ccd565b92915050565b5f805f805f805f60e0888a031215610d1257610d11610c31565b5b5f610d1f8a828b01610c7b565b9750506020610d308a828b01610cae565b9650506040610d418a828b01610cae565b9550506060610d528a828b01610cae565b9450506080610d638a828b01610cae565b93505060a0610d748a828b01610cae565b92505060c0610d858a828b01610ce3565b91505092959891949750929550565b610d9d81610c8f565b82525050565b5f602082019050610db65f830184610d94565b92915050565b5f60208284031215610dd157610dd0610c31565b5b5f610dde84828501610c7b565b91505092915050565b610df081610c54565b82525050565b5f602082019050610e095f830184610de7565b92915050565b5f819050919050565b5f610e32610e2d610e2884610c35565b610e0f565b610c35565b9050919050565b5f610e4382610e18565b9050919050565b5f610e5482610e39565b9050919050565b610e6481610e4a565b82525050565b5f602082019050610e7d5f830184610e5b565b92915050565b610e8c81610cc2565b82525050565b5f61010082019050610ea65f83018b610d94565b610eb3602083018a610d94565b610ec06040830189610d94565b610ecd6060830188610d94565b610eda6080830187610d94565b610ee760a0830186610e83565b610ef460c0830185610d94565b610f0160e0830184610e83565b9998505050505050505050565b5f82825260208201905092915050565b7f4e6f7420746865206f776e6572000000000000000000000000000000000000005f82015250565b5f610f52600d83610f0e565b9150610f5d82610f1e565b602082019050919050565b5f6020820190508181035f830152610f7f81610f46565b9050919050565b7f56657374696e67207363686564756c6520616c726561647920657869737473205f8201527f5b696e2063726561746556657374696e675363686564756c6528295d00000000602082015250565b5f610fe0603c83610f0e565b9150610feb82610f86565b604082019050919050565b5f6020820190508181035f83015261100d81610fd4565b9050919050565b7f496e76616c69642076657374696e6720706172616d6574657273205b696e20635f8201527f726561746556657374696e675363686564756c6528295d000000000000000000602082015250565b5f61106e603783610f0e565b915061107982611014565b604082019050919050565b5f6020820190508181035f83015261109b81611062565b9050919050565b5f60c0820190506110b55f830189610d94565b6110c26020830188610d94565b6110cf6040830187610d94565b6110dc6060830186610d94565b6110e96080830185610d94565b6110f660a0830184610e83565b979650505050505050565b7f4e6f2076657374696e67207363686564756c6520666f756e64205b696e2072655f8201527f6c65617365546f6b656e7328295d000000000000000000000000000000000000602082015250565b5f61115b602e83610f0e565b915061116682611101565b604082019050919050565b5f6020820190508181035f8301526111888161114f565b9050919050565b7f56657374696e67207363686564756c65207265766f6b6564205b696e2072656c5f8201527f65617365546f6b656e7328295d00000000000000000000000000000000000000602082015250565b5f6111e9602d83610f0e565b91506111f48261118f565b604082019050919050565b5f6020820190508181035f830152611216816111dd565b9050919050565b7f4e6f20746f6b656e73206172652063757272656e746c7920766573746564205b5f8201527f696e2072656c65617365546f6b656e7328295d00000000000000000000000000602082015250565b5f611277603383610f0e565b91506112828261121d565b604082019050919050565b5f6020820190508181035f8301526112a48161126b565b9050919050565b5f6040820190506112be5f830185610de7565b6112cb6020830184610d94565b9392505050565b5f815190506112e081610ccd565b92915050565b5f602082840312156112fb576112fa610c31565b5b5f611308848285016112d2565b91505092915050565b7f56657374696e67207363686564756c65206e6f74207265766f6361626c65205b5f8201527f696e207265766f6b6556657374696e675363686564756c6528295d0000000000602082015250565b5f61136b603b83610f0e565b915061137682611311565b604082019050919050565b5f6020820190508181035f8301526113988161135f565b9050919050565b7f56657374696e67207363686564756c6520616c7265616479207265766f6b65645f8201527f205b696e207265766f6b6556657374696e675363686564756c6528295d000000602082015250565b5f6113f9603d83610f0e565b91506114048261139f565b604082019050919050565b5f6020820190508181035f830152611426816113ed565b9050919050565b5f8151905061143b81610c98565b92915050565b5f6020828403121561145657611455610c31565b5b5f6114638482850161142d565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6114a382610c8f565b91506114ae83610c8f565b92508282019050808211156114c6576114c561146c565b5b92915050565b5f6114d682610c8f565b91506114e183610c8f565b92508282039050818111156114f9576114f861146c565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61153682610c8f565b915061154183610c8f565b925082611551576115506114ff565b5b828204905092915050565b5f61156682610c8f565b915061157183610c8f565b925082820261157f81610c8f565b915082820484148315176115965761159561146c565b5b509291505056fea26469706673582212206771de05b12ee3447f881fb8aaa030640111d9f3d3e02880389a366dfbc2e3c064736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA96F8668 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA96F8668 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0xF035A272 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xFDB20CCB EQ PUSH2 0x191 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x4495E827 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x557ED1BA EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x7DC8A8AA EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x1C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB9 PUSH2 0x40C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x125 PUSH2 0x5D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x158 SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST PUSH2 0xABB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x255 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24C SWAP1 PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD EQ PUSH2 0x2D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CD SWAP1 PUSH2 0xFF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x2E4 JUMPI POP PUSH0 DUP5 GT JUMPDEST PUSH2 0x323 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31A SWAP1 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP7 DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP6 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBEA02A5045606A667FF06EB235C005B4F95B55A10C174B5AAE63BA6BE2AE9808 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x3FA SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x4E9 DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH0 ADD MLOAD PUSH2 0xBDD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x4F9 JUMPI PUSH0 SWAP2 POP POP PUSH2 0x5AC JUMP JUMPDEST PUSH0 PUSH2 0x526 DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x518 DUP5 PUSH0 ADD MLOAD TIMESTAMP PUSH2 0xBF2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xBF2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x544 DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0xC07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x55E DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH2 0xC07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT PUSH2 0x577 JUMPI DUP4 PUSH1 0x80 ADD MLOAD SWAP5 POP POP POP POP POP PUSH2 0x5AC JUMP JUMPDEST PUSH0 PUSH2 0x58F DUP4 DUP7 PUSH1 0x80 ADD MLOAD PUSH2 0xC07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x5A4 DUP3 DUP3 PUSH2 0xC1C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD GT PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x650 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x6AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A1 SWAP1 PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x6B4 CALLER PUSH2 0x413 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x6F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EF SWAP1 PUSH2 0x128D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70F DUP2 DUP4 PUSH1 0x6 ADD SLOAD PUSH2 0xBDD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x773 SWAP3 SWAP2 SWAP1 PUSH2 0x12AB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x78F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7B3 SWAP2 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC7798891864187665AC6DD119286E44EC13F014527AEEB2B8EB3FD413DF93179 DUP3 PUSH1 0x40 MLOAD PUSH2 0x7FA SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x893 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88A SWAP1 PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x923 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91A SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x974 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96B SWAP1 PUSH2 0x140F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x7 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH2 0x9AC DUP3 PUSH1 0x6 ADD SLOAD DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0xBF2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xA73 JUMPI PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA31 SWAP3 SWAP2 SWAP1 PUSH2 0x12AB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA4D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA71 SWAP2 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x68D870AC0AFF3819234E8A1FC8F357B40D75212F2DC8594B97690FA205B3BAB2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB16 SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB31 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB55 SWAP2 SWAP1 PUSH2 0x1441 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP9 JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xBEA SWAP2 SWAP1 PUSH2 0x1499 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xBFF SWAP2 SWAP1 PUSH2 0x14CC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xC14 SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xC29 SWAP2 SWAP1 PUSH2 0x155C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC5E DUP3 PUSH2 0xC35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC6E DUP2 PUSH2 0xC54 JUMP JUMPDEST DUP2 EQ PUSH2 0xC78 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC89 DUP2 PUSH2 0xC65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCA1 DUP2 PUSH2 0xC8F JUMP JUMPDEST DUP2 EQ PUSH2 0xCAB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCBC DUP2 PUSH2 0xC98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD6 DUP2 PUSH2 0xCC2 JUMP JUMPDEST DUP2 EQ PUSH2 0xCE0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCF1 DUP2 PUSH2 0xCCD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xD12 JUMPI PUSH2 0xD11 PUSH2 0xC31 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD1F DUP11 DUP3 DUP12 ADD PUSH2 0xC7B JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0xD30 DUP11 DUP3 DUP12 ADD PUSH2 0xCAE JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0xD41 DUP11 DUP3 DUP12 ADD PUSH2 0xCAE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0xD52 DUP11 DUP3 DUP12 ADD PUSH2 0xCAE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0xD63 DUP11 DUP3 DUP12 ADD PUSH2 0xCAE JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0xD74 DUP11 DUP3 DUP12 ADD PUSH2 0xCAE JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0xD85 DUP11 DUP3 DUP12 ADD PUSH2 0xCE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH2 0xD9D DUP2 PUSH2 0xC8F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB6 PUSH0 DUP4 ADD DUP5 PUSH2 0xD94 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD1 JUMPI PUSH2 0xDD0 PUSH2 0xC31 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDDE DUP5 DUP3 DUP6 ADD PUSH2 0xC7B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDF0 DUP2 PUSH2 0xC54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE09 PUSH0 DUP4 ADD DUP5 PUSH2 0xDE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE32 PUSH2 0xE2D PUSH2 0xE28 DUP5 PUSH2 0xC35 JUMP JUMPDEST PUSH2 0xE0F JUMP JUMPDEST PUSH2 0xC35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE43 DUP3 PUSH2 0xE18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE54 DUP3 PUSH2 0xE39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE64 DUP2 PUSH2 0xE4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE7D PUSH0 DUP4 ADD DUP5 PUSH2 0xE5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE8C DUP2 PUSH2 0xCC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xEA6 PUSH0 DUP4 ADD DUP12 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0xEB3 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0xEC0 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0xECD PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0xEDA PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0xEE7 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0xE83 JUMP JUMPDEST PUSH2 0xEF4 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0xF01 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0xE83 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420746865206F776E657200000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF52 PUSH1 0xD DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0xF5D DUP3 PUSH2 0xF1E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF7F DUP2 PUSH2 0xF46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56657374696E67207363686564756C6520616C72656164792065786973747320 PUSH0 DUP3 ADD MSTORE PUSH32 0x5B696E2063726561746556657374696E675363686564756C6528295D00000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFE0 PUSH1 0x3C DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0xFEB DUP3 PUSH2 0xF86 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x100D DUP2 PUSH2 0xFD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642076657374696E6720706172616D6574657273205B696E2063 PUSH0 DUP3 ADD MSTORE PUSH32 0x726561746556657374696E675363686564756C6528295D000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x106E PUSH1 0x37 DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x1079 DUP3 PUSH2 0x1014 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x109B DUP2 PUSH2 0x1062 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x10B5 PUSH0 DUP4 ADD DUP10 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0x10C2 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0x10CF PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0x10DC PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0x10E9 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0x10F6 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0xE83 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F2076657374696E67207363686564756C6520666F756E64205B696E207265 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C65617365546F6B656E7328295D000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x115B PUSH1 0x2E DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x1166 DUP3 PUSH2 0x1101 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1188 DUP2 PUSH2 0x114F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56657374696E67207363686564756C65207265766F6B6564205B696E2072656C PUSH0 DUP3 ADD MSTORE PUSH32 0x65617365546F6B656E7328295D00000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11E9 PUSH1 0x2D DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x11F4 DUP3 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1216 DUP2 PUSH2 0x11DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E73206172652063757272656E746C7920766573746564205B PUSH0 DUP3 ADD MSTORE PUSH32 0x696E2072656C65617365546F6B656E7328295D00000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1277 PUSH1 0x33 DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x1282 DUP3 PUSH2 0x121D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12A4 DUP2 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12BE PUSH0 DUP4 ADD DUP6 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x12CB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD94 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x12E0 DUP2 PUSH2 0xCCD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12FB JUMPI PUSH2 0x12FA PUSH2 0xC31 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1308 DUP5 DUP3 DUP6 ADD PUSH2 0x12D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x56657374696E67207363686564756C65206E6F74207265766F6361626C65205B PUSH0 DUP3 ADD MSTORE PUSH32 0x696E207265766F6B6556657374696E675363686564756C6528295D0000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x136B PUSH1 0x3B DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x1376 DUP3 PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1398 DUP2 PUSH2 0x135F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56657374696E67207363686564756C6520616C7265616479207265766F6B6564 PUSH0 DUP3 ADD MSTORE PUSH32 0x205B696E207265766F6B6556657374696E675363686564756C6528295D000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13F9 PUSH1 0x3D DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x1404 DUP3 PUSH2 0x139F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1426 DUP2 PUSH2 0x13ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x143B DUP2 PUSH2 0xC98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1456 JUMPI PUSH2 0x1455 PUSH2 0xC31 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1463 DUP5 DUP3 DUP6 ADD PUSH2 0x142D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x14A3 DUP3 PUSH2 0xC8F JUMP JUMPDEST SWAP2 POP PUSH2 0x14AE DUP4 PUSH2 0xC8F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x14C6 JUMPI PUSH2 0x14C5 PUSH2 0x146C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14D6 DUP3 PUSH2 0xC8F JUMP JUMPDEST SWAP2 POP PUSH2 0x14E1 DUP4 PUSH2 0xC8F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x14F9 JUMPI PUSH2 0x14F8 PUSH2 0x146C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1536 DUP3 PUSH2 0xC8F JUMP JUMPDEST SWAP2 POP PUSH2 0x1541 DUP4 PUSH2 0xC8F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1551 JUMPI PUSH2 0x1550 PUSH2 0x14FF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1566 DUP3 PUSH2 0xC8F JUMP JUMPDEST SWAP2 POP PUSH2 0x1571 DUP4 PUSH2 0xC8F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x157F DUP2 PUSH2 0xC8F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1596 JUMPI PUSH2 0x1595 PUSH2 0x146C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x71DE05B12EE3447F DUP9 0x1F 0xB8 0xAA LOG0 ADDRESS PUSH5 0x111D9F3D3 0xE0 0x28 DUP1 CODESIZE SWAP11 CALLDATASIZE PUSH14 0xFBC2E3C064736F6C634300081600 CALLER ",
							"sourceMap": "179:4918:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1436:1179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4871:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2623:911;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;246:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3542:665;;;:::i;:::-;;4215:648;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4969:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;273:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;572:59;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;1436:1179;1087:5;;;;;;;;;;1073:19;;:10;:19;;;1065:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;1778:1:::1;1735:16;:29;1752:11;1735:29;;;;;;;;;;;;;;;:39;;;:44;1713:154;;;;;;;;;;;;:::i;:::-;;;;;;;;;1914:1;1900:11;:15;:38;;;;;1937:1;1919:15;:19;1900:38;1878:143;;;;;;;;;;;;:::i;:::-;;;;;;;;;2034:32;2069:16;:29;2086:11;2069:29;;;;;;;;;;;;;;;2034:64;;2130:9;2109:8;:18;;:30;;;;2175:13;2150:8;:22;;:38;;;;2226:15;2199:8;:24;;:42;;;;2275:11;2252:8;:20;;:34;;;;2320:11;2297:8;:20;;:34;;;;2363:9;2342:8;:18;;;:30;;;;;;;;;;;;;;;;;;2427:11;2390:217;;;2453:9;2477:13;2505:15;2535:11;2561;2587:9;2390:217;;;;;;;;;;;:::i;:::-;;;;;;;;1702:913;1436:1179:::0;;;;;;;:::o;4871:90::-;4912:7;4938:15;4931:22;;4871:90;:::o;2623:911::-;2727:7;2752:31;2786:16;:29;2803:11;2786:29;;;;;;;;;;;;;;;2752:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2850:46;2873:8;:22;;;2850:8;:18;;;:22;;:46;;;;:::i;:::-;2832:15;:64;2828:134;;;2920:1;2913:8;;;;;2828:134;2974:25;3002:91;3060:8;:22;;;3002:39;3022:8;:18;;;3002:15;:19;;:39;;;;:::i;:::-;:43;;:91;;;;:::i;:::-;2974:119;;3106:27;3136:74;3179:8;:20;;;3136:8;:24;;;:28;;:74;;;;:::i;:::-;3106:104;;3221:21;3245:43;3267:8;:20;;;3245:17;:21;;:43;;;;:::i;:::-;3221:67;;3322:19;3305:13;:36;3301:96;;3365:8;:20;;;3358:27;;;;;;;;3301:96;3409:20;3432:45;3457:19;3432:8;:20;;;:24;;:45;;;;:::i;:::-;3409:68;;3495:31;3512:13;3495:12;:16;;:31;;;;:::i;:::-;3488:38;;;;;;;2623:911;;;;:::o;246:20::-;;;;;;;;;;;;:::o;3542:665::-;3587:32;3622:16;:28;3639:10;3622:28;;;;;;;;;;;;;;;3587:63;;3690:1;3669:8;:18;;;:22;3661:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;3762:8;:16;;;;;;;;;;;;3761:17;3753:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;3841:24;3868:37;3894:10;3868:25;:37::i;:::-;3841:64;;3943:1;3924:16;:20;3916:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;4037:43;4063:16;4037:8;:21;;;:25;;:43;;;;:::i;:::-;4013:8;:21;;:67;;;;4093:5;;;;;;;;;;;:14;;;4108:10;4120:16;4093:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4170:10;4155:44;;;4182:16;4155:44;;;;;;:::i;:::-;;;;;;;;3576:631;;3542:665::o;4215:648::-;1087:5;;;;;;;;;;1073:19;;:10;:19;;;1065:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;4297:32:::1;4332:16;:29;4349:11;4332:29;;;;;;;;;;;;;;;4297:64;;4380:8;:18;;;;;;;;;;;;4372:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;4482:8;:16;;;;;;;;;;;;4481:17;4473:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;4596:4;4577:8;:16;;;:23;;;;;;;;;;;;;;;;;;4613;4639:71;4678:8;:21;;;4639:8;:20;;;:24;;:71;;;;:::i;:::-;4613:97;;4743:1;4725:15;:19;4721:90;;;4761:5;;;;;;;;;;;:14;;;4776:5;::::0;::::1;;;;;;;;4783:15;4761:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4721:90;4843:11;4828:27;;;;;;;;;;;;4286:577;;4215:648:::0;:::o;4969:125::-;5032:7;5058:5;;;;;;;;;;;:15;;;5074:11;5058:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5051:35;;4969:125;;;:::o;273:18::-;;;;;;;;;;;;;:::o;572:59::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2755:96:5:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:90::-;1231:7;1274:5;1267:13;1260:21;1249:32;;1197:90;;;:::o;1293:116::-;1363:21;1378:5;1363:21;:::i;:::-;1356:5;1353:32;1343:60;;1399:1;1396;1389:12;1343:60;1293:116;:::o;1415:133::-;1458:5;1496:6;1483:20;1474:29;;1512:30;1536:5;1512:30;:::i;:::-;1415:133;;;;:::o;1554:1197::-;1664:6;1672;1680;1688;1696;1704;1712;1761:3;1749:9;1740:7;1736:23;1732:33;1729:120;;;1768:79;;:::i;:::-;1729:120;1888:1;1913:53;1958:7;1949:6;1938:9;1934:22;1913:53;:::i;:::-;1903:63;;1859:117;2015:2;2041:53;2086:7;2077:6;2066:9;2062:22;2041:53;:::i;:::-;2031:63;;1986:118;2143:2;2169:53;2214:7;2205:6;2194:9;2190:22;2169:53;:::i;:::-;2159:63;;2114:118;2271:2;2297:53;2342:7;2333:6;2322:9;2318:22;2297:53;:::i;:::-;2287:63;;2242:118;2399:3;2426:53;2471:7;2462:6;2451:9;2447:22;2426:53;:::i;:::-;2416:63;;2370:119;2528:3;2555:53;2600:7;2591:6;2580:9;2576:22;2555:53;:::i;:::-;2545:63;;2499:119;2657:3;2684:50;2726:7;2717:6;2706:9;2702:22;2684:50;:::i;:::-;2674:60;;2628:116;1554:1197;;;;;;;;;;:::o;2757:118::-;2844:24;2862:5;2844:24;:::i;:::-;2839:3;2832:37;2757:118;;:::o;2881:222::-;2974:4;3012:2;3001:9;2997:18;2989:26;;3025:71;3093:1;3082:9;3078:17;3069:6;3025:71;:::i;:::-;2881:222;;;;:::o;3109:329::-;3168:6;3217:2;3205:9;3196:7;3192:23;3188:32;3185:119;;;3223:79;;:::i;:::-;3185:119;3343:1;3368:53;3413:7;3404:6;3393:9;3389:22;3368:53;:::i;:::-;3358:63;;3314:117;3109:329;;;;:::o;3444:118::-;3531:24;3549:5;3531:24;:::i;:::-;3526:3;3519:37;3444:118;;:::o;3568:222::-;3661:4;3699:2;3688:9;3684:18;3676:26;;3712:71;3780:1;3769:9;3765:17;3756:6;3712:71;:::i;:::-;3568:222;;;;:::o;3796:60::-;3824:3;3845:5;3838:12;;3796:60;;;:::o;3862:142::-;3912:9;3945:53;3963:34;3972:24;3990:5;3972:24;:::i;:::-;3963:34;:::i;:::-;3945:53;:::i;:::-;3932:66;;3862:142;;;:::o;4010:126::-;4060:9;4093:37;4124:5;4093:37;:::i;:::-;4080:50;;4010:126;;;:::o;4142:139::-;4205:9;4238:37;4269:5;4238:37;:::i;:::-;4225:50;;4142:139;;;:::o;4287:157::-;4387:50;4431:5;4387:50;:::i;:::-;4382:3;4375:63;4287:157;;:::o;4450:248::-;4556:4;4594:2;4583:9;4579:18;4571:26;;4607:84;4688:1;4677:9;4673:17;4664:6;4607:84;:::i;:::-;4450:248;;;;:::o;4704:109::-;4785:21;4800:5;4785:21;:::i;:::-;4780:3;4773:34;4704:109;;:::o;4819:973::-;5096:4;5134:3;5123:9;5119:19;5111:27;;5148:71;5216:1;5205:9;5201:17;5192:6;5148:71;:::i;:::-;5229:72;5297:2;5286:9;5282:18;5273:6;5229:72;:::i;:::-;5311;5379:2;5368:9;5364:18;5355:6;5311:72;:::i;:::-;5393;5461:2;5450:9;5446:18;5437:6;5393:72;:::i;:::-;5475:73;5543:3;5532:9;5528:19;5519:6;5475:73;:::i;:::-;5558:67;5620:3;5609:9;5605:19;5596:6;5558:67;:::i;:::-;5635:73;5703:3;5692:9;5688:19;5679:6;5635:73;:::i;:::-;5718:67;5780:3;5769:9;5765:19;5756:6;5718:67;:::i;:::-;4819:973;;;;;;;;;;;:::o;5798:169::-;5882:11;5916:6;5911:3;5904:19;5956:4;5951:3;5947:14;5932:29;;5798:169;;;;:::o;5973:163::-;6113:15;6109:1;6101:6;6097:14;6090:39;5973:163;:::o;6142:366::-;6284:3;6305:67;6369:2;6364:3;6305:67;:::i;:::-;6298:74;;6381:93;6470:3;6381:93;:::i;:::-;6499:2;6494:3;6490:12;6483:19;;6142:366;;;:::o;6514:419::-;6680:4;6718:2;6707:9;6703:18;6695:26;;6767:9;6761:4;6757:20;6753:1;6742:9;6738:17;6731:47;6795:131;6921:4;6795:131;:::i;:::-;6787:139;;6514:419;;;:::o;6939:247::-;7079:34;7075:1;7067:6;7063:14;7056:58;7148:30;7143:2;7135:6;7131:15;7124:55;6939:247;:::o;7192:366::-;7334:3;7355:67;7419:2;7414:3;7355:67;:::i;:::-;7348:74;;7431:93;7520:3;7431:93;:::i;:::-;7549:2;7544:3;7540:12;7533:19;;7192:366;;;:::o;7564:419::-;7730:4;7768:2;7757:9;7753:18;7745:26;;7817:9;7811:4;7807:20;7803:1;7792:9;7788:17;7781:47;7845:131;7971:4;7845:131;:::i;:::-;7837:139;;7564:419;;;:::o;7989:242::-;8129:34;8125:1;8117:6;8113:14;8106:58;8198:25;8193:2;8185:6;8181:15;8174:50;7989:242;:::o;8237:366::-;8379:3;8400:67;8464:2;8459:3;8400:67;:::i;:::-;8393:74;;8476:93;8565:3;8476:93;:::i;:::-;8594:2;8589:3;8585:12;8578:19;;8237:366;;;:::o;8609:419::-;8775:4;8813:2;8802:9;8798:18;8790:26;;8862:9;8856:4;8852:20;8848:1;8837:9;8833:17;8826:47;8890:131;9016:4;8890:131;:::i;:::-;8882:139;;8609:419;;;:::o;9034:763::-;9261:4;9299:3;9288:9;9284:19;9276:27;;9313:71;9381:1;9370:9;9366:17;9357:6;9313:71;:::i;:::-;9394:72;9462:2;9451:9;9447:18;9438:6;9394:72;:::i;:::-;9476;9544:2;9533:9;9529:18;9520:6;9476:72;:::i;:::-;9558;9626:2;9615:9;9611:18;9602:6;9558:72;:::i;:::-;9640:73;9708:3;9697:9;9693:19;9684:6;9640:73;:::i;:::-;9723:67;9785:3;9774:9;9770:19;9761:6;9723:67;:::i;:::-;9034:763;;;;;;;;;:::o;9803:233::-;9943:34;9939:1;9931:6;9927:14;9920:58;10012:16;10007:2;9999:6;9995:15;9988:41;9803:233;:::o;10042:366::-;10184:3;10205:67;10269:2;10264:3;10205:67;:::i;:::-;10198:74;;10281:93;10370:3;10281:93;:::i;:::-;10399:2;10394:3;10390:12;10383:19;;10042:366;;;:::o;10414:419::-;10580:4;10618:2;10607:9;10603:18;10595:26;;10667:9;10661:4;10657:20;10653:1;10642:9;10638:17;10631:47;10695:131;10821:4;10695:131;:::i;:::-;10687:139;;10414:419;;;:::o;10839:232::-;10979:34;10975:1;10967:6;10963:14;10956:58;11048:15;11043:2;11035:6;11031:15;11024:40;10839:232;:::o;11077:366::-;11219:3;11240:67;11304:2;11299:3;11240:67;:::i;:::-;11233:74;;11316:93;11405:3;11316:93;:::i;:::-;11434:2;11429:3;11425:12;11418:19;;11077:366;;;:::o;11449:419::-;11615:4;11653:2;11642:9;11638:18;11630:26;;11702:9;11696:4;11692:20;11688:1;11677:9;11673:17;11666:47;11730:131;11856:4;11730:131;:::i;:::-;11722:139;;11449:419;;;:::o;11874:238::-;12014:34;12010:1;12002:6;11998:14;11991:58;12083:21;12078:2;12070:6;12066:15;12059:46;11874:238;:::o;12118:366::-;12260:3;12281:67;12345:2;12340:3;12281:67;:::i;:::-;12274:74;;12357:93;12446:3;12357:93;:::i;:::-;12475:2;12470:3;12466:12;12459:19;;12118:366;;;:::o;12490:419::-;12656:4;12694:2;12683:9;12679:18;12671:26;;12743:9;12737:4;12733:20;12729:1;12718:9;12714:17;12707:47;12771:131;12897:4;12771:131;:::i;:::-;12763:139;;12490:419;;;:::o;12915:332::-;13036:4;13074:2;13063:9;13059:18;13051:26;;13087:71;13155:1;13144:9;13140:17;13131:6;13087:71;:::i;:::-;13168:72;13236:2;13225:9;13221:18;13212:6;13168:72;:::i;:::-;12915:332;;;;;:::o;13253:137::-;13307:5;13338:6;13332:13;13323:22;;13354:30;13378:5;13354:30;:::i;:::-;13253:137;;;;:::o;13396:345::-;13463:6;13512:2;13500:9;13491:7;13487:23;13483:32;13480:119;;;13518:79;;:::i;:::-;13480:119;13638:1;13663:61;13716:7;13707:6;13696:9;13692:22;13663:61;:::i;:::-;13653:71;;13609:125;13396:345;;;;:::o;13747:246::-;13887:34;13883:1;13875:6;13871:14;13864:58;13956:29;13951:2;13943:6;13939:15;13932:54;13747:246;:::o;13999:366::-;14141:3;14162:67;14226:2;14221:3;14162:67;:::i;:::-;14155:74;;14238:93;14327:3;14238:93;:::i;:::-;14356:2;14351:3;14347:12;14340:19;;13999:366;;;:::o;14371:419::-;14537:4;14575:2;14564:9;14560:18;14552:26;;14624:9;14618:4;14614:20;14610:1;14599:9;14595:17;14588:47;14652:131;14778:4;14652:131;:::i;:::-;14644:139;;14371:419;;;:::o;14796:248::-;14936:34;14932:1;14924:6;14920:14;14913:58;15005:31;15000:2;14992:6;14988:15;14981:56;14796:248;:::o;15050:366::-;15192:3;15213:67;15277:2;15272:3;15213:67;:::i;:::-;15206:74;;15289:93;15378:3;15289:93;:::i;:::-;15407:2;15402:3;15398:12;15391:19;;15050:366;;;:::o;15422:419::-;15588:4;15626:2;15615:9;15611:18;15603:26;;15675:9;15669:4;15665:20;15661:1;15650:9;15646:17;15639:47;15703:131;15829:4;15703:131;:::i;:::-;15695:139;;15422:419;;;:::o;15847:143::-;15904:5;15935:6;15929:13;15920:22;;15951:33;15978:5;15951:33;:::i;:::-;15847:143;;;;:::o;15996:351::-;16066:6;16115:2;16103:9;16094:7;16090:23;16086:32;16083:119;;;16121:79;;:::i;:::-;16083:119;16241:1;16266:64;16322:7;16313:6;16302:9;16298:22;16266:64;:::i;:::-;16256:74;;16212:128;15996:351;;;;:::o;16353:180::-;16401:77;16398:1;16391:88;16498:4;16495:1;16488:15;16522:4;16519:1;16512:15;16539:191;16579:3;16598:20;16616:1;16598:20;:::i;:::-;16593:25;;16632:20;16650:1;16632:20;:::i;:::-;16627:25;;16675:1;16672;16668:9;16661:16;;16696:3;16693:1;16690:10;16687:36;;;16703:18;;:::i;:::-;16687:36;16539:191;;;;:::o;16736:194::-;16776:4;16796:20;16814:1;16796:20;:::i;:::-;16791:25;;16830:20;16848:1;16830:20;:::i;:::-;16825:25;;16874:1;16871;16867:9;16859:17;;16898:1;16892:4;16889:11;16886:37;;;16903:18;;:::i;:::-;16886:37;16736:194;;;;:::o;16936:180::-;16984:77;16981:1;16974:88;17081:4;17078:1;17071:15;17105:4;17102:1;17095:15;17122:185;17162:1;17179:20;17197:1;17179:20;:::i;:::-;17174:25;;17213:20;17231:1;17213:20;:::i;:::-;17208:25;;17252:1;17242:35;;17257:18;;:::i;:::-;17242:35;17299:1;17296;17292:9;17287:14;;17122:185;;;;:::o;17313:410::-;17353:7;17376:20;17394:1;17376:20;:::i;:::-;17371:25;;17410:20;17428:1;17410:20;:::i;:::-;17405:25;;17465:1;17462;17458:9;17487:30;17505:11;17487:30;:::i;:::-;17476:41;;17666:1;17657:7;17653:15;17650:1;17647:22;17627:1;17620:9;17600:83;17577:139;;17696:18;;:::i;:::-;17577:139;17361:362;17313:410;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1117400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"calculateReleasableTokens(address)": "infinite",
								"createVestingSchedule(address,uint256,uint256,uint256,uint256,uint256,bool)": "infinite",
								"getBalance(address)": "infinite",
								"getTime()": "354",
								"owner()": "2572",
								"releaseTokens()": "infinite",
								"revokeVestingSchedule(address)": "infinite",
								"token()": "infinite",
								"vestingSchedules(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 5097,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 179,
									"end": 5097,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 179,
									"end": 5097,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1340,
									"end": 1428,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1385,
									"end": 1395,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1382,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1377,
									"end": 1382,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1377,
									"end": 1395,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1395,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1395,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1395,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1377,
									"end": 1395,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1395,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1395,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1395,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1395,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1377,
									"end": 1395,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1395,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1395,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1395,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1395,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1395,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1414,
									"end": 1420,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1411,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1406,
									"end": 1411,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1406,
									"end": 1420,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1406,
									"end": 1420,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1420,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1420,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1420,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1420,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1406,
									"end": 1420,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1420,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1420,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1420,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1420,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1420,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1406,
									"end": 1420,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1420,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1420,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1420,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1420,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1420,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1428,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 179,
									"end": 5097,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 179,
									"end": 5097,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 677,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 677,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 618,
									"end": 625,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 665,
									"end": 670,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 647,
									"end": 671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 647,
									"end": 671,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 636,
									"end": 671,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 636,
									"end": 671,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 677,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 568,
									"end": 677,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 568,
									"end": 677,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 677,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 683,
									"end": 831,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 683,
									"end": 831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 769,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 805,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 769,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 769,
									"end": 806,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 769,
									"end": 806,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 769,
									"end": 806,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 762,
									"end": 767,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 759,
									"end": 807,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 749,
									"end": 825,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 749,
									"end": 825,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 821,
									"end": 822,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 818,
									"end": 819,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 811,
									"end": 823,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 749,
									"end": 825,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 749,
									"end": 825,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 683,
									"end": 831,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 683,
									"end": 831,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 907,
									"end": 912,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 938,
									"end": 944,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 932,
									"end": 945,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 923,
									"end": 945,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 923,
									"end": 945,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 954,
									"end": 1000,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 837,
									"end": 1006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1095,
									"end": 1101,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1146,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1132,
									"end": 1141,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1123,
									"end": 1130,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1142,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1147,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1150,
									"end": 1229,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1150,
									"end": 1229,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1150,
									"end": 1229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1150,
									"end": 1229,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1150,
									"end": 1229,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1112,
									"end": 1231,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1270,
									"end": 1271,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1295,
									"end": 1372,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1364,
									"end": 1371,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1355,
									"end": 1361,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1344,
									"end": 1353,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1340,
									"end": 1362,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1295,
									"end": 1372,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 1295,
									"end": 1372,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1295,
									"end": 1372,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1295,
									"end": 1372,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1285,
									"end": 1372,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1285,
									"end": 1372,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1241,
									"end": 1382,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1012,
									"end": 1389,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1012,
									"end": 1389,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 179,
									"end": 5097,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 179,
									"end": 5097,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 179,
									"end": 5097,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 5097,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 179,
									"end": 5097,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 5097,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 5097,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 179,
									"end": 5097,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 5097,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206771de05b12ee3447f881fb8aaa030640111d9f3d3e02880389a366dfbc2e3c064736f6c63430008160033",
									".code": [
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH",
											"source": 6,
											"value": "A96F8668"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH",
											"source": 6,
											"value": "A96F8668"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH",
											"source": 6,
											"value": "F035A272"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH",
											"source": 6,
											"value": "F8B2CB4F"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH",
											"source": 6,
											"value": "FC0C546A"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH",
											"source": 6,
											"value": "FDB20CCB"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH",
											"source": 6,
											"value": "4495E827"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH",
											"source": 6,
											"value": "557ED1BA"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH",
											"source": 6,
											"value": "7DC8A8AA"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 179,
											"end": 5097,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1436,
											"end": 2615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1436,
											"end": 2615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 4961,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4871,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 4871,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 4871,
											"end": 4961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 4961,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 4871,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 4961,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4871,
											"end": 4961,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 4871,
											"end": 4961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 4961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4871,
											"end": 4961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 4961,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 4871,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 4961,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4871,
											"end": 4961,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 4961,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 4961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 4961,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 4961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 4961,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2623,
											"end": 3534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2623,
											"end": 3534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2623,
											"end": 3534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 246,
											"end": 266,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 246,
											"end": 266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 246,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 246,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 246,
											"end": 266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 246,
											"end": 266,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 246,
											"end": 266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 246,
											"end": 266,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 266,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 246,
											"end": 266,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 246,
											"end": 266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 246,
											"end": 266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 246,
											"end": 266,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 246,
											"end": 266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 246,
											"end": 266,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 266,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 266,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 266,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 246,
											"end": 266,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 246,
											"end": 266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 266,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 4207,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3542,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3542,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3542,
											"end": 4207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 4207,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3542,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 4207,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4863,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4215,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 4215,
											"end": 4863,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4215,
											"end": 4863,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4863,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4863,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4863,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 4215,
											"end": 4863,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 4215,
											"end": 4863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4863,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 4215,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 4215,
											"end": 4863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4863,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 4215,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4863,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 4969,
											"end": 5094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 4969,
											"end": 5094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4969,
											"end": 5094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 273,
											"end": 291,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 273,
											"end": 291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 273,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 273,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 273,
											"end": 291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 273,
											"end": 291,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 273,
											"end": 291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 273,
											"end": 291,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 273,
											"end": 291,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 273,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 273,
											"end": 291,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 273,
											"end": 291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 273,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 273,
											"end": 291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 273,
											"end": 291,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 273,
											"end": 291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 273,
											"end": 291,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 273,
											"end": 291,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 273,
											"end": 291,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 273,
											"end": 291,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 273,
											"end": 291,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 273,
											"end": 291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 273,
											"end": 291,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 572,
											"end": 631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 572,
											"end": 631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 572,
											"end": 631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1092,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1073,
											"end": 1092,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1083,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1092,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1073,
											"end": 1092,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1065,
											"end": 1110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1778,
											"end": 1779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1735,
											"end": 1764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1752,
											"end": 1763,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1735,
											"end": 1764,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1735,
											"end": 1764,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1764,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1764,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1735,
											"end": 1764,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1764,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1764,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1764,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1735,
											"end": 1764,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1764,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1774,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1774,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1779,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1713,
											"end": 1867,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1713,
											"end": 1867,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1713,
											"end": 1867,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1867,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1713,
											"end": 1867,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1713,
											"end": 1867,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1713,
											"end": 1867,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1867,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1713,
											"end": 1867,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1713,
											"end": 1867,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1867,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1867,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1867,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1867,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1867,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1867,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1713,
											"end": 1867,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 1915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 1911,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1915,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1938,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1938,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1900,
											"end": 1938,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1938,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1937,
											"end": 1938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1934,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1938,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1938,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1900,
											"end": 1938,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 2021,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1878,
											"end": 2021,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 2021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1878,
											"end": 2021,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 2021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1878,
											"end": 2021,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 2021,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 2021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1878,
											"end": 2021,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 2021,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1878,
											"end": 2021,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 2021,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1878,
											"end": 2021,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 2021,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1878,
											"end": 2021,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 2021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1878,
											"end": 2021,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 2021,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 2021,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 2021,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 2021,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 2021,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 2021,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1878,
											"end": 2021,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2069,
											"end": 2098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2097,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2069,
											"end": 2098,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2069,
											"end": 2098,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2098,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2098,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2098,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2098,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2098,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2098,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2098,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2069,
											"end": 2098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2098,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2098,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2098,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2130,
											"end": 2139,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2109,
											"end": 2117,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2109,
											"end": 2127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2127,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2109,
											"end": 2139,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2109,
											"end": 2139,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2109,
											"end": 2139,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2109,
											"end": 2139,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2188,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2158,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2150,
											"end": 2172,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2188,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2188,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2188,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2188,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2226,
											"end": 2241,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2199,
											"end": 2223,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2241,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2241,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2241,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2241,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2275,
											"end": 2286,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2260,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2252,
											"end": 2272,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2286,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2286,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2286,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2286,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2331,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2305,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2297,
											"end": 2317,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2331,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2331,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2331,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2363,
											"end": 2372,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2350,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2342,
											"end": 2360,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2342,
											"end": 2372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2342,
											"end": 2372,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2372,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2372,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2372,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2342,
											"end": 2372,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2372,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2372,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2372,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2372,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2372,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2372,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2372,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2372,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2372,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2372,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2372,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2438,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2390,
											"end": 2607,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "BEA02A5045606A667FF06EB235C005B4F95B55A10C174B5AAE63BA6BE2AE9808"
										},
										{
											"begin": 2453,
											"end": 2462,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2490,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2505,
											"end": 2520,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2535,
											"end": 2546,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2572,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2596,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2390,
											"end": 2607,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2390,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2390,
											"end": 2607,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2607,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2390,
											"end": 2607,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2390,
											"end": 2607,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2607,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2607,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 2615,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 2615,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 2615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 4961,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 4871,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4912,
											"end": 4919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4938,
											"end": 4953,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4931,
											"end": 4953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4931,
											"end": 4953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 4961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 4961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2727,
											"end": 2734,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2783,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2802,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2786,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2814,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2786,
											"end": 2815,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2786,
											"end": 2815,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2815,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2786,
											"end": 2815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2815,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2786,
											"end": 2815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2786,
											"end": 2815,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2873,
											"end": 2881,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2895,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2873,
											"end": 2895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2895,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2868,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2868,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2868,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2850,
											"end": 2872,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2896,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2896,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2896,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2850,
											"end": 2896,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2896,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2850,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2847,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2896,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2828,
											"end": 2962,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2828,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2828,
											"end": 2962,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2920,
											"end": 2921,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2921,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2913,
											"end": 2921,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2913,
											"end": 2921,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2913,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2913,
											"end": 2921,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2828,
											"end": 2962,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2828,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 2999,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3060,
											"end": 3068,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3082,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3060,
											"end": 3082,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3082,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3022,
											"end": 3030,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3022,
											"end": 3040,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3022,
											"end": 3040,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3022,
											"end": 3040,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3017,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3002,
											"end": 3021,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3041,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3041,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3041,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3002,
											"end": 3041,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3041,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3002,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3002,
											"end": 3045,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3093,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3093,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3002,
											"end": 3093,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3093,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3002,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3106,
											"end": 3133,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3136,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3179,
											"end": 3187,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3179,
											"end": 3199,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3179,
											"end": 3199,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3179,
											"end": 3199,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3144,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3160,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3136,
											"end": 3160,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3160,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3136,
											"end": 3164,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3210,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3210,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3210,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3136,
											"end": 3210,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3210,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3136,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3106,
											"end": 3210,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3106,
											"end": 3210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 3267,
											"end": 3275,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3287,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3267,
											"end": 3287,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3287,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3262,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3245,
											"end": 3266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3288,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3288,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3288,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3245,
											"end": 3288,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3288,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 3245,
											"end": 3288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3288,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3288,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3341,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 3318,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 3341,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 3301,
											"end": 3397,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3373,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3385,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3365,
											"end": 3385,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3385,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3358,
											"end": 3385,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3358,
											"end": 3385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3358,
											"end": 3385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3358,
											"end": 3385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3358,
											"end": 3385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3358,
											"end": 3385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3358,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3358,
											"end": 3385,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3397,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 3301,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3429,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3432,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 3457,
											"end": 3476,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3432,
											"end": 3440,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3432,
											"end": 3452,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3432,
											"end": 3452,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3432,
											"end": 3452,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3432,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3432,
											"end": 3456,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3432,
											"end": 3477,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3432,
											"end": 3477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3432,
											"end": 3477,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3432,
											"end": 3477,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3432,
											"end": 3477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3432,
											"end": 3477,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 3432,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 3512,
											"end": 3525,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3507,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3495,
											"end": 3511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3526,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3526,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3526,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3495,
											"end": 3526,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3526,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 3495,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3488,
											"end": 3526,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3488,
											"end": 3526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3488,
											"end": 3526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3488,
											"end": 3526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3488,
											"end": 3526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3488,
											"end": 3526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3488,
											"end": 3526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 3534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 246,
											"end": 266,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 246,
											"end": 266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 246,
											"end": 266,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 266,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 266,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 266,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 246,
											"end": 266,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 246,
											"end": 266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 266,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 246,
											"end": 266,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 246,
											"end": 266,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 246,
											"end": 266,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 246,
											"end": 266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 4207,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3542,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3587,
											"end": 3619,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3622,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3622,
											"end": 3650,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3639,
											"end": 3649,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3650,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3622,
											"end": 3650,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3650,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3622,
											"end": 3650,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3650,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3650,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3650,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3622,
											"end": 3650,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3650,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3650,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3650,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3650,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3622,
											"end": 3650,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3650,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3622,
											"end": 3650,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3587,
											"end": 3650,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3587,
											"end": 3650,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 3691,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3691,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3661,
											"end": 3742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 3661,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3770,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3778,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3762,
											"end": 3778,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3778,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3778,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3778,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3778,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3778,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3762,
											"end": 3778,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3778,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3778,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3778,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3762,
											"end": 3778,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3761,
											"end": 3778,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 3753,
											"end": 3828,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3828,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3753,
											"end": 3828,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3828,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3753,
											"end": 3828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3828,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3828,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3753,
											"end": 3828,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3753,
											"end": 3828,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3753,
											"end": 3828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3828,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3753,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3828,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3753,
											"end": 3828,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3828,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3828,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3828,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3828,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3828,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3828,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 3753,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3841,
											"end": 3865,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3868,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3894,
											"end": 3904,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3868,
											"end": 3905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3905,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3868,
											"end": 3905,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3841,
											"end": 3905,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3841,
											"end": 3905,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3943,
											"end": 3944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3940,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3924,
											"end": 3944,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3916,
											"end": 4000,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 4000,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3916,
											"end": 4000,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 4000,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3916,
											"end": 4000,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 4000,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 4000,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3916,
											"end": 4000,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3916,
											"end": 4000,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3916,
											"end": 4000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 4000,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3916,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 4000,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3916,
											"end": 4000,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 4000,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 4000,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 4000,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 4000,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 4000,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 4000,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3916,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 4063,
											"end": 4079,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4045,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4058,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4037,
											"end": 4058,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4058,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 4037,
											"end": 4062,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4080,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4037,
											"end": 4080,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4080,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 4037,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4013,
											"end": 4021,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4013,
											"end": 4034,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4013,
											"end": 4034,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4013,
											"end": 4080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4013,
											"end": 4080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4013,
											"end": 4080,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4013,
											"end": 4080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4098,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4093,
											"end": 4098,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4098,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4098,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4098,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4098,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4093,
											"end": 4098,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4098,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4098,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4098,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4093,
											"end": 4098,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4107,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4093,
											"end": 4107,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4107,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 4108,
											"end": 4118,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4120,
											"end": 4136,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 4093,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 4093,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4170,
											"end": 4180,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4155,
											"end": 4199,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4155,
											"end": 4199,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4155,
											"end": 4199,
											"name": "PUSH",
											"source": 6,
											"value": "C7798891864187665AC6DD119286E44EC13F014527AEEB2B8EB3FD413DF93179"
										},
										{
											"begin": 4182,
											"end": 4198,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4155,
											"end": 4199,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4155,
											"end": 4199,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4155,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 4155,
											"end": 4199,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4155,
											"end": 4199,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4155,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4155,
											"end": 4199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4155,
											"end": 4199,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 4155,
											"end": 4199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4155,
											"end": 4199,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4155,
											"end": 4199,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4155,
											"end": 4199,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4155,
											"end": 4199,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4155,
											"end": 4199,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4155,
											"end": 4199,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4155,
											"end": 4199,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 4207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 4207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 4207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4863,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 4215,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1092,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1073,
											"end": 1092,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1083,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1092,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1073,
											"end": 1092,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1092,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1065,
											"end": 1110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1065,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4332,
											"end": 4348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4332,
											"end": 4361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4360,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4332,
											"end": 4361,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4332,
											"end": 4361,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4361,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4361,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4332,
											"end": 4361,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4361,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4361,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4361,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4332,
											"end": 4361,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4332,
											"end": 4361,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4361,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4361,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4388,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4380,
											"end": 4398,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4380,
											"end": 4398,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4398,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4398,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4380,
											"end": 4398,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4398,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4398,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4380,
											"end": 4398,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4462,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4372,
											"end": 4462,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4372,
											"end": 4462,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4372,
											"end": 4462,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4462,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4372,
											"end": 4462,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4462,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4372,
											"end": 4462,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4462,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 4372,
											"end": 4462,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4462,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4372,
											"end": 4462,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4372,
											"end": 4462,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4462,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4462,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4462,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4462,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4462,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4462,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4372,
											"end": 4462,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4490,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4482,
											"end": 4498,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4482,
											"end": 4498,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4498,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4498,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4482,
											"end": 4498,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4498,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4498,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4482,
											"end": 4498,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4481,
											"end": 4498,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4473,
											"end": 4564,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4473,
											"end": 4564,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4473,
											"end": 4564,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4564,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4473,
											"end": 4564,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4473,
											"end": 4564,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 4473,
											"end": 4564,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4564,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4473,
											"end": 4564,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4473,
											"end": 4564,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4564,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4564,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4564,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4564,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4564,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4564,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4473,
											"end": 4564,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4577,
											"end": 4585,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4577,
											"end": 4593,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4577,
											"end": 4600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4577,
											"end": 4600,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4600,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4600,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4600,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4577,
											"end": 4600,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4600,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4600,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4600,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4600,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4600,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4600,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4600,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4600,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4600,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4600,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4600,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4639,
											"end": 4710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 4678,
											"end": 4686,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 4699,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4678,
											"end": 4699,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 4699,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4639,
											"end": 4647,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4639,
											"end": 4659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4639,
											"end": 4659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4639,
											"end": 4659,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4639,
											"end": 4663,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 4639,
											"end": 4663,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4639,
											"end": 4710,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4639,
											"end": 4710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4639,
											"end": 4710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4639,
											"end": 4710,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4639,
											"end": 4710,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4639,
											"end": 4710,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 4639,
											"end": 4710,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4710,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4743,
											"end": 4744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4740,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4725,
											"end": 4744,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4811,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4811,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 4721,
											"end": 4811,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4761,
											"end": 4766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4761,
											"end": 4766,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4766,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4766,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4761,
											"end": 4766,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4766,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4766,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4761,
											"end": 4766,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4761,
											"end": 4775,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 4776,
											"end": 4781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 4781,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 4781,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 4781,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 4781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4776,
											"end": 4781,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 4781,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 4781,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 4781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4776,
											"end": 4781,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4783,
											"end": 4798,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 4761,
											"end": 4799,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4761,
											"end": 4799,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 4761,
											"end": 4799,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4799,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4811,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 4721,
											"end": 4811,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4843,
											"end": 4854,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4828,
											"end": 4855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4828,
											"end": 4855,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4828,
											"end": 4855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "68D870AC0AFF3819234E8A1FC8F357B40D75212F2DC8594B97690FA205B3BAB2"
										},
										{
											"begin": 4828,
											"end": 4855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4828,
											"end": 4855,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4828,
											"end": 4855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4828,
											"end": 4855,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4828,
											"end": 4855,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4828,
											"end": 4855,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4828,
											"end": 4855,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4828,
											"end": 4855,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4828,
											"end": 4855,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 4286,
											"end": 4863,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4286,
											"end": 4863,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4863,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5032,
											"end": 5039,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5058,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5058,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5058,
											"end": 5063,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5063,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5063,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5058,
											"end": 5063,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5063,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5063,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5058,
											"end": 5063,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5073,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5058,
											"end": 5073,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5073,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 5074,
											"end": 5085,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 5058,
											"end": 5086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 5058,
											"end": 5086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 5058,
											"end": 5086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5051,
											"end": 5086,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5051,
											"end": 5086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 273,
											"end": 291,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 273,
											"end": 291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 273,
											"end": 291,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 273,
											"end": 291,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 273,
											"end": 291,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 273,
											"end": 291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 273,
											"end": 291,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 273,
											"end": 291,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 273,
											"end": 291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 273,
											"end": 291,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 273,
											"end": 291,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 273,
											"end": 291,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 273,
											"end": 291,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 273,
											"end": 291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 572,
											"end": 631,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 572,
											"end": 631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1287,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1197,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1238,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1279,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1267,
											"end": 1280,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1281,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1249,
											"end": 1281,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1249,
											"end": 1281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1287,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1287,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 1378,
											"end": 1383,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1363,
											"end": 1384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1384,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 1363,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1356,
											"end": 1361,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1353,
											"end": 1385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 1343,
											"end": 1403,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1400,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1397,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1401,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1403,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 1343,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1293,
											"end": 1409,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1293,
											"end": 1409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1548,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 1415,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1458,
											"end": 1463,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1496,
											"end": 1502,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1503,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1474,
											"end": 1503,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1474,
											"end": 1503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1512,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 1536,
											"end": 1541,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1512,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1512,
											"end": 1542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1512,
											"end": 1542,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 1512,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1548,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1548,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1548,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1548,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 2751,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1554,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1670,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1694,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1710,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1764,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1749,
											"end": 1758,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 1740,
											"end": 1747,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1759,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1765,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1849,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 1729,
											"end": 1849,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1768,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 1768,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1768,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1768,
											"end": 1847,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 1768,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1849,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 1729,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1889,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1913,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 1958,
											"end": 1965,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1955,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1938,
											"end": 1947,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 1934,
											"end": 1956,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1913,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1913,
											"end": 1966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1913,
											"end": 1966,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 1913,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1903,
											"end": 1966,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 1903,
											"end": 1966,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2015,
											"end": 2017,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 2086,
											"end": 2093,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 2077,
											"end": 2083,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 2062,
											"end": 2084,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2041,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2041,
											"end": 2094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2041,
											"end": 2094,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 2041,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2094,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2104,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2143,
											"end": 2145,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 2214,
											"end": 2221,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 2205,
											"end": 2211,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2194,
											"end": 2203,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 2190,
											"end": 2212,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2169,
											"end": 2222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2222,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 2169,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2222,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2114,
											"end": 2232,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2273,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2297,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2342,
											"end": 2349,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2339,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2322,
											"end": 2331,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 2318,
											"end": 2340,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2297,
											"end": 2350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2350,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2297,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2350,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2350,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2242,
											"end": 2360,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2399,
											"end": 2402,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2426,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2471,
											"end": 2478,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 2462,
											"end": 2468,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2451,
											"end": 2460,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2469,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2426,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2479,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2426,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2479,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2531,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 2555,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2600,
											"end": 2607,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 2591,
											"end": 2597,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2580,
											"end": 2589,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 2576,
											"end": 2598,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2555,
											"end": 2608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2608,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2555,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 2608,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 2608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2499,
											"end": 2618,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2660,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 2684,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2726,
											"end": 2733,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2723,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2706,
											"end": 2715,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 2702,
											"end": 2724,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2684,
											"end": 2734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2734,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2684,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2734,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2734,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2628,
											"end": 2744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 2751,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 2751,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 2751,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 2751,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 2751,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 2751,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 2751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 2751,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 2751,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 2751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 2751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2875,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 2757,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2844,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2862,
											"end": 2867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2844,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2844,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2844,
											"end": 2868,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2844,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2842,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2869,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2881,
											"end": 3103,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2881,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 2978,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3012,
											"end": 3014,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3001,
											"end": 3010,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2997,
											"end": 3015,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2989,
											"end": 3015,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2989,
											"end": 3015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3025,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3093,
											"end": 3094,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3091,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3078,
											"end": 3095,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3069,
											"end": 3075,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3025,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 3025,
											"end": 3096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3025,
											"end": 3096,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3025,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2881,
											"end": 3103,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2881,
											"end": 3103,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2881,
											"end": 3103,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2881,
											"end": 3103,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2881,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3219,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3215,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3223,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3413,
											"end": 3420,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 3368,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3314,
											"end": 3431,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3562,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 3444,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3531,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3531,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3531,
											"end": 3555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3531,
											"end": 3555,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3531,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 3529,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3556,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3568,
											"end": 3790,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 3568,
											"end": 3790,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3665,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3699,
											"end": 3701,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3688,
											"end": 3697,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3684,
											"end": 3702,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3676,
											"end": 3702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3676,
											"end": 3702,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3712,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 3780,
											"end": 3781,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3769,
											"end": 3778,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3782,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3712,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 3712,
											"end": 3783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3712,
											"end": 3783,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 3712,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3568,
											"end": 3790,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3568,
											"end": 3790,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3568,
											"end": 3790,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3568,
											"end": 3790,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3568,
											"end": 3790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3856,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 3796,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3824,
											"end": 3827,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3850,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3856,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3856,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3856,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3862,
											"end": 4004,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 3862,
											"end": 4004,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3921,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 3963,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3972,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3990,
											"end": 3995,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3972,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3972,
											"end": 3996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3972,
											"end": 3996,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3972,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3963,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 3963,
											"end": 3997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3963,
											"end": 3997,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3963,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3945,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3945,
											"end": 3998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3945,
											"end": 3998,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 3945,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3932,
											"end": 3998,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3932,
											"end": 3998,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3862,
											"end": 4004,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3862,
											"end": 4004,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3862,
											"end": 4004,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3862,
											"end": 4004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4010,
											"end": 4136,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 4010,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4060,
											"end": 4069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 4124,
											"end": 4129,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 4093,
											"end": 4130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4130,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 4093,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4080,
											"end": 4130,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4080,
											"end": 4130,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4010,
											"end": 4136,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4010,
											"end": 4136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4010,
											"end": 4136,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4010,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4142,
											"end": 4281,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 4142,
											"end": 4281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4205,
											"end": 4214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4238,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4269,
											"end": 4274,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 4238,
											"end": 4275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4275,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4238,
											"end": 4275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4225,
											"end": 4275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4225,
											"end": 4275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4142,
											"end": 4281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4142,
											"end": 4281,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4142,
											"end": 4281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4142,
											"end": 4281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4287,
											"end": 4444,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 4287,
											"end": 4444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4387,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 4431,
											"end": 4436,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4387,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 4387,
											"end": 4437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4387,
											"end": 4437,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 4387,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4385,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4375,
											"end": 4438,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4287,
											"end": 4444,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4287,
											"end": 4444,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4287,
											"end": 4444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4698,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4450,
											"end": 4698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4594,
											"end": 4596,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4583,
											"end": 4592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4571,
											"end": 4597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4571,
											"end": 4597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 4688,
											"end": 4689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4677,
											"end": 4686,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4673,
											"end": 4690,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 4670,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 4607,
											"end": 4691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4607,
											"end": 4691,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 4607,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4698,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4698,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4813,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 4704,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4785,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 4800,
											"end": 4805,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4785,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 4785,
											"end": 4806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4785,
											"end": 4806,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 4785,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4780,
											"end": 4783,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4807,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4813,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4813,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5792,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 4819,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5096,
											"end": 5100,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5134,
											"end": 5137,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5123,
											"end": 5132,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5119,
											"end": 5138,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5111,
											"end": 5138,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5111,
											"end": 5138,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5216,
											"end": 5217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5205,
											"end": 5214,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5201,
											"end": 5218,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5192,
											"end": 5198,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 5148,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5219,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5148,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5229,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 5297,
											"end": 5299,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5286,
											"end": 5295,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5273,
											"end": 5279,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 5229,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 5229,
											"end": 5301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5229,
											"end": 5301,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 5229,
											"end": 5301,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5311,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 5379,
											"end": 5381,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5368,
											"end": 5377,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5355,
											"end": 5361,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5311,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 5311,
											"end": 5383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5311,
											"end": 5383,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 5311,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 5461,
											"end": 5463,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5450,
											"end": 5459,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5446,
											"end": 5464,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5437,
											"end": 5443,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 5393,
											"end": 5465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5465,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 5393,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5475,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 5543,
											"end": 5546,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 5532,
											"end": 5541,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5528,
											"end": 5547,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 5525,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5475,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 5475,
											"end": 5548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5475,
											"end": 5548,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 5475,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5558,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 5620,
											"end": 5623,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 5609,
											"end": 5618,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5605,
											"end": 5624,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5596,
											"end": 5602,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5558,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 5558,
											"end": 5625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5558,
											"end": 5625,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 5558,
											"end": 5625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5635,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 5703,
											"end": 5706,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 5692,
											"end": 5701,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5688,
											"end": 5707,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5679,
											"end": 5685,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5635,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 5635,
											"end": 5708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5635,
											"end": 5708,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 5635,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5718,
											"end": 5785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 5780,
											"end": 5783,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5769,
											"end": 5778,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5765,
											"end": 5784,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5756,
											"end": 5762,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5718,
											"end": 5785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 5718,
											"end": 5785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5718,
											"end": 5785,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 5718,
											"end": 5785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5792,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5792,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 5792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5798,
											"end": 5967,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 5798,
											"end": 5967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 5893,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5916,
											"end": 5922,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5911,
											"end": 5914,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5904,
											"end": 5923,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 5960,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5951,
											"end": 5954,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5947,
											"end": 5961,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5932,
											"end": 5961,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5932,
											"end": 5961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5798,
											"end": 5967,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5798,
											"end": 5967,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5798,
											"end": 5967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5798,
											"end": 5967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5798,
											"end": 5967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5973,
											"end": 6136,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 5973,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6113,
											"end": 6128,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F7420746865206F776E657200000000000000000000000000000000000000"
										},
										{
											"begin": 6109,
											"end": 6110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6101,
											"end": 6107,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6097,
											"end": 6111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6090,
											"end": 6129,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5973,
											"end": 6136,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5973,
											"end": 6136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6142,
											"end": 6508,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 6142,
											"end": 6508,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6284,
											"end": 6287,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 6369,
											"end": 6371,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 6364,
											"end": 6367,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6305,
											"end": 6372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 6305,
											"end": 6372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6305,
											"end": 6372,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 6305,
											"end": 6372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6298,
											"end": 6372,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6298,
											"end": 6372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6381,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 6470,
											"end": 6473,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6381,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 6381,
											"end": 6474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6381,
											"end": 6474,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 6381,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6499,
											"end": 6501,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6490,
											"end": 6502,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6483,
											"end": 6502,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6483,
											"end": 6502,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6142,
											"end": 6508,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6142,
											"end": 6508,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6142,
											"end": 6508,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6142,
											"end": 6508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6514,
											"end": 6933,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 6514,
											"end": 6933,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6680,
											"end": 6684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6718,
											"end": 6720,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6707,
											"end": 6716,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6703,
											"end": 6721,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6695,
											"end": 6721,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6695,
											"end": 6721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6767,
											"end": 6776,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6761,
											"end": 6765,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6757,
											"end": 6777,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6753,
											"end": 6754,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6742,
											"end": 6751,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6738,
											"end": 6755,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6731,
											"end": 6778,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6795,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 6921,
											"end": 6925,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6795,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 6795,
											"end": 6926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6795,
											"end": 6926,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 6795,
											"end": 6926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6787,
											"end": 6926,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6787,
											"end": 6926,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6514,
											"end": 6933,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6514,
											"end": 6933,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6514,
											"end": 6933,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6514,
											"end": 6933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6939,
											"end": 7186,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 6939,
											"end": 7186,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7079,
											"end": 7113,
											"name": "PUSH",
											"source": 7,
											"value": "56657374696E67207363686564756C6520616C72656164792065786973747320"
										},
										{
											"begin": 7075,
											"end": 7076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7067,
											"end": 7073,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7063,
											"end": 7077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7056,
											"end": 7114,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7148,
											"end": 7178,
											"name": "PUSH",
											"source": 7,
											"value": "5B696E2063726561746556657374696E675363686564756C6528295D00000000"
										},
										{
											"begin": 7143,
											"end": 7145,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7135,
											"end": 7141,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7146,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7124,
											"end": 7179,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6939,
											"end": 7186,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6939,
											"end": 7186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7192,
											"end": 7558,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 7192,
											"end": 7558,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7334,
											"end": 7337,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7355,
											"end": 7422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 7419,
											"end": 7421,
											"name": "PUSH",
											"source": 7,
											"value": "3C"
										},
										{
											"begin": 7414,
											"end": 7417,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7355,
											"end": 7422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 7355,
											"end": 7422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7355,
											"end": 7422,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 7355,
											"end": 7422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7348,
											"end": 7422,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7348,
											"end": 7422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 7520,
											"end": 7523,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 7431,
											"end": 7524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7524,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 7431,
											"end": 7524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7549,
											"end": 7551,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7547,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7540,
											"end": 7552,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7533,
											"end": 7552,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7533,
											"end": 7552,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7192,
											"end": 7558,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7192,
											"end": 7558,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7192,
											"end": 7558,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7192,
											"end": 7558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7564,
											"end": 7983,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 7564,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7730,
											"end": 7734,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7770,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7757,
											"end": 7766,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7753,
											"end": 7771,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7745,
											"end": 7771,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7745,
											"end": 7771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7817,
											"end": 7826,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7811,
											"end": 7815,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 7827,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7803,
											"end": 7804,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7792,
											"end": 7801,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7788,
											"end": 7805,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7781,
											"end": 7828,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7845,
											"end": 7976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 7971,
											"end": 7975,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7845,
											"end": 7976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 7845,
											"end": 7976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7845,
											"end": 7976,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 7845,
											"end": 7976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7837,
											"end": 7976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7837,
											"end": 7976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7564,
											"end": 7983,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7564,
											"end": 7983,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7564,
											"end": 7983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7564,
											"end": 7983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 8231,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 7989,
											"end": 8231,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8129,
											"end": 8163,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C69642076657374696E6720706172616D6574657273205B696E2063"
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8117,
											"end": 8123,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8127,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8106,
											"end": 8164,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8198,
											"end": 8223,
											"name": "PUSH",
											"source": 7,
											"value": "726561746556657374696E675363686564756C6528295D000000000000000000"
										},
										{
											"begin": 8193,
											"end": 8195,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8185,
											"end": 8191,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8181,
											"end": 8196,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8174,
											"end": 8224,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 8231,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 8231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8237,
											"end": 8603,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 8237,
											"end": 8603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8379,
											"end": 8382,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8400,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 8464,
											"end": 8466,
											"name": "PUSH",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 8459,
											"end": 8462,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8400,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 8400,
											"end": 8467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8400,
											"end": 8467,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 8400,
											"end": 8467,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8393,
											"end": 8467,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8393,
											"end": 8467,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8476,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 8565,
											"end": 8568,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8476,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 8476,
											"end": 8569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8476,
											"end": 8569,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 8476,
											"end": 8569,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8594,
											"end": 8596,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8589,
											"end": 8592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8585,
											"end": 8597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8237,
											"end": 8603,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8237,
											"end": 8603,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8237,
											"end": 8603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8237,
											"end": 8603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8609,
											"end": 9028,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 8609,
											"end": 9028,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8775,
											"end": 8779,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8813,
											"end": 8815,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8802,
											"end": 8811,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8798,
											"end": 8816,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8790,
											"end": 8816,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8790,
											"end": 8816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8862,
											"end": 8871,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8856,
											"end": 8860,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8852,
											"end": 8872,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8848,
											"end": 8849,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8837,
											"end": 8846,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8833,
											"end": 8850,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8826,
											"end": 8873,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8890,
											"end": 9021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 9016,
											"end": 9020,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8890,
											"end": 9021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 8890,
											"end": 9021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8890,
											"end": 9021,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 8890,
											"end": 9021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8882,
											"end": 9021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8882,
											"end": 9021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8609,
											"end": 9028,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8609,
											"end": 9028,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8609,
											"end": 9028,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8609,
											"end": 9028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9034,
											"end": 9797,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 9034,
											"end": 9797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9261,
											"end": 9265,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9299,
											"end": 9302,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 9288,
											"end": 9297,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9284,
											"end": 9303,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9276,
											"end": 9303,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9276,
											"end": 9303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9313,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 9381,
											"end": 9382,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9370,
											"end": 9379,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9366,
											"end": 9383,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9357,
											"end": 9363,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 9313,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 9313,
											"end": 9384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9313,
											"end": 9384,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 9313,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 9462,
											"end": 9464,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9451,
											"end": 9460,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9447,
											"end": 9465,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9438,
											"end": 9444,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 9394,
											"end": 9466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9466,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 9394,
											"end": 9466,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9476,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 9544,
											"end": 9546,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9533,
											"end": 9542,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9529,
											"end": 9547,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9526,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 9476,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 9476,
											"end": 9548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9476,
											"end": 9548,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 9476,
											"end": 9548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9558,
											"end": 9630,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 9626,
											"end": 9628,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9615,
											"end": 9624,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9611,
											"end": 9629,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9602,
											"end": 9608,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9558,
											"end": 9630,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 9558,
											"end": 9630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9558,
											"end": 9630,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 9558,
											"end": 9630,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9640,
											"end": 9713,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 9708,
											"end": 9711,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 9697,
											"end": 9706,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9693,
											"end": 9712,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9684,
											"end": 9690,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9640,
											"end": 9713,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 9640,
											"end": 9713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9640,
											"end": 9713,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 9640,
											"end": 9713,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9723,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 9785,
											"end": 9788,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 9774,
											"end": 9783,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9770,
											"end": 9789,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9761,
											"end": 9767,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9723,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 9723,
											"end": 9790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9723,
											"end": 9790,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 9723,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9034,
											"end": 9797,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 9034,
											"end": 9797,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 9034,
											"end": 9797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9034,
											"end": 9797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9034,
											"end": 9797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9034,
											"end": 9797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9034,
											"end": 9797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9034,
											"end": 9797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9034,
											"end": 9797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9034,
											"end": 9797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9803,
											"end": 10036,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 9803,
											"end": 10036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9943,
											"end": 9977,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F2076657374696E67207363686564756C6520666F756E64205B696E207265"
										},
										{
											"begin": 9939,
											"end": 9940,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9931,
											"end": 9937,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9927,
											"end": 9941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9920,
											"end": 9978,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10012,
											"end": 10028,
											"name": "PUSH",
											"source": 7,
											"value": "6C65617365546F6B656E7328295D000000000000000000000000000000000000"
										},
										{
											"begin": 10007,
											"end": 10009,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9999,
											"end": 10005,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9995,
											"end": 10010,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9988,
											"end": 10029,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9803,
											"end": 10036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9803,
											"end": 10036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10408,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 10042,
											"end": 10408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10184,
											"end": 10187,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10205,
											"end": 10272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 10269,
											"end": 10271,
											"name": "PUSH",
											"source": 7,
											"value": "2E"
										},
										{
											"begin": 10264,
											"end": 10267,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10205,
											"end": 10272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 10205,
											"end": 10272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10205,
											"end": 10272,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 10205,
											"end": 10272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10198,
											"end": 10272,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10198,
											"end": 10272,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10281,
											"end": 10374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 10370,
											"end": 10373,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10281,
											"end": 10374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 10281,
											"end": 10374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10281,
											"end": 10374,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 10281,
											"end": 10374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10399,
											"end": 10401,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10394,
											"end": 10397,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10390,
											"end": 10402,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10383,
											"end": 10402,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10383,
											"end": 10402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10408,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10408,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10408,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10833,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 10414,
											"end": 10833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10580,
											"end": 10584,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10618,
											"end": 10620,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10607,
											"end": 10616,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10603,
											"end": 10621,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10595,
											"end": 10621,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10595,
											"end": 10621,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10667,
											"end": 10676,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10661,
											"end": 10665,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10657,
											"end": 10677,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10653,
											"end": 10654,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10642,
											"end": 10651,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10638,
											"end": 10655,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10631,
											"end": 10678,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10695,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 10821,
											"end": 10825,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10695,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 10695,
											"end": 10826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10695,
											"end": 10826,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 10695,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10687,
											"end": 10826,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10687,
											"end": 10826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10833,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10833,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10833,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10839,
											"end": 11071,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 10839,
											"end": 11071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10979,
											"end": 11013,
											"name": "PUSH",
											"source": 7,
											"value": "56657374696E67207363686564756C65207265766F6B6564205B696E2072656C"
										},
										{
											"begin": 10975,
											"end": 10976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10967,
											"end": 10973,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10963,
											"end": 10977,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10956,
											"end": 11014,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11048,
											"end": 11063,
											"name": "PUSH",
											"source": 7,
											"value": "65617365546F6B656E7328295D00000000000000000000000000000000000000"
										},
										{
											"begin": 11043,
											"end": 11045,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11035,
											"end": 11041,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11031,
											"end": 11046,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11024,
											"end": 11064,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10839,
											"end": 11071,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10839,
											"end": 11071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11077,
											"end": 11443,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 11077,
											"end": 11443,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11219,
											"end": 11222,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 11304,
											"end": 11306,
											"name": "PUSH",
											"source": 7,
											"value": "2D"
										},
										{
											"begin": 11299,
											"end": 11302,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11240,
											"end": 11307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 11240,
											"end": 11307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11240,
											"end": 11307,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 11240,
											"end": 11307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11233,
											"end": 11307,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11233,
											"end": 11307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11316,
											"end": 11409,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 11405,
											"end": 11408,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11316,
											"end": 11409,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 11316,
											"end": 11409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11316,
											"end": 11409,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 11316,
											"end": 11409,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11434,
											"end": 11436,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11429,
											"end": 11432,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11425,
											"end": 11437,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11418,
											"end": 11437,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11418,
											"end": 11437,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11077,
											"end": 11443,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11077,
											"end": 11443,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11077,
											"end": 11443,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11077,
											"end": 11443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11449,
											"end": 11868,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 11449,
											"end": 11868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11615,
											"end": 11619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11653,
											"end": 11655,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11642,
											"end": 11651,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11638,
											"end": 11656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11630,
											"end": 11656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11630,
											"end": 11656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11702,
											"end": 11711,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11696,
											"end": 11700,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11692,
											"end": 11712,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11688,
											"end": 11689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11677,
											"end": 11686,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11673,
											"end": 11690,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11666,
											"end": 11713,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11730,
											"end": 11861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 11856,
											"end": 11860,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11730,
											"end": 11861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 11730,
											"end": 11861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11730,
											"end": 11861,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 11730,
											"end": 11861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11722,
											"end": 11861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11722,
											"end": 11861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11449,
											"end": 11868,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11449,
											"end": 11868,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11449,
											"end": 11868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11449,
											"end": 11868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11874,
											"end": 12112,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 11874,
											"end": 12112,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12014,
											"end": 12048,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F20746F6B656E73206172652063757272656E746C7920766573746564205B"
										},
										{
											"begin": 12010,
											"end": 12011,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12002,
											"end": 12008,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11998,
											"end": 12012,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11991,
											"end": 12049,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12083,
											"end": 12104,
											"name": "PUSH",
											"source": 7,
											"value": "696E2072656C65617365546F6B656E7328295D00000000000000000000000000"
										},
										{
											"begin": 12078,
											"end": 12080,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12070,
											"end": 12076,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12066,
											"end": 12081,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12059,
											"end": 12105,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11874,
											"end": 12112,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11874,
											"end": 12112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12118,
											"end": 12484,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 12118,
											"end": 12484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12260,
											"end": 12263,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12281,
											"end": 12348,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 12345,
											"end": 12347,
											"name": "PUSH",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 12340,
											"end": 12343,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12281,
											"end": 12348,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 12281,
											"end": 12348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12281,
											"end": 12348,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 12281,
											"end": 12348,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12274,
											"end": 12348,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12274,
											"end": 12348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12357,
											"end": 12450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 12446,
											"end": 12449,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12357,
											"end": 12450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 12357,
											"end": 12450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12357,
											"end": 12450,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 12357,
											"end": 12450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12475,
											"end": 12477,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12470,
											"end": 12473,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12466,
											"end": 12478,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12459,
											"end": 12478,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12459,
											"end": 12478,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12118,
											"end": 12484,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12118,
											"end": 12484,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12118,
											"end": 12484,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12118,
											"end": 12484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12490,
											"end": 12909,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 12490,
											"end": 12909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12656,
											"end": 12660,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12694,
											"end": 12696,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12683,
											"end": 12692,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12679,
											"end": 12697,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12671,
											"end": 12697,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12671,
											"end": 12697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12743,
											"end": 12752,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12737,
											"end": 12741,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12733,
											"end": 12753,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12729,
											"end": 12730,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12718,
											"end": 12727,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12714,
											"end": 12731,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12707,
											"end": 12754,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12771,
											"end": 12902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 12897,
											"end": 12901,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12771,
											"end": 12902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 12771,
											"end": 12902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12771,
											"end": 12902,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 12771,
											"end": 12902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12763,
											"end": 12902,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12763,
											"end": 12902,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12490,
											"end": 12909,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12490,
											"end": 12909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12490,
											"end": 12909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12490,
											"end": 12909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12915,
											"end": 13247,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 12915,
											"end": 13247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13036,
											"end": 13040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13074,
											"end": 13076,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13063,
											"end": 13072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13059,
											"end": 13077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13051,
											"end": 13077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13051,
											"end": 13077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13087,
											"end": 13158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 13155,
											"end": 13156,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13144,
											"end": 13153,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13140,
											"end": 13157,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13131,
											"end": 13137,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13087,
											"end": 13158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 13087,
											"end": 13158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13087,
											"end": 13158,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 13087,
											"end": 13158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13168,
											"end": 13240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 13236,
											"end": 13238,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13225,
											"end": 13234,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13221,
											"end": 13239,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13212,
											"end": 13218,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13168,
											"end": 13240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 13168,
											"end": 13240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13168,
											"end": 13240,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 13168,
											"end": 13240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12915,
											"end": 13247,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 12915,
											"end": 13247,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12915,
											"end": 13247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12915,
											"end": 13247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12915,
											"end": 13247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12915,
											"end": 13247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13253,
											"end": 13390,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 13253,
											"end": 13390,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13307,
											"end": 13312,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13338,
											"end": 13344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13332,
											"end": 13345,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13323,
											"end": 13345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13323,
											"end": 13345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13354,
											"end": 13384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 13378,
											"end": 13383,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13354,
											"end": 13384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 13354,
											"end": 13384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13354,
											"end": 13384,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 13354,
											"end": 13384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13253,
											"end": 13390,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13253,
											"end": 13390,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13253,
											"end": 13390,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13253,
											"end": 13390,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13253,
											"end": 13390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13396,
											"end": 13741,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 13396,
											"end": 13741,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13463,
											"end": 13469,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13512,
											"end": 13514,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13500,
											"end": 13509,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13491,
											"end": 13498,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13487,
											"end": 13510,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13483,
											"end": 13515,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 13480,
											"end": 13599,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13480,
											"end": 13599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 13480,
											"end": 13599,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13518,
											"end": 13597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 13518,
											"end": 13597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 13518,
											"end": 13597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13518,
											"end": 13597,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 13518,
											"end": 13597,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13480,
											"end": 13599,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 13480,
											"end": 13599,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13638,
											"end": 13639,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13663,
											"end": 13724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 13716,
											"end": 13723,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13707,
											"end": 13713,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13696,
											"end": 13705,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13692,
											"end": 13714,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13663,
											"end": 13724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 13663,
											"end": 13724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13663,
											"end": 13724,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 13663,
											"end": 13724,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13653,
											"end": 13724,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13653,
											"end": 13724,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13609,
											"end": 13734,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13396,
											"end": 13741,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13396,
											"end": 13741,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13396,
											"end": 13741,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13396,
											"end": 13741,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13396,
											"end": 13741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13747,
											"end": 13993,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 13747,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13887,
											"end": 13921,
											"name": "PUSH",
											"source": 7,
											"value": "56657374696E67207363686564756C65206E6F74207265766F6361626C65205B"
										},
										{
											"begin": 13883,
											"end": 13884,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13875,
											"end": 13881,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13871,
											"end": 13885,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13864,
											"end": 13922,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13956,
											"end": 13985,
											"name": "PUSH",
											"source": 7,
											"value": "696E207265766F6B6556657374696E675363686564756C6528295D0000000000"
										},
										{
											"begin": 13951,
											"end": 13953,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13943,
											"end": 13949,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13939,
											"end": 13954,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13932,
											"end": 13986,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13747,
											"end": 13993,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13747,
											"end": 13993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13999,
											"end": 14365,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 13999,
											"end": 14365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14141,
											"end": 14144,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14162,
											"end": 14229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 14226,
											"end": 14228,
											"name": "PUSH",
											"source": 7,
											"value": "3B"
										},
										{
											"begin": 14221,
											"end": 14224,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14162,
											"end": 14229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 14162,
											"end": 14229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14162,
											"end": 14229,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 14162,
											"end": 14229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14155,
											"end": 14229,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14155,
											"end": 14229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14238,
											"end": 14331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 14327,
											"end": 14330,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14238,
											"end": 14331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 14238,
											"end": 14331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14238,
											"end": 14331,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 14238,
											"end": 14331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14356,
											"end": 14358,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14354,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14347,
											"end": 14359,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14340,
											"end": 14359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14340,
											"end": 14359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13999,
											"end": 14365,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13999,
											"end": 14365,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13999,
											"end": 14365,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13999,
											"end": 14365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14371,
											"end": 14790,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 14371,
											"end": 14790,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14537,
											"end": 14541,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14575,
											"end": 14577,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14564,
											"end": 14573,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14560,
											"end": 14578,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14552,
											"end": 14578,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14552,
											"end": 14578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14624,
											"end": 14633,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14618,
											"end": 14622,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14614,
											"end": 14634,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14610,
											"end": 14611,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14599,
											"end": 14608,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14595,
											"end": 14612,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14588,
											"end": 14635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14652,
											"end": 14783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 14778,
											"end": 14782,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14652,
											"end": 14783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 14652,
											"end": 14783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14652,
											"end": 14783,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 14652,
											"end": 14783,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14644,
											"end": 14783,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14644,
											"end": 14783,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14371,
											"end": 14790,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14371,
											"end": 14790,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14371,
											"end": 14790,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14371,
											"end": 14790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14796,
											"end": 15044,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 14796,
											"end": 15044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14936,
											"end": 14970,
											"name": "PUSH",
											"source": 7,
											"value": "56657374696E67207363686564756C6520616C7265616479207265766F6B6564"
										},
										{
											"begin": 14932,
											"end": 14933,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14924,
											"end": 14930,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14920,
											"end": 14934,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14913,
											"end": 14971,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15005,
											"end": 15036,
											"name": "PUSH",
											"source": 7,
											"value": "205B696E207265766F6B6556657374696E675363686564756C6528295D000000"
										},
										{
											"begin": 15000,
											"end": 15002,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14992,
											"end": 14998,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14988,
											"end": 15003,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14981,
											"end": 15037,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14796,
											"end": 15044,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14796,
											"end": 15044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15050,
											"end": 15416,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 15050,
											"end": 15416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15192,
											"end": 15195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15213,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 15277,
											"end": 15279,
											"name": "PUSH",
											"source": 7,
											"value": "3D"
										},
										{
											"begin": 15272,
											"end": 15275,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15213,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 15213,
											"end": 15280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15213,
											"end": 15280,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 15213,
											"end": 15280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15206,
											"end": 15280,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15206,
											"end": 15280,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15289,
											"end": 15382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 15378,
											"end": 15381,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15289,
											"end": 15382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 15289,
											"end": 15382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15289,
											"end": 15382,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 15289,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15407,
											"end": 15409,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15402,
											"end": 15405,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15398,
											"end": 15410,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15391,
											"end": 15410,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15391,
											"end": 15410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15050,
											"end": 15416,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15050,
											"end": 15416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15050,
											"end": 15416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15050,
											"end": 15416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15422,
											"end": 15841,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 15422,
											"end": 15841,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15588,
											"end": 15592,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15626,
											"end": 15628,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15615,
											"end": 15624,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15611,
											"end": 15629,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15603,
											"end": 15629,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15603,
											"end": 15629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15675,
											"end": 15684,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15669,
											"end": 15673,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15665,
											"end": 15685,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15661,
											"end": 15662,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15650,
											"end": 15659,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15646,
											"end": 15663,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15639,
											"end": 15686,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15703,
											"end": 15834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 15829,
											"end": 15833,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15703,
											"end": 15834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 15703,
											"end": 15834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15703,
											"end": 15834,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 15703,
											"end": 15834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15695,
											"end": 15834,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15695,
											"end": 15834,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15422,
											"end": 15841,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15422,
											"end": 15841,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15422,
											"end": 15841,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15422,
											"end": 15841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15847,
											"end": 15990,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 15847,
											"end": 15990,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15904,
											"end": 15909,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15935,
											"end": 15941,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15929,
											"end": 15942,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 15920,
											"end": 15942,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15920,
											"end": 15942,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15951,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 15978,
											"end": 15983,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15951,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 15951,
											"end": 15984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15951,
											"end": 15984,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 15951,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15847,
											"end": 15990,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15847,
											"end": 15990,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15847,
											"end": 15990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15847,
											"end": 15990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15847,
											"end": 15990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15996,
											"end": 16347,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 15996,
											"end": 16347,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16066,
											"end": 16072,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16115,
											"end": 16117,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16103,
											"end": 16112,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16094,
											"end": 16101,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16090,
											"end": 16113,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16086,
											"end": 16118,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 16083,
											"end": 16202,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16083,
											"end": 16202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 16083,
											"end": 16202,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16121,
											"end": 16200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 16121,
											"end": 16200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 16121,
											"end": 16200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16121,
											"end": 16200,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 16121,
											"end": 16200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16083,
											"end": 16202,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 16083,
											"end": 16202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16241,
											"end": 16242,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16266,
											"end": 16330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 16322,
											"end": 16329,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16313,
											"end": 16319,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16302,
											"end": 16311,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16298,
											"end": 16320,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16266,
											"end": 16330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 16266,
											"end": 16330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16266,
											"end": 16330,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 16266,
											"end": 16330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16256,
											"end": 16330,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16256,
											"end": 16330,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16212,
											"end": 16340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15996,
											"end": 16347,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15996,
											"end": 16347,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15996,
											"end": 16347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15996,
											"end": 16347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15996,
											"end": 16347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16353,
											"end": 16533,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 16353,
											"end": 16533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16401,
											"end": 16478,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16398,
											"end": 16399,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16391,
											"end": 16479,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16498,
											"end": 16502,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 16495,
											"end": 16496,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 16488,
											"end": 16503,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16522,
											"end": 16526,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 16519,
											"end": 16520,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16512,
											"end": 16527,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 16539,
											"end": 16730,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 16539,
											"end": 16730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16579,
											"end": 16582,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16598,
											"end": 16618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 16616,
											"end": 16617,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16598,
											"end": 16618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 16598,
											"end": 16618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16598,
											"end": 16618,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 16598,
											"end": 16618,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16593,
											"end": 16618,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16593,
											"end": 16618,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16632,
											"end": 16652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 16650,
											"end": 16651,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16632,
											"end": 16652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 16632,
											"end": 16652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16632,
											"end": 16652,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 16632,
											"end": 16652,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16627,
											"end": 16652,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16627,
											"end": 16652,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16675,
											"end": 16676,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16672,
											"end": 16673,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16668,
											"end": 16677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16661,
											"end": 16677,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16661,
											"end": 16677,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16696,
											"end": 16699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16693,
											"end": 16694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16690,
											"end": 16700,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 16687,
											"end": 16723,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16687,
											"end": 16723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 16687,
											"end": 16723,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16703,
											"end": 16721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 16703,
											"end": 16721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 16703,
											"end": 16721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16703,
											"end": 16721,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 16703,
											"end": 16721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16687,
											"end": 16723,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 16687,
											"end": 16723,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16539,
											"end": 16730,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16539,
											"end": 16730,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16539,
											"end": 16730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16539,
											"end": 16730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16539,
											"end": 16730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16736,
											"end": 16930,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 16736,
											"end": 16930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16776,
											"end": 16780,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16796,
											"end": 16816,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 16814,
											"end": 16815,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16796,
											"end": 16816,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 16796,
											"end": 16816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16796,
											"end": 16816,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 16796,
											"end": 16816,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16791,
											"end": 16816,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16791,
											"end": 16816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16830,
											"end": 16850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 16848,
											"end": 16849,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16830,
											"end": 16850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 16830,
											"end": 16850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16830,
											"end": 16850,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 16830,
											"end": 16850,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16825,
											"end": 16850,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16825,
											"end": 16850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16874,
											"end": 16875,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16871,
											"end": 16872,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16867,
											"end": 16876,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16859,
											"end": 16876,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16859,
											"end": 16876,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16898,
											"end": 16899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16892,
											"end": 16896,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16889,
											"end": 16900,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 16886,
											"end": 16923,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16886,
											"end": 16923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 16886,
											"end": 16923,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16903,
											"end": 16921,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 16903,
											"end": 16921,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 16903,
											"end": 16921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16903,
											"end": 16921,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 16903,
											"end": 16921,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16886,
											"end": 16923,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 16886,
											"end": 16923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16736,
											"end": 16930,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16736,
											"end": 16930,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16736,
											"end": 16930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16736,
											"end": 16930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16736,
											"end": 16930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16936,
											"end": 17116,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 16936,
											"end": 17116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16984,
											"end": 17061,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16981,
											"end": 16982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16974,
											"end": 17062,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17081,
											"end": 17085,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 17078,
											"end": 17079,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 17071,
											"end": 17086,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17105,
											"end": 17109,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 17102,
											"end": 17103,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17095,
											"end": 17110,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17122,
											"end": 17307,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 17122,
											"end": 17307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17162,
											"end": 17163,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17179,
											"end": 17199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 17197,
											"end": 17198,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17179,
											"end": 17199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 17179,
											"end": 17199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17179,
											"end": 17199,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 17179,
											"end": 17199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17174,
											"end": 17199,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17174,
											"end": 17199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17213,
											"end": 17233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 17231,
											"end": 17232,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17213,
											"end": 17233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 17213,
											"end": 17233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17213,
											"end": 17233,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 17213,
											"end": 17233,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17208,
											"end": 17233,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17208,
											"end": 17233,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17252,
											"end": 17253,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17242,
											"end": 17277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 17242,
											"end": 17277,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17257,
											"end": 17275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 17257,
											"end": 17275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 17257,
											"end": 17275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17257,
											"end": 17275,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 17257,
											"end": 17275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17242,
											"end": 17277,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 17242,
											"end": 17277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17299,
											"end": 17300,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17296,
											"end": 17297,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17292,
											"end": 17301,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 17287,
											"end": 17301,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17287,
											"end": 17301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17122,
											"end": 17307,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17122,
											"end": 17307,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17122,
											"end": 17307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17122,
											"end": 17307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17122,
											"end": 17307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17313,
											"end": 17723,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 17313,
											"end": 17723,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17353,
											"end": 17360,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17376,
											"end": 17396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 17394,
											"end": 17395,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17376,
											"end": 17396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 17376,
											"end": 17396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17376,
											"end": 17396,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 17376,
											"end": 17396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17371,
											"end": 17396,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17371,
											"end": 17396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17410,
											"end": 17430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 17428,
											"end": 17429,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17410,
											"end": 17430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 17410,
											"end": 17430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17410,
											"end": 17430,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 17410,
											"end": 17430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17405,
											"end": 17430,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17405,
											"end": 17430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17465,
											"end": 17466,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17462,
											"end": 17463,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17458,
											"end": 17467,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 17487,
											"end": 17517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 17505,
											"end": 17516,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17487,
											"end": 17517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 17487,
											"end": 17517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17487,
											"end": 17517,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 17487,
											"end": 17517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17476,
											"end": 17517,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17476,
											"end": 17517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17666,
											"end": 17667,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17657,
											"end": 17664,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17653,
											"end": 17668,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 17650,
											"end": 17651,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17647,
											"end": 17669,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 17627,
											"end": 17628,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17620,
											"end": 17629,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17600,
											"end": 17683,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 17577,
											"end": 17716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 17577,
											"end": 17716,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17696,
											"end": 17714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 17696,
											"end": 17714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 17696,
											"end": 17714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17696,
											"end": 17714,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 17696,
											"end": 17714,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17577,
											"end": 17716,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 17577,
											"end": 17716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17361,
											"end": 17723,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17313,
											"end": 17723,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17313,
											"end": 17723,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17313,
											"end": 17723,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17313,
											"end": 17723,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17313,
											"end": 17723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"vesting_tokens_sushmita.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"calculateReleasableTokens(address)": "7dc8a8aa",
							"createVestingSchedule(address,uint256,uint256,uint256,uint256,uint256,bool)": "4495e827",
							"getBalance(address)": "f8b2cb4f",
							"getTime()": "557ed1ba",
							"owner()": "8da5cb5b",
							"releaseTokens()": "a96f8668",
							"revokeVestingSchedule(address)": "f035a272",
							"token()": "fc0c546a",
							"vestingSchedules(address)": "fdb20ccb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"VestingRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cliffDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vestingDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slicePeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"name\":\"VestingScheduleCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"calculateReleasableTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliffDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slicePeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"name\":\"createVestingSchedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"revokeVestingSchedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestingSchedules\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliffDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slicePeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"vestedTokens\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"vesting_tokens_sushmita.sol\":\"VestingContract\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"vesting_tokens_sushmita.sol\":{\"keccak256\":\"0xd17d3b30a7dc95d0a6e269a6207d611e0d5c027d9a293c036842fb87f14c336a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11e7351b8660e072f82c80d3802b873aaf8585bebc566a6b56f268f6ee304410\",\"dweb:/ipfs/QmPsCvyENGvCNoCfRnLdntqo1emT277dAFcLhNwhuA8Ach\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1106,
								"contract": "vesting_tokens_sushmita.sol:VestingContract",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1109,
								"contract": "vesting_tokens_sushmita.sol:VestingContract",
								"label": "token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(ERC20)651"
							},
							{
								"astId": 1131,
								"contract": "vesting_tokens_sushmita.sol:VestingContract",
								"label": "vestingSchedules",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(VestingSchedule)1126_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(ERC20)651": {
								"encoding": "inplace",
								"label": "contract ERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(VestingSchedule)1126_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct VestingContract.VestingSchedule)",
								"numberOfBytes": "32",
								"value": "t_struct(VestingSchedule)1126_storage"
							},
							"t_struct(VestingSchedule)1126_storage": {
								"encoding": "inplace",
								"label": "struct VestingContract.VestingSchedule",
								"members": [
									{
										"astId": 1111,
										"contract": "vesting_tokens_sushmita.sol:VestingContract",
										"label": "startTime",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1113,
										"contract": "vesting_tokens_sushmita.sol:VestingContract",
										"label": "cliffDuration",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1115,
										"contract": "vesting_tokens_sushmita.sol:VestingContract",
										"label": "vestingDuration",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1117,
										"contract": "vesting_tokens_sushmita.sol:VestingContract",
										"label": "slicePeriod",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1119,
										"contract": "vesting_tokens_sushmita.sol:VestingContract",
										"label": "totalAmount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1121,
										"contract": "vesting_tokens_sushmita.sol:VestingContract",
										"label": "revocable",
										"offset": 0,
										"slot": "5",
										"type": "t_bool"
									},
									{
										"astId": 1123,
										"contract": "vesting_tokens_sushmita.sol:VestingContract",
										"label": "vestedTokens",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 1125,
										"contract": "vesting_tokens_sushmita.sol:VestingContract",
										"label": "revoked",
										"offset": 0,
										"slot": "7",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1097
						]
					},
					"id": 1098,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 788,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1097,
							"linearizedBaseContracts": [
								1097
							],
							"name": "SafeMath",
							"nameLocation": "490:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "717:140:5",
										"statements": [
											{
												"id": 818,
												"nodeType": "UncheckedBlock",
												"src": "727:124:5",
												"statements": [
													{
														"assignments": [
															801
														],
														"declarations": [
															{
																"constant": false,
																"id": 801,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 818,
																"src": "751:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 800,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 805,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 802,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "763:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 803,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "767:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 806,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "786:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 807,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "790:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 813,
														"nodeType": "IfStatement",
														"src": "782:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 811,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 799,
															"id": 812,
															"nodeType": "Return",
															"src": "793:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 815,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "838:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 816,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 799,
														"id": 817,
														"nodeType": "Return",
														"src": "824:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "657:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "668:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:5"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "702:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 795,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "708:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:5"
									},
									"scope": 1097,
									"src": "641:216:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "1078:113:5",
										"statements": [
											{
												"id": 846,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 832,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 825,
																"src": "1116:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 833,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 823,
																"src": "1120:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 839,
														"nodeType": "IfStatement",
														"src": "1112:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 837,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 831,
															"id": 838,
															"nodeType": "Return",
															"src": "1123:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 841,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 823,
																		"src": "1168:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 842,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 825,
																		"src": "1172:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 844,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 831,
														"id": 845,
														"nodeType": "Return",
														"src": "1154:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:5",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "1018:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "1029:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:5"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "1063:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "1069:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:5"
									},
									"scope": 1097,
									"src": "1002:189:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "1415:417:5",
										"statements": [
											{
												"id": 888,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 860,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "1683:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 867,
														"nodeType": "IfStatement",
														"src": "1679:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 865,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 859,
															"id": 866,
															"nodeType": "Return",
															"src": "1691:16:5"
														}
													},
													{
														"assignments": [
															869
														],
														"declarations": [
															{
																"constant": false,
																"id": 869,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 888,
																"src": "1721:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 868,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 873,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 870,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "1733:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 871,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "1737:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 874,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 869,
																	"src": "1756:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 875,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "1760:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 877,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "1765:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 883,
														"nodeType": "IfStatement",
														"src": "1752:33:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 881,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 859,
															"id": 882,
															"nodeType": "Return",
															"src": "1768:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 885,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 869,
																	"src": "1813:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 886,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 859,
														"id": 887,
														"nodeType": "Return",
														"src": "1799:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "1355:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "1366:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:5"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "1400:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 855,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "1406:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:5"
									},
									"scope": 1097,
									"src": "1339:493:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "2057:114:5",
										"statements": [
											{
												"id": 916,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 902,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 895,
																"src": "2095:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 909,
														"nodeType": "IfStatement",
														"src": "2091:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 907,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 901,
															"id": 908,
															"nodeType": "Return",
															"src": "2103:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 911,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 893,
																		"src": "2148:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 912,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 895,
																		"src": "2152:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 914,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 901,
														"id": 915,
														"nodeType": "Return",
														"src": "2134:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "1997:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "2008:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:5"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "2042:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 897,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "2048:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:5"
									},
									"scope": 1097,
									"src": "1981:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "2406:114:5",
										"statements": [
											{
												"id": 944,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 930,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "2444:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 937,
														"nodeType": "IfStatement",
														"src": "2440:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 935,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 929,
															"id": 936,
															"nodeType": "Return",
															"src": "2452:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 939,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 921,
																		"src": "2497:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 940,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 923,
																		"src": "2501:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 942,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 929,
														"id": 943,
														"nodeType": "Return",
														"src": "2483:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "2346:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "2357:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:5"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "2391:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 925,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "2397:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:5"
									},
									"scope": 1097,
									"src": "2330:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "2822:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 956,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "2839:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 957,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "2843:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 955,
												"id": 959,
												"nodeType": "Return",
												"src": "2832:12:5"
											}
										]
									},
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "2768:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "2779:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:5"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "2813:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:5"
									},
									"scope": 1097,
									"src": "2755:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "3189:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 971,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "3206:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 972,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "3210:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 970,
												"id": 974,
												"nodeType": "Return",
												"src": "3199:12:5"
											}
										]
									},
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "3135:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "3146:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:5"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "3180:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:5"
									},
									"scope": 1097,
									"src": "3122:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "3532:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 986,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "3549:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 987,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "3553:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 985,
												"id": 989,
												"nodeType": "Return",
												"src": "3542:12:5"
											}
										]
									},
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3478:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3489:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:5"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3523:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:5"
									},
									"scope": 1097,
									"src": "3465:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "3917:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1001,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "3934:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1002,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "3938:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1000,
												"id": 1004,
												"nodeType": "Return",
												"src": "3927:12:5"
											}
										]
									},
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "3863:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "3874:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:5"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "3908:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:5"
									},
									"scope": 1097,
									"src": "3850:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "4466:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1016,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "4483:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1017,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "4487:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1015,
												"id": 1019,
												"nodeType": "Return",
												"src": "4476:12:5"
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "4412:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "4423:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:5"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "4457:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:5"
									},
									"scope": 1097,
									"src": "4399:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "5054:106:5",
										"statements": [
											{
												"id": 1044,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1034,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1026,
																		"src": "5096:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1035,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1024,
																		"src": "5101:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1037,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "5104:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1033,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1039,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1040,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "5138:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1041,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "5142:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1032,
														"id": 1043,
														"nodeType": "Return",
														"src": "5131:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "4972:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "4983:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "4994:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1027,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:5"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "5045:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:5"
									},
									"scope": 1097,
									"src": "4959:201:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "5739:105:5",
										"statements": [
											{
												"id": 1069,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1059,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1051,
																		"src": "5781:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1062,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "5788:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1058,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1064,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1065,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "5822:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1066,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1051,
																"src": "5826:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1057,
														"id": 1068,
														"nodeType": "Return",
														"src": "5815:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "5657:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "5668:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "5679:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1052,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:5"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "5730:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:5"
									},
									"scope": 1097,
									"src": "5644:200:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "6585:105:5",
										"statements": [
											{
												"id": 1094,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1084,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1076,
																		"src": "6627:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1087,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "6634:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1083,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1089,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1090,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1074,
																"src": "6668:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1091,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1076,
																"src": "6672:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1082,
														"id": 1093,
														"nodeType": "Return",
														"src": "6661:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1072,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "6503:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "6514:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "6525:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1077,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:5"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "6576:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:5"
									},
									"scope": 1097,
									"src": "6490:200:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1098,
							"src": "482:6210:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:5"
				},
				"id": 5
			},
			"vesting_tokens_sushmita.sol": {
				"ast": {
					"absolutePath": "vesting_tokens_sushmita.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"SafeMath": [
							1097
						],
						"VestingContract": [
							1524
						]
					},
					"id": 1525,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1099,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1100,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1525,
							"sourceUnit": 652,
							"src": "61:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1101,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1525,
							"sourceUnit": 1098,
							"src": "118:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "VestingContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1524,
							"linearizedBaseContracts": [
								1524
							],
							"name": "VestingContract",
							"nameLocation": "188:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1104,
									"libraryName": {
										"id": 1102,
										"name": "SafeMath",
										"nameLocations": [
											"217:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1097,
										"src": "217:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "211:27:6",
									"typeName": {
										"id": 1103,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "230:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 1106,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "261:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1524,
									"src": "246:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1105,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "246:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1109,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "286:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1524,
									"src": "273:18:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$651",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 1108,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1107,
											"name": "ERC20",
											"nameLocations": [
												"273:5:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 651,
											"src": "273:5:6"
										},
										"referencedDeclaration": 651,
										"src": "273:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$651",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "VestingContract.VestingSchedule",
									"id": 1126,
									"members": [
										{
											"constant": false,
											"id": 1111,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "342:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 1126,
											"src": "334:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1110,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "334:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1113,
											"mutability": "mutable",
											"name": "cliffDuration",
											"nameLocation": "370:13:6",
											"nodeType": "VariableDeclaration",
											"scope": 1126,
											"src": "362:21:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1112,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "362:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1115,
											"mutability": "mutable",
											"name": "vestingDuration",
											"nameLocation": "402:15:6",
											"nodeType": "VariableDeclaration",
											"scope": 1126,
											"src": "394:23:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1114,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "394:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1117,
											"mutability": "mutable",
											"name": "slicePeriod",
											"nameLocation": "436:11:6",
											"nodeType": "VariableDeclaration",
											"scope": 1126,
											"src": "428:19:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1116,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "428:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1119,
											"mutability": "mutable",
											"name": "totalAmount",
											"nameLocation": "466:11:6",
											"nodeType": "VariableDeclaration",
											"scope": 1126,
											"src": "458:19:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1118,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "458:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1121,
											"mutability": "mutable",
											"name": "revocable",
											"nameLocation": "493:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 1126,
											"src": "488:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1120,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "488:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1123,
											"mutability": "mutable",
											"name": "vestedTokens",
											"nameLocation": "521:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 1126,
											"src": "513:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1122,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "513:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1125,
											"mutability": "mutable",
											"name": "revoked",
											"nameLocation": "549:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 1126,
											"src": "544:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1124,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "544:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "VestingSchedule",
									"nameLocation": "307:15:6",
									"nodeType": "StructDefinition",
									"scope": 1524,
									"src": "300:264:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fdb20ccb",
									"id": 1131,
									"mutability": "mutable",
									"name": "vestingSchedules",
									"nameLocation": "615:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1524,
									"src": "572:59:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1126_storage_$",
										"typeString": "mapping(address => struct VestingContract.VestingSchedule)"
									},
									"typeName": {
										"id": 1130,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1127,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "580:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "572:35:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1126_storage_$",
											"typeString": "mapping(address => struct VestingContract.VestingSchedule)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1129,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1128,
												"name": "VestingSchedule",
												"nameLocations": [
													"591:15:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1126,
												"src": "591:15:6"
											},
											"referencedDeclaration": 1126,
											"src": "591:15:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage_ptr",
												"typeString": "struct VestingContract.VestingSchedule"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "bea02a5045606a667ff06eb235c005b4f95b55a10c174b5aae63ba6be2ae9808",
									"id": 1147,
									"name": "VestingScheduleCreated",
									"nameLocation": "646:22:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "695:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "679:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "679:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"indexed": false,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "725:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "717:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"indexed": false,
												"mutability": "mutable",
												"name": "cliffDuration",
												"nameLocation": "753:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "745:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"indexed": false,
												"mutability": "mutable",
												"name": "vestingDuration",
												"nameLocation": "785:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "777:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"indexed": false,
												"mutability": "mutable",
												"name": "slicePeriod",
												"nameLocation": "819:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "811:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalAmount",
												"nameLocation": "849:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "841:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "841:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"indexed": false,
												"mutability": "mutable",
												"name": "revocable",
												"nameLocation": "876:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "871:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1144,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "871:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "668:224:6"
									},
									"src": "640:253:6"
								},
								{
									"anonymous": false,
									"eventSelector": "c7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df93179",
									"id": 1153,
									"name": "TokensReleased",
									"nameLocation": "907:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "938:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "922:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "959:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "951:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:45:6"
									},
									"src": "901:66:6"
								},
								{
									"anonymous": false,
									"eventSelector": "68d870ac0aff3819234e8a1fc8f357b40d75212f2dc8594b97690fa205b3bab2",
									"id": 1157,
									"name": "VestingRevoked",
									"nameLocation": "981:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "1012:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "996:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "996:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "995:29:6"
									},
									"src": "975:50:6"
								},
								{
									"body": {
										"id": 1168,
										"nodeType": "Block",
										"src": "1054:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1160,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1073:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1077:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1073:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1162,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1106,
																"src": "1087:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1073:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420746865206f776e6572",
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1094:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															},
															"value": "Not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															}
														],
														"id": 1159,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1065:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1166,
												"nodeType": "ExpressionStatement",
												"src": "1065:45:6"
											},
											{
												"id": 1167,
												"nodeType": "PlaceholderStatement",
												"src": "1121:1:6"
											}
										]
									},
									"id": 1169,
									"name": "onlyOwner",
									"nameLocation": "1042:9:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1051:2:6"
									},
									"src": "1033:97:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "1184:148:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1174,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1217:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1221:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1217:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1176,
																	"name": "beneficiary",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1171,
																	"src": "1231:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1217:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1178,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1246:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1250:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1246:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1180,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1106,
																	"src": "1260:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1246:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1217:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74207468652062656e6566696369617279",
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1280:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f43d83e442323ed4c0e9969d06d8423c628c64523281b5ff2d2be91d861d5732",
																"typeString": "literal_string \"Not the beneficiary\""
															},
															"value": "Not the beneficiary"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f43d83e442323ed4c0e9969d06d8423c628c64523281b5ff2d2be91d861d5732",
																"typeString": "literal_string \"Not the beneficiary\""
															}
														],
														"id": 1173,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1195:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1195:117:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "1195:117:6"
											},
											{
												"id": 1186,
												"nodeType": "PlaceholderStatement",
												"src": "1323:1:6"
											}
										]
									},
									"id": 1188,
									"name": "onlyBeneficiary",
									"nameLocation": "1147:15:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "1171:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "1163:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1163:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1162:21:6"
									},
									"src": "1138:194:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "1366:62:6",
										"statements": [
											{
												"expression": {
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1194,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "1377:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1195,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1385:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1385:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1377:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "1377:18:6"
											},
											{
												"expression": {
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1199,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "1406:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$651",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1200,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "1414:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$651",
															"typeString": "contract ERC20"
														}
													},
													"src": "1406:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$651",
														"typeString": "contract ERC20"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "1406:14:6"
											}
										]
									},
									"id": 1204,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1358:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "1352:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$651",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"id": 1190,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1189,
														"name": "ERC20",
														"nameLocations": [
															"1352:5:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 651,
														"src": "1352:5:6"
													},
													"referencedDeclaration": 651,
													"src": "1352:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$651",
														"typeString": "contract ERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1351:14:6"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1366:0:6"
									},
									"scope": 1524,
									"src": "1340:88:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1297,
										"nodeType": "Block",
										"src": "1702:913:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1224,
																		"name": "vestingSchedules",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1131,
																		"src": "1735:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1126_storage_$",
																			"typeString": "mapping(address => struct VestingContract.VestingSchedule storage ref)"
																		}
																	},
																	"id": 1226,
																	"indexExpression": {
																		"id": 1225,
																		"name": "beneficiary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1206,
																		"src": "1752:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1735:29:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage",
																		"typeString": "struct VestingContract.VestingSchedule storage ref"
																	}
																},
																"id": 1227,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1765:9:6",
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1111,
																"src": "1735:39:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1778:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1735:44:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56657374696e67207363686564756c6520616c726561647920657869737473205b696e2063726561746556657374696e675363686564756c6528295d",
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1794:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bcc14aed11ccf054314d063261af3f30afd8d4635113ff9c4571c5a5464632f5",
																"typeString": "literal_string \"Vesting schedule already exists [in createVestingSchedule()]\""
															},
															"value": "Vesting schedule already exists [in createVestingSchedule()]"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bcc14aed11ccf054314d063261af3f30afd8d4635113ff9c4571c5a5464632f5",
																"typeString": "literal_string \"Vesting schedule already exists [in createVestingSchedule()]\""
															}
														],
														"id": 1223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1713:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1713:154:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1232,
												"nodeType": "ExpressionStatement",
												"src": "1713:154:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1234,
																	"name": "totalAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1216,
																	"src": "1900:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1914:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1900:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1237,
																	"name": "vestingDuration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1212,
																	"src": "1919:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1937:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1919:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1900:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642076657374696e6720706172616d6574657273205b696e2063726561746556657374696e675363686564756c6528295d",
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1953:57:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7396082dc6294442634f0de48aba0d988835ea8d6b07c9d734ff6fb82b9c2247",
																"typeString": "literal_string \"Invalid vesting parameters [in createVestingSchedule()]\""
															},
															"value": "Invalid vesting parameters [in createVestingSchedule()]"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7396082dc6294442634f0de48aba0d988835ea8d6b07c9d734ff6fb82b9c2247",
																"typeString": "literal_string \"Invalid vesting parameters [in createVestingSchedule()]\""
															}
														],
														"id": 1233,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1878:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1878:143:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "1878:143:6"
											},
											{
												"assignments": [
													1246
												],
												"declarations": [
													{
														"constant": false,
														"id": 1246,
														"mutability": "mutable",
														"name": "schedule",
														"nameLocation": "2058:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1297,
														"src": "2034:32:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage_ptr",
															"typeString": "struct VestingContract.VestingSchedule"
														},
														"typeName": {
															"id": 1245,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1244,
																"name": "VestingSchedule",
																"nameLocations": [
																	"2034:15:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1126,
																"src": "2034:15:6"
															},
															"referencedDeclaration": 1126,
															"src": "2034:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage_ptr",
																"typeString": "struct VestingContract.VestingSchedule"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1250,
												"initialValue": {
													"baseExpression": {
														"id": 1247,
														"name": "vestingSchedules",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "2069:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1126_storage_$",
															"typeString": "mapping(address => struct VestingContract.VestingSchedule storage ref)"
														}
													},
													"id": 1249,
													"indexExpression": {
														"id": 1248,
														"name": "beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "2086:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2069:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage",
														"typeString": "struct VestingContract.VestingSchedule storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2034:64:6"
											},
											{
												"expression": {
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1251,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "2109:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage_ptr",
																"typeString": "struct VestingContract.VestingSchedule storage pointer"
															}
														},
														"id": 1253,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2118:9:6",
														"memberName": "startTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1111,
														"src": "2109:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1254,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "2130:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2109:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "2109:30:6"
											},
											{
												"expression": {
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1257,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "2150:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage_ptr",
																"typeString": "struct VestingContract.VestingSchedule storage pointer"
															}
														},
														"id": 1259,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2159:13:6",
														"memberName": "cliffDuration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1113,
														"src": "2150:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1260,
														"name": "cliffDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "2175:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2150:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "2150:38:6"
											},
											{
												"expression": {
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1263,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "2199:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage_ptr",
																"typeString": "struct VestingContract.VestingSchedule storage pointer"
															}
														},
														"id": 1265,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2208:15:6",
														"memberName": "vestingDuration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1115,
														"src": "2199:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1266,
														"name": "vestingDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "2226:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2199:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "2199:42:6"
											},
											{
												"expression": {
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1269,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "2252:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage_ptr",
																"typeString": "struct VestingContract.VestingSchedule storage pointer"
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2261:11:6",
														"memberName": "slicePeriod",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1117,
														"src": "2252:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1272,
														"name": "slicePeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "2275:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2252:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "2252:34:6"
											},
											{
												"expression": {
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1275,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "2297:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage_ptr",
																"typeString": "struct VestingContract.VestingSchedule storage pointer"
															}
														},
														"id": 1277,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2306:11:6",
														"memberName": "totalAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1119,
														"src": "2297:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1278,
														"name": "totalAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "2320:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2297:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1280,
												"nodeType": "ExpressionStatement",
												"src": "2297:34:6"
											},
											{
												"expression": {
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1281,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "2342:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage_ptr",
																"typeString": "struct VestingContract.VestingSchedule storage pointer"
															}
														},
														"id": 1283,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2351:9:6",
														"memberName": "revocable",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1121,
														"src": "2342:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1284,
														"name": "revocable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "2363:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2342:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1286,
												"nodeType": "ExpressionStatement",
												"src": "2342:30:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1288,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "2427:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1289,
															"name": "startTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "2453:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1290,
															"name": "cliffDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "2477:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1291,
															"name": "vestingDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "2505:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1292,
															"name": "slicePeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "2535:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1293,
															"name": "totalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "2561:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1294,
															"name": "revocable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "2587:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1287,
														"name": "VestingScheduleCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "2390:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256,uint256,bool)"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2390:217:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1296,
												"nodeType": "EmitStatement",
												"src": "2385:222:6"
											}
										]
									},
									"functionSelector": "4495e827",
									"id": 1298,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1221,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1220,
												"name": "onlyOwner",
												"nameLocations": [
													"1692:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1169,
												"src": "1692:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1692:9:6"
										}
									],
									"name": "createVestingSchedule",
									"nameLocation": "1445:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "1485:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "1477:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1477:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "1515:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "1507:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1507:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "cliffDuration",
												"nameLocation": "1543:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "1535:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1535:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "vestingDuration",
												"nameLocation": "1575:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "1567:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "slicePeriod",
												"nameLocation": "1609:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "1601:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1601:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "totalAmount",
												"nameLocation": "1639:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "1631:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1631:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "revocable",
												"nameLocation": "1666:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "1661:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1661:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1466:216:6"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1702:0:6"
									},
									"scope": 1524,
									"src": "1436:1179:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1376,
										"nodeType": "Block",
										"src": "2741:793:6",
										"statements": [
											{
												"assignments": [
													1307
												],
												"declarations": [
													{
														"constant": false,
														"id": 1307,
														"mutability": "mutable",
														"name": "schedule",
														"nameLocation": "2775:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "2752:31:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VestingSchedule_$1126_memory_ptr",
															"typeString": "struct VestingContract.VestingSchedule"
														},
														"typeName": {
															"id": 1306,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1305,
																"name": "VestingSchedule",
																"nameLocations": [
																	"2752:15:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1126,
																"src": "2752:15:6"
															},
															"referencedDeclaration": 1126,
															"src": "2752:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage_ptr",
																"typeString": "struct VestingContract.VestingSchedule"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1311,
												"initialValue": {
													"baseExpression": {
														"id": 1308,
														"name": "vestingSchedules",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "2786:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1126_storage_$",
															"typeString": "mapping(address => struct VestingContract.VestingSchedule storage ref)"
														}
													},
													"id": 1310,
													"indexExpression": {
														"id": 1309,
														"name": "beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1300,
														"src": "2803:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2786:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage",
														"typeString": "struct VestingContract.VestingSchedule storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2752:63:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1312,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2832:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2838:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2832:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1317,
																	"name": "schedule",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1307,
																	"src": "2873:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VestingSchedule_$1126_memory_ptr",
																		"typeString": "struct VestingContract.VestingSchedule memory"
																	}
																},
																"id": 1318,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2882:13:6",
																"memberName": "cliffDuration",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1113,
																"src": "2873:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1314,
																	"name": "schedule",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1307,
																	"src": "2850:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VestingSchedule_$1126_memory_ptr",
																		"typeString": "struct VestingContract.VestingSchedule memory"
																	}
																},
																"id": 1315,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2859:9:6",
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1111,
																"src": "2850:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2869:3:6",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 961,
															"src": "2850:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2850:46:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2832:64:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1324,
												"nodeType": "IfStatement",
												"src": "2828:134:6",
												"trueBody": {
													"id": 1323,
													"nodeType": "Block",
													"src": "2898:64:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2920:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1304,
															"id": 1322,
															"nodeType": "Return",
															"src": "2913:8:6"
														}
													]
												}
											},
											{
												"assignments": [
													1326
												],
												"declarations": [
													{
														"constant": false,
														"id": 1326,
														"mutability": "mutable",
														"name": "elapsedSinceCliff",
														"nameLocation": "2982:17:6",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "2974:25:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1325,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2974:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1337,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1334,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "3060:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VestingSchedule_$1126_memory_ptr",
																	"typeString": "struct VestingContract.VestingSchedule memory"
																}
															},
															"id": 1335,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3069:13:6",
															"memberName": "cliffDuration",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1113,
															"src": "3060:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1330,
																		"name": "schedule",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1307,
																		"src": "3022:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_VestingSchedule_$1126_memory_ptr",
																			"typeString": "struct VestingContract.VestingSchedule memory"
																		}
																	},
																	"id": 1331,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3031:9:6",
																	"memberName": "startTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1111,
																	"src": "3022:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 1327,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3002:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3008:9:6",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3002:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3018:3:6",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 976,
																"src": "3002:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3002:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3042:3:6",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 976,
														"src": "3002:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3002:91:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2974:119:6"
											},
											{
												"assignments": [
													1339
												],
												"declarations": [
													{
														"constant": false,
														"id": 1339,
														"mutability": "mutable",
														"name": "totalVestingPeriods",
														"nameLocation": "3114:19:6",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "3106:27:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1338,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3106:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1346,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1343,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "3179:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VestingSchedule_$1126_memory_ptr",
																	"typeString": "struct VestingContract.VestingSchedule memory"
																}
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3188:11:6",
															"memberName": "slicePeriod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1117,
															"src": "3179:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1340,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "3136:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VestingSchedule_$1126_memory_ptr",
																	"typeString": "struct VestingContract.VestingSchedule memory"
																}
															},
															"id": 1341,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3145:15:6",
															"memberName": "vestingDuration",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1115,
															"src": "3136:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3161:3:6",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1006,
														"src": "3136:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3136:74:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3106:104:6"
											},
											{
												"assignments": [
													1348
												],
												"declarations": [
													{
														"constant": false,
														"id": 1348,
														"mutability": "mutable",
														"name": "vestedPeriods",
														"nameLocation": "3229:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "3221:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1347,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3221:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1354,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1351,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "3267:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VestingSchedule_$1126_memory_ptr",
																	"typeString": "struct VestingContract.VestingSchedule memory"
																}
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3276:11:6",
															"memberName": "slicePeriod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1117,
															"src": "3267:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1349,
															"name": "elapsedSinceCliff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "3245:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3263:3:6",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1006,
														"src": "3245:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3245:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3221:67:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1355,
														"name": "vestedPeriods",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1348,
														"src": "3305:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1356,
														"name": "totalVestingPeriods",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "3322:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3305:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1362,
												"nodeType": "IfStatement",
												"src": "3301:96:6",
												"trueBody": {
													"id": 1361,
													"nodeType": "Block",
													"src": "3343:54:6",
													"statements": [
														{
															"expression": {
																"expression": {
																	"id": 1358,
																	"name": "schedule",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1307,
																	"src": "3365:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VestingSchedule_$1126_memory_ptr",
																		"typeString": "struct VestingContract.VestingSchedule memory"
																	}
																},
																"id": 1359,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3374:11:6",
																"memberName": "totalAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1119,
																"src": "3365:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1304,
															"id": 1360,
															"nodeType": "Return",
															"src": "3358:27:6"
														}
													]
												}
											},
											{
												"assignments": [
													1364
												],
												"declarations": [
													{
														"constant": false,
														"id": 1364,
														"mutability": "mutable",
														"name": "vestingSlice",
														"nameLocation": "3417:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "3409:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1363,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3409:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1370,
												"initialValue": {
													"arguments": [
														{
															"id": 1368,
															"name": "totalVestingPeriods",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1339,
															"src": "3457:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1365,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "3432:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VestingSchedule_$1126_memory_ptr",
																	"typeString": "struct VestingContract.VestingSchedule memory"
																}
															},
															"id": 1366,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3441:11:6",
															"memberName": "totalAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1119,
															"src": "3432:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3453:3:6",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1006,
														"src": "3432:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3432:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3409:68:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1373,
															"name": "vestedPeriods",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1348,
															"src": "3512:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1371,
															"name": "vestingSlice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "3495:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3508:3:6",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 991,
														"src": "3495:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3495:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1304,
												"id": 1375,
												"nodeType": "Return",
												"src": "3488:38:6"
											}
										]
									},
									"functionSelector": "7dc8a8aa",
									"id": 1377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReleasableTokens",
									"nameLocation": "2632:25:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "2666:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "2658:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2657:21:6"
									},
									"returnParameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "2727:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:9:6"
									},
									"scope": 1524,
									"src": "2623:911:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1441,
										"nodeType": "Block",
										"src": "3576:631:6",
										"statements": [
											{
												"assignments": [
													1382
												],
												"declarations": [
													{
														"constant": false,
														"id": 1382,
														"mutability": "mutable",
														"name": "schedule",
														"nameLocation": "3611:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1441,
														"src": "3587:32:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage_ptr",
															"typeString": "struct VestingContract.VestingSchedule"
														},
														"typeName": {
															"id": 1381,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1380,
																"name": "VestingSchedule",
																"nameLocations": [
																	"3587:15:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1126,
																"src": "3587:15:6"
															},
															"referencedDeclaration": 1126,
															"src": "3587:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage_ptr",
																"typeString": "struct VestingContract.VestingSchedule"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1387,
												"initialValue": {
													"baseExpression": {
														"id": 1383,
														"name": "vestingSchedules",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "3622:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1126_storage_$",
															"typeString": "mapping(address => struct VestingContract.VestingSchedule storage ref)"
														}
													},
													"id": 1386,
													"indexExpression": {
														"expression": {
															"id": 1384,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3639:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3643:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3639:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3622:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage",
														"typeString": "struct VestingContract.VestingSchedule storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3587:63:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1389,
																	"name": "schedule",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1382,
																	"src": "3669:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage_ptr",
																		"typeString": "struct VestingContract.VestingSchedule storage pointer"
																	}
																},
																"id": 1390,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3678:9:6",
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1111,
																"src": "3669:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3690:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3669:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2076657374696e67207363686564756c6520666f756e64205b696e2072656c65617365546f6b656e7328295d",
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3693:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_355818d83c8a345156e9c9a4dba90156101aa53cf6253a0e31b268cb4f5ed37c",
																"typeString": "literal_string \"No vesting schedule found [in releaseTokens()]\""
															},
															"value": "No vesting schedule found [in releaseTokens()]"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_355818d83c8a345156e9c9a4dba90156101aa53cf6253a0e31b268cb4f5ed37c",
																"typeString": "literal_string \"No vesting schedule found [in releaseTokens()]\""
															}
														],
														"id": 1388,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3661:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3661:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1395,
												"nodeType": "ExpressionStatement",
												"src": "3661:81:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3761:17:6",
															"subExpression": {
																"expression": {
																	"id": 1397,
																	"name": "schedule",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1382,
																	"src": "3762:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage_ptr",
																		"typeString": "struct VestingContract.VestingSchedule storage pointer"
																	}
																},
																"id": 1398,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3771:7:6",
																"memberName": "revoked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1125,
																"src": "3762:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56657374696e67207363686564756c65207265766f6b6564205b696e2072656c65617365546f6b656e7328295d",
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3780:47:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_43d731a8d2f0ada02799d5871bba7214c5049cea0dc0905a332cbb13de3b790e",
																"typeString": "literal_string \"Vesting schedule revoked [in releaseTokens()]\""
															},
															"value": "Vesting schedule revoked [in releaseTokens()]"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_43d731a8d2f0ada02799d5871bba7214c5049cea0dc0905a332cbb13de3b790e",
																"typeString": "literal_string \"Vesting schedule revoked [in releaseTokens()]\""
															}
														],
														"id": 1396,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3753:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3753:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1402,
												"nodeType": "ExpressionStatement",
												"src": "3753:75:6"
											},
											{
												"assignments": [
													1404
												],
												"declarations": [
													{
														"constant": false,
														"id": 1404,
														"mutability": "mutable",
														"name": "releasableAmount",
														"nameLocation": "3849:16:6",
														"nodeType": "VariableDeclaration",
														"scope": 1441,
														"src": "3841:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1403,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3841:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1409,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1406,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3894:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3898:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3894:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1405,
														"name": "calculateReleasableTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "3868:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3868:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3841:64:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1411,
																"name": "releasableAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1404,
																"src": "3924:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3943:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3924:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e73206172652063757272656e746c7920766573746564205b696e2072656c65617365546f6b656e7328295d",
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3946:53:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3b68c92569791860f282db1798d2130f4868b4523af1c81978c30cade9171f05",
																"typeString": "literal_string \"No tokens are currently vested [in releaseTokens()]\""
															},
															"value": "No tokens are currently vested [in releaseTokens()]"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3b68c92569791860f282db1798d2130f4868b4523af1c81978c30cade9171f05",
																"typeString": "literal_string \"No tokens are currently vested [in releaseTokens()]\""
															}
														],
														"id": 1410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3916:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3916:84:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1416,
												"nodeType": "ExpressionStatement",
												"src": "3916:84:6"
											},
											{
												"expression": {
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1417,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "4013:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage_ptr",
																"typeString": "struct VestingContract.VestingSchedule storage pointer"
															}
														},
														"id": 1419,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4022:12:6",
														"memberName": "vestedTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1123,
														"src": "4013:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1423,
																"name": "releasableAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1404,
																"src": "4063:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1420,
																	"name": "schedule",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1382,
																	"src": "4037:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage_ptr",
																		"typeString": "struct VestingContract.VestingSchedule storage pointer"
																	}
																},
																"id": 1421,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4046:12:6",
																"memberName": "vestedTokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1123,
																"src": "4037:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4059:3:6",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 961,
															"src": "4037:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4037:43:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4013:67:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1426,
												"nodeType": "ExpressionStatement",
												"src": "4013:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1430,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4108:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4112:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4108:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1432,
															"name": "releasableAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "4120:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1427,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "4093:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4099:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 261,
														"src": "4093:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4093:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "4093:44:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1436,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4170:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4174:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4170:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1438,
															"name": "releasableAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "4182:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1435,
														"name": "TokensReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "4155:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4155:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1440,
												"nodeType": "EmitStatement",
												"src": "4150:49:6"
											}
										]
									},
									"functionSelector": "a96f8668",
									"id": 1442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "releaseTokens",
									"nameLocation": "3551:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3564:2:6"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3576:0:6"
									},
									"scope": 1524,
									"src": "3542:665:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1500,
										"nodeType": "Block",
										"src": "4286:577:6",
										"statements": [
											{
												"assignments": [
													1451
												],
												"declarations": [
													{
														"constant": false,
														"id": 1451,
														"mutability": "mutable",
														"name": "schedule",
														"nameLocation": "4321:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1500,
														"src": "4297:32:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage_ptr",
															"typeString": "struct VestingContract.VestingSchedule"
														},
														"typeName": {
															"id": 1450,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1449,
																"name": "VestingSchedule",
																"nameLocations": [
																	"4297:15:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1126,
																"src": "4297:15:6"
															},
															"referencedDeclaration": 1126,
															"src": "4297:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage_ptr",
																"typeString": "struct VestingContract.VestingSchedule"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1455,
												"initialValue": {
													"baseExpression": {
														"id": 1452,
														"name": "vestingSchedules",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "4332:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1126_storage_$",
															"typeString": "mapping(address => struct VestingContract.VestingSchedule storage ref)"
														}
													},
													"id": 1454,
													"indexExpression": {
														"id": 1453,
														"name": "beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "4349:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4332:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage",
														"typeString": "struct VestingContract.VestingSchedule storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4297:64:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1457,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1451,
																"src": "4380:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage_ptr",
																	"typeString": "struct VestingContract.VestingSchedule storage pointer"
																}
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4389:9:6",
															"memberName": "revocable",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1121,
															"src": "4380:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56657374696e67207363686564756c65206e6f74207265766f6361626c65205b696e207265766f6b6556657374696e675363686564756c6528295d",
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4400:61:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7441065767ad0fe3bd08de9982a7ce4be699ef924daf185e4fd316647cedf834",
																"typeString": "literal_string \"Vesting schedule not revocable [in revokeVestingSchedule()]\""
															},
															"value": "Vesting schedule not revocable [in revokeVestingSchedule()]"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7441065767ad0fe3bd08de9982a7ce4be699ef924daf185e4fd316647cedf834",
																"typeString": "literal_string \"Vesting schedule not revocable [in revokeVestingSchedule()]\""
															}
														],
														"id": 1456,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4372:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4372:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1461,
												"nodeType": "ExpressionStatement",
												"src": "4372:90:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4481:17:6",
															"subExpression": {
																"expression": {
																	"id": 1463,
																	"name": "schedule",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1451,
																	"src": "4482:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage_ptr",
																		"typeString": "struct VestingContract.VestingSchedule storage pointer"
																	}
																},
																"id": 1464,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4491:7:6",
																"memberName": "revoked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1125,
																"src": "4482:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56657374696e67207363686564756c6520616c7265616479207265766f6b6564205b696e207265766f6b6556657374696e675363686564756c6528295d",
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4500:63:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8068c343730405aa069278bd5a46c221f347524c68990a8a4739ee122c129a07",
																"typeString": "literal_string \"Vesting schedule already revoked [in revokeVestingSchedule()]\""
															},
															"value": "Vesting schedule already revoked [in revokeVestingSchedule()]"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8068c343730405aa069278bd5a46c221f347524c68990a8a4739ee122c129a07",
																"typeString": "literal_string \"Vesting schedule already revoked [in revokeVestingSchedule()]\""
															}
														],
														"id": 1462,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4473:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4473:91:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1468,
												"nodeType": "ExpressionStatement",
												"src": "4473:91:6"
											},
											{
												"expression": {
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1469,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "4577:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage_ptr",
																"typeString": "struct VestingContract.VestingSchedule storage pointer"
															}
														},
														"id": 1471,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4586:7:6",
														"memberName": "revoked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1125,
														"src": "4577:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4596:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4577:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1474,
												"nodeType": "ExpressionStatement",
												"src": "4577:23:6"
											},
											{
												"assignments": [
													1476
												],
												"declarations": [
													{
														"constant": false,
														"id": 1476,
														"mutability": "mutable",
														"name": "remainingTokens",
														"nameLocation": "4621:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 1500,
														"src": "4613:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1475,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4613:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1483,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1480,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1451,
																"src": "4678:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage_ptr",
																	"typeString": "struct VestingContract.VestingSchedule storage pointer"
																}
															},
															"id": 1481,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4687:12:6",
															"memberName": "vestedTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1123,
															"src": "4678:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1477,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1451,
																"src": "4639:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VestingSchedule_$1126_storage_ptr",
																	"typeString": "struct VestingContract.VestingSchedule storage pointer"
																}
															},
															"id": 1478,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4648:11:6",
															"memberName": "totalAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1119,
															"src": "4639:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4660:3:6",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 976,
														"src": "4639:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4639:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4613:97:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1484,
														"name": "remainingTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1476,
														"src": "4725:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1485,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4743:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4725:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1495,
												"nodeType": "IfStatement",
												"src": "4721:90:6",
												"trueBody": {
													"id": 1494,
													"nodeType": "Block",
													"src": "4746:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1490,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "4776:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1491,
																		"name": "remainingTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1476,
																		"src": "4783:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1487,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1109,
																		"src": "4761:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$651",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 1489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4767:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 261,
																	"src": "4761:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4761:38:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1493,
															"nodeType": "ExpressionStatement",
															"src": "4761:38:6"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1497,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "4843:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1496,
														"name": "VestingRevoked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "4828:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4828:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1499,
												"nodeType": "EmitStatement",
												"src": "4823:32:6"
											}
										]
									},
									"functionSelector": "f035a272",
									"id": 1501,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1447,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1446,
												"name": "onlyOwner",
												"nameLocations": [
													"4276:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1169,
												"src": "4276:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4276:9:6"
										}
									],
									"name": "revokeVestingSchedule",
									"nameLocation": "4224:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "4254:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "4246:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4246:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4245:21:6"
									},
									"returnParameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4286:0:6"
									},
									"scope": 1524,
									"src": "4215:648:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1509,
										"nodeType": "Block",
										"src": "4920:41:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1506,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "4938:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4944:9:6",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "4938:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1505,
												"id": 1508,
												"nodeType": "Return",
												"src": "4931:22:6"
											}
										]
									},
									"functionSelector": "557ed1ba",
									"id": 1510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTime",
									"nameLocation": "4880:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4887:2:6"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "4912:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4912:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4911:9:6"
									},
									"scope": 1524,
									"src": "4871:90:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1522,
										"nodeType": "Block",
										"src": "5040:54:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1519,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "5074:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1517,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "5058:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 1518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5064:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 237,
														"src": "5058:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5058:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1516,
												"id": 1521,
												"nodeType": "Return",
												"src": "5051:35:6"
											}
										]
									},
									"functionSelector": "f8b2cb4f",
									"id": 1523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "4978:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "4997:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "4989:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4989:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4988:21:6"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "5032:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5032:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5031:9:6"
									},
									"scope": 1524,
									"src": "4969:125:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1525,
							"src": "179:4918:6",
							"usedErrors": [],
							"usedEvents": [
								1147,
								1153,
								1157
							]
						}
					],
					"src": "33:5064:6"
				},
				"id": 6
			}
		}
	}
}